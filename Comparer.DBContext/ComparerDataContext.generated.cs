//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace Comparer.Data.Context
{
	/// <summary>
	/// Database       : shopbasetest
	/// Data Source    : DS-FUTARK
	/// Server Version : 16.00.1000
	/// </summary>
	public partial class ComparerDataContext : BaseConnection
	{
		public ITable<ActionsProcessingHandler>                     ActionsProcessingHandlers                     { get { return this.GetTable<ActionsProcessingHandler>(); } }
		public ITable<ActionsProcessingHandleResult>                ActionsProcessingHandleResults                { get { return this.GetTable<ActionsProcessingHandleResult>(); } }
		public ITable<ActionsProcessingQueue>                       ActionsProcessingQueues                       { get { return this.GetTable<ActionsProcessingQueue>(); } }
		public ITable<ActionsProcessingQueueArchive>                ActionsProcessingQueueArchives                { get { return this.GetTable<ActionsProcessingQueueArchive>(); } }
		public ITable<ActivityAction>                               ActivityActions                               { get { return this.GetTable<ActivityAction>(); } }
		public ITable<ActivityBatchItem>                            ActivityBatchItems                            { get { return this.GetTable<ActivityBatchItem>(); } }
		public ITable<ActivityEntity>                               ActivityEntities                              { get { return this.GetTable<ActivityEntity>(); } }
		public ITable<ActivityProcess>                              ActivityProcesses                             { get { return this.GetTable<ActivityProcess>(); } }
		public ITable<ActivityProcessType>                          ActivityProcessTypes                          { get { return this.GetTable<ActivityProcessType>(); } }
		public ITable<ActivitySource>                               ActivitySources                               { get { return this.GetTable<ActivitySource>(); } }
		public ITable<ActivityUserBatch>                            ActivityUserBatches                           { get { return this.GetTable<ActivityUserBatch>(); } }
		public ITable<ApiDeliveryService>                           ApiDeliveryServices                           { get { return this.GetTable<ApiDeliveryService>(); } }
		public ITable<ApiDeliveryServiceActionType>                 ApiDeliveryServiceActionTypes                 { get { return this.GetTable<ApiDeliveryServiceActionType>(); } }
		public ITable<ApiDeliveryServiceGroup>                      ApiDeliveryServiceGroups                      { get { return this.GetTable<ApiDeliveryServiceGroup>(); } }
		public ITable<ApiDeliveryServiceGroupOrderLink>             ApiDeliveryServiceGroupOrderLinks             { get { return this.GetTable<ApiDeliveryServiceGroupOrderLink>(); } }
		public ITable<ApiDeliveryServiceGroupsInfo>                 ApiDeliveryServiceGroupsInfo                  { get { return this.GetTable<ApiDeliveryServiceGroupsInfo>(); } }
		public ITable<ApiDeliveryServiceGroupStatus>                ApiDeliveryServiceGroupStatuses               { get { return this.GetTable<ApiDeliveryServiceGroupStatus>(); } }
		public ITable<ApiDeliveryServiceOrder>                      ApiDeliveryServiceOrders                      { get { return this.GetTable<ApiDeliveryServiceOrder>(); } }
		public ITable<ApiDeliveryServiceOrdersArchive>              ApiDeliveryServiceOrdersArchives              { get { return this.GetTable<ApiDeliveryServiceOrdersArchive>(); } }
		public ITable<ApiDeliveryServiceOrdersInfo>                 ApiDeliveryServiceOrdersInfo                  { get { return this.GetTable<ApiDeliveryServiceOrdersInfo>(); } }
		public ITable<ApiDeliveryServiceOrderStatus>                ApiDeliveryServiceOrderStatuses               { get { return this.GetTable<ApiDeliveryServiceOrderStatus>(); } }
		public ITable<ApiDeliveryServiceOrderStatusesHistory>       ApiDeliveryServiceOrderStatusesHistories      { get { return this.GetTable<ApiDeliveryServiceOrderStatusesHistory>(); } }
		public ITable<ApiDeliveryServiceQueue>                      ApiDeliveryServiceQueues                      { get { return this.GetTable<ApiDeliveryServiceQueue>(); } }
		public ITable<ApiDeliveryServiceQueueArchive>               ApiDeliveryServiceQueueArchives               { get { return this.GetTable<ApiDeliveryServiceQueueArchive>(); } }
		public ITable<ApiDeliveryServiceRusPostGroupCaregory>       ApiDeliveryServiceRusPostGroupCaregories      { get { return this.GetTable<ApiDeliveryServiceRusPostGroupCaregory>(); } }
		public ITable<ApiDeliveryServiceRusPostGroupType>           ApiDeliveryServiceRusPostGroupTypes           { get { return this.GetTable<ApiDeliveryServiceRusPostGroupType>(); } }
		public ITable<ApiDeliveryServicesAccount>                   ApiDeliveryServicesAccounts                   { get { return this.GetTable<ApiDeliveryServicesAccount>(); } }
		public ITable<ApiDeliveryServicesCastOrderDeliveryKind>     ApiDeliveryServicesCastOrderDeliveryKinds     { get { return this.GetTable<ApiDeliveryServicesCastOrderDeliveryKind>(); } }
		public ITable<ApiDeliveryServicesIKN>                       ApiDeliveryServicesIKNs                       { get { return this.GetTable<ApiDeliveryServicesIKN>(); } }
		public ITable<ApiDeliveryServicesIKNCondition>              ApiDeliveryServicesIKNConditions              { get { return this.GetTable<ApiDeliveryServicesIKNCondition>(); } }
		public ITable<ApiDeliveryServicesIKNRule>                   ApiDeliveryServicesIKNRules                   { get { return this.GetTable<ApiDeliveryServicesIKNRule>(); } }
		public ITable<ApiDeliveryServicesIKNRuleCondition>          ApiDeliveryServicesIKNRuleConditions          { get { return this.GetTable<ApiDeliveryServicesIKNRuleCondition>(); } }
		public ITable<ApiDeliveryServicesIKNRuleConstraint>         ApiDeliveryServicesIKNRuleConstraints         { get { return this.GetTable<ApiDeliveryServicesIKNRuleConstraint>(); } }
		public ITable<ApiDeliveryServicesIKNRulesOld>               ApiDeliveryServicesIKNRulesOlds               { get { return this.GetTable<ApiDeliveryServicesIKNRulesOld>(); } }
		public ITable<ApiDeliveryServiceTracker>                    ApiDeliveryServiceTrackers                    { get { return this.GetTable<ApiDeliveryServiceTracker>(); } }
		public ITable<ApiDeliveryServiceUserAction>                 ApiDeliveryServiceUserActions                 { get { return this.GetTable<ApiDeliveryServiceUserAction>(); } }
		public ITable<BarCode>                                      BarCodes                                      { get { return this.GetTable<BarCode>(); } }
		public ITable<BarCodesDouble>                               BarCodesDoubles                               { get { return this.GetTable<BarCodesDouble>(); } }
		public ITable<BarCodesSession>                              BarCodesSessions                              { get { return this.GetTable<BarCodesSession>(); } }
		public ITable<BarCodesSessionBatch>                         BarCodesSessionBatches                        { get { return this.GetTable<BarCodesSessionBatch>(); } }
		public ITable<BlackListStatus>                              BlackListStatuses                             { get { return this.GetTable<BlackListStatus>(); } }
		public ITable<BQExportOrder>                                BQExportOrders                                { get { return this.GetTable<BQExportOrder>(); } }
		public ITable<BQObjectType>                                 BQObjectTypes                                 { get { return this.GetTable<BQObjectType>(); } }
		public ITable<BQOrderItemsLastData>                         BQOrderItemsLastData                          { get { return this.GetTable<BQOrderItemsLastData>(); } }
		public ITable<BQOrdersLastData>                             BQOrdersLastData                              { get { return this.GetTable<BQOrdersLastData>(); } }
		public ITable<BQQueue>                                      BQQueues                                      { get { return this.GetTable<BQQueue>(); } }
		public ITable<BQQueueHistory>                               BQQueueHistories                              { get { return this.GetTable<BQQueueHistory>(); } }
		public ITable<BQQueueHistoryDate>                           BQQueueHistoryDates                           { get { return this.GetTable<BQQueueHistoryDate>(); } }
		public ITable<ClientDeliveredWhatsAppTemplatesBuffer>       ClientDeliveredWhatsAppTemplatesBuffers       { get { return this.GetTable<ClientDeliveredWhatsAppTemplatesBuffer>(); } }
		public ITable<ClientOrdersDelivery>                         ClientOrdersDeliveries                        { get { return this.GetTable<ClientOrdersDelivery>(); } }
		public ITable<ClientOrdersSync>                             ClientOrdersSyncs                             { get { return this.GetTable<ClientOrdersSync>(); } }
		public ITable<ClientsBlackList>                             ClientsBlackLists                             { get { return this.GetTable<ClientsBlackList>(); } }
		public ITable<ClientsForDelete>                             ClientsForDeletes                             { get { return this.GetTable<ClientsForDelete>(); } }
		public ITable<ClientType>                                   ClientTypes                                   { get { return this.GetTable<ClientType>(); } }
		public ITable<ClosestCompetitor>                            ClosestCompetitors                            { get { return this.GetTable<ClosestCompetitor>(); } }
		public ITable<Competitor>                                   Competitors                                   { get { return this.GetTable<Competitor>(); } }
		public ITable<CompetitorsFeed>                              CompetitorsFeeds                              { get { return this.GetTable<CompetitorsFeed>(); } }
		public ITable<CompetitorsFeedItem>                          CompetitorsFeedItems                          { get { return this.GetTable<CompetitorsFeedItem>(); } }
		public ITable<CompetitorsFeedItemsHistory>                  CompetitorsFeedItemsHistories                 { get { return this.GetTable<CompetitorsFeedItemsHistory>(); } }
		public ITable<CompetitorsFeedItemsOperation>                CompetitorsFeedItemsOperations                { get { return this.GetTable<CompetitorsFeedItemsOperation>(); } }
		public ITable<CompetitorsFeedProductLink>                   CompetitorsFeedProductLinks                   { get { return this.GetTable<CompetitorsFeedProductLink>(); } }
		public ITable<CompetitorsFeedSetting>                       CompetitorsFeedSettings                       { get { return this.GetTable<CompetitorsFeedSetting>(); } }
		public ITable<CompetitorsFeedSettingsLink>                  CompetitorsFeedSettingsLinks                  { get { return this.GetTable<CompetitorsFeedSettingsLink>(); } }
		public ITable<ComplectingDocument>                          ComplectingDocuments                          { get { return this.GetTable<ComplectingDocument>(); } }
		public ITable<ComplectingDocumentsArchive>                  ComplectingDocumentsArchives                  { get { return this.GetTable<ComplectingDocumentsArchive>(); } }
		public ITable<ComplectingDocumentsItem>                     ComplectingDocumentsItems                     { get { return this.GetTable<ComplectingDocumentsItem>(); } }
		public ITable<ComplectingDocumentsItemsArchive>             ComplectingDocumentsItemsArchives             { get { return this.GetTable<ComplectingDocumentsItemsArchive>(); } }
		public ITable<Country>                                      Countries                                     { get { return this.GetTable<Country>(); } }
		public ITable<COURIER>                                      COURIERS                                      { get { return this.GetTable<COURIER>(); } }
		public ITable<CouriersArchive>                              CouriersArchives                              { get { return this.GetTable<CouriersArchive>(); } }
		public ITable<CRPTDataMatrixInternalStatus>                 CRPTDataMatrixInternalStatuses                { get { return this.GetTable<CRPTDataMatrixInternalStatus>(); } }
		public ITable<CRPTDocument>                                 CRPTDocuments                                 { get { return this.GetTable<CRPTDocument>(); } }
		public ITable<CRPTDocumentInternalStatus>                   CRPTDocumentInternalStatuses                  { get { return this.GetTable<CRPTDocumentInternalStatus>(); } }
		public ITable<CRPTDocumentItem>                             CRPTDocumentItems                             { get { return this.GetTable<CRPTDocumentItem>(); } }
		public ITable<CRPTDocumentStatus>                           CRPTDocumentStatuses                          { get { return this.GetTable<CRPTDocumentStatus>(); } }
		public ITable<CRPTDocumentType>                             CRPTDocumentTypes                             { get { return this.GetTable<CRPTDocumentType>(); } }
		public ITable<CRPTDocumentWithPurchaseTaskLink>             CRPTDocumentWithPurchaseTaskLinks             { get { return this.GetTable<CRPTDocumentWithPurchaseTaskLink>(); } }
		public ITable<CRPTTechCardBarcode>                          CRPTTechCardBarcodes                          { get { return this.GetTable<CRPTTechCardBarcode>(); } }
		public ITable<CRPTWithEDODocumentLink>                      CRPTWithEDODocumentLinks                      { get { return this.GetTable<CRPTWithEDODocumentLink>(); } }
		public ITable<Currency>                                     Currencies                                    { get { return this.GetTable<Currency>(); } }
		public ITable<DailyCurrency>                                DailyCurrencies                               { get { return this.GetTable<DailyCurrency>(); } }
		public ITable<DataFormat>                                   DataFormats                                   { get { return this.GetTable<DataFormat>(); } }
		public ITable<DataMatrixCRPTPuttingDocument>                DataMatrixCRPTPuttingDocuments                { get { return this.GetTable<DataMatrixCRPTPuttingDocument>(); } }
		public ITable<DataMatrixCRPTPuttingDocumentItem>            DataMatrixCRPTPuttingDocumentItems            { get { return this.GetTable<DataMatrixCRPTPuttingDocumentItem>(); } }
		public ITable<DataMatrixCRPTPuttingDocumentsArchive>        DataMatrixCRPTPuttingDocumentsArchives        { get { return this.GetTable<DataMatrixCRPTPuttingDocumentsArchive>(); } }
		public ITable<DataMatrixCRPTPuttingQueue>                   DataMatrixCRPTPuttingQueues                   { get { return this.GetTable<DataMatrixCRPTPuttingQueue>(); } }
		public ITable<DataMatrixCRPTPuttingQueueArchive>            DataMatrixCRPTPuttingQueueArchives            { get { return this.GetTable<DataMatrixCRPTPuttingQueueArchive>(); } }
		public ITable<DataMatrixCRPTWithdrawalDocument>             DataMatrixCRPTWithdrawalDocuments             { get { return this.GetTable<DataMatrixCRPTWithdrawalDocument>(); } }
		public ITable<DataMatrixCRPTWithdrawalDocumentAction>       DataMatrixCRPTWithdrawalDocumentActions       { get { return this.GetTable<DataMatrixCRPTWithdrawalDocumentAction>(); } }
		public ITable<DataMatrixCRPTWithdrawalDocumentCRPTStatus>   DataMatrixCRPTWithdrawalDocumentCRPTStatuses  { get { return this.GetTable<DataMatrixCRPTWithdrawalDocumentCRPTStatus>(); } }
		public ITable<DataMatrixCRPTWithdrawalDocumentItem>         DataMatrixCRPTWithdrawalDocumentItems         { get { return this.GetTable<DataMatrixCRPTWithdrawalDocumentItem>(); } }
		public ITable<DataMatrixCRPTWithdrawalDocumentsArchive>     DataMatrixCRPTWithdrawalDocumentsArchives     { get { return this.GetTable<DataMatrixCRPTWithdrawalDocumentsArchive>(); } }
		public ITable<DataMatrixCRPTWithdrawalDocumentStatus>       DataMatrixCRPTWithdrawalDocumentStatuses      { get { return this.GetTable<DataMatrixCRPTWithdrawalDocumentStatus>(); } }
		public ITable<DataMatrixCRPTWithdrawalDocumentType>         DataMatrixCRPTWithdrawalDocumentTypes         { get { return this.GetTable<DataMatrixCRPTWithdrawalDocumentType>(); } }
		public ITable<DebugFile>                                    DebugFiles                                    { get { return this.GetTable<DebugFile>(); } }
		public ITable<DebugParameter>                               DebugParameters                               { get { return this.GetTable<DebugParameter>(); } }
		public ITable<DebugSession>                                 DebugSessions                                 { get { return this.GetTable<DebugSession>(); } }
		public ITable<DeliveryHolyday>                              DeliveryHolydays                              { get { return this.GetTable<DeliveryHolyday>(); } }
		public ITable<DeliveryKindsService>                         DeliveryKindsServices                         { get { return this.GetTable<DeliveryKindsService>(); } }
		public ITable<DeliveryServicePrinterConfiguration>          DeliveryServicePrinterConfigurations          { get { return this.GetTable<DeliveryServicePrinterConfiguration>(); } }
		public ITable<Department>                                   Departments                                   { get { return this.GetTable<Department>(); } }
		public ITable<DiscountCalcArchive>                          DiscountCalcArchives                          { get { return this.GetTable<DiscountCalcArchive>(); } }
		public ITable<DiscountGroup>                                DiscountGroups                                { get { return this.GetTable<DiscountGroup>(); } }
		public ITable<DiscountObjectType>                           DiscountObjectTypes                           { get { return this.GetTable<DiscountObjectType>(); } }
		public ITable<DiscountsGroupsLink>                          DiscountsGroupsLinks                          { get { return this.GetTable<DiscountsGroupsLink>(); } }
		public ITable<DiscountType>                                 DiscountTypes                                 { get { return this.GetTable<DiscountType>(); } }
		public ITable<DiscountValuesToDiscountId>                   DiscountValuesToDiscountIds                   { get { return this.GetTable<DiscountValuesToDiscountId>(); } }
		public ITable<DISTRIBUTOR>                                  DISTRIBUTORS                                  { get { return this.GetTable<DISTRIBUTOR>(); } }
		public ITable<DistributorsApiOrder>                         DistributorsApiOrders                         { get { return this.GetTable<DistributorsApiOrder>(); } }
		public ITable<DistributorsApiOrdersArchive>                 DistributorsApiOrdersArchives                 { get { return this.GetTable<DistributorsApiOrdersArchive>(); } }
		public ITable<DistributorsApiOrdersContent>                 DistributorsApiOrdersContents                 { get { return this.GetTable<DistributorsApiOrdersContent>(); } }
		public ITable<DistributorsApiOrdersContentArchive>          DistributorsApiOrdersContentArchives          { get { return this.GetTable<DistributorsApiOrdersContentArchive>(); } }
		public ITable<DistributorsApiSetting>                       DistributorsApiSettings                       { get { return this.GetTable<DistributorsApiSetting>(); } }
		public ITable<EmailSiteStatusTemplate>                      EmailSiteStatusTemplates                      { get { return this.GetTable<EmailSiteStatusTemplate>(); } }
		public ITable<ExcludedOrdersForReserve>                     ExcludedOrdersForReserves                     { get { return this.GetTable<ExcludedOrdersForReserve>(); } }
		public ITable<ExportBarcode>                                ExportBarcodes                                { get { return this.GetTable<ExportBarcode>(); } }
		public ITable<ExportBarcodesSession>                        ExportBarcodesSessions                        { get { return this.GetTable<ExportBarcodesSession>(); } }
		public ITable<ExportBarcodesSessionItem>                    ExportBarcodesSessionItems                    { get { return this.GetTable<ExportBarcodesSessionItem>(); } }
		public ITable<ExportBarcodesSessionItemsArchive>            ExportBarcodesSessionItemsArchives            { get { return this.GetTable<ExportBarcodesSessionItemsArchive>(); } }
		public ITable<ExportBarcodesSessionsArchive>                ExportBarcodesSessionsArchives                { get { return this.GetTable<ExportBarcodesSessionsArchive>(); } }
		public ITable<ExportBrand>                                  ExportBrands                                  { get { return this.GetTable<ExportBrand>(); } }
		public ITable<ExportBrandsSession>                          ExportBrandsSessions                          { get { return this.GetTable<ExportBrandsSession>(); } }
		public ITable<ExportBrandsSessionItem>                      ExportBrandsSessionItems                      { get { return this.GetTable<ExportBrandsSessionItem>(); } }
		public ITable<ExportBrandsSessionItemsArchive>              ExportBrandsSessionItemsArchives              { get { return this.GetTable<ExportBrandsSessionItemsArchive>(); } }
		public ITable<ExportBrandsSessionsArchive>                  ExportBrandsSessionsArchives                  { get { return this.GetTable<ExportBrandsSessionsArchive>(); } }
		public ITable<ExportClient>                                 ExportClients                                 { get { return this.GetTable<ExportClient>(); } }
		public ITable<ExportClientsSession>                         ExportClientsSessions                         { get { return this.GetTable<ExportClientsSession>(); } }
		public ITable<ExportClientsSessionItem>                     ExportClientsSessionItems                     { get { return this.GetTable<ExportClientsSessionItem>(); } }
		public ITable<ExportClientsSessionItemsArchive>             ExportClientsSessionItemsArchives             { get { return this.GetTable<ExportClientsSessionItemsArchive>(); } }
		public ITable<ExportClientsSessionsArchive>                 ExportClientsSessionsArchives                 { get { return this.GetTable<ExportClientsSessionsArchive>(); } }
		public ITable<ExportDistributor>                            ExportDistributors                            { get { return this.GetTable<ExportDistributor>(); } }
		public ITable<ExportDistributorsExchangeId>                 ExportDistributorsExchangeIds                 { get { return this.GetTable<ExportDistributorsExchangeId>(); } }
		public ITable<ExportDistributorsSession>                    ExportDistributorsSessions                    { get { return this.GetTable<ExportDistributorsSession>(); } }
		public ITable<ExportDistributorsSessionItem>                ExportDistributorsSessionItems                { get { return this.GetTable<ExportDistributorsSessionItem>(); } }
		public ITable<ExportDistributorsSessionItemsArchive>        ExportDistributorsSessionItemsArchives        { get { return this.GetTable<ExportDistributorsSessionItemsArchive>(); } }
		public ITable<ExportDistributorsSessionsArchive>            ExportDistributorsSessionsArchives            { get { return this.GetTable<ExportDistributorsSessionsArchive>(); } }
		public ITable<ExportOrder>                                  ExportOrders                                  { get { return this.GetTable<ExportOrder>(); } }
		public ITable<ExportOrderInvoiceSummary>                    ExportOrderInvoiceSummaries                   { get { return this.GetTable<ExportOrderInvoiceSummary>(); } }
		public ITable<ExportOrderInvoiceSummarySession>             ExportOrderInvoiceSummarySessions             { get { return this.GetTable<ExportOrderInvoiceSummarySession>(); } }
		public ITable<ExportOrderInvoiceSummarySessionItem>         ExportOrderInvoiceSummarySessionItems         { get { return this.GetTable<ExportOrderInvoiceSummarySessionItem>(); } }
		public ITable<ExportOrderInvoiceSummarySessionItemsArchive> ExportOrderInvoiceSummarySessionItemsArchives { get { return this.GetTable<ExportOrderInvoiceSummarySessionItemsArchive>(); } }
		public ITable<ExportOrderInvoiceSummarySessionsArchive>     ExportOrderInvoiceSummarySessionsArchives     { get { return this.GetTable<ExportOrderInvoiceSummarySessionsArchive>(); } }
		public ITable<ExportOrdersSession>                          ExportOrdersSessions                          { get { return this.GetTable<ExportOrdersSession>(); } }
		public ITable<ExportOrdersSessionItem>                      ExportOrdersSessionItems                      { get { return this.GetTable<ExportOrdersSessionItem>(); } }
		public ITable<ExportOrdersSessionItemsArchive>              ExportOrdersSessionItemsArchives              { get { return this.GetTable<ExportOrdersSessionItemsArchive>(); } }
		public ITable<ExportOrdersSessionsArchive>                  ExportOrdersSessionsArchives                  { get { return this.GetTable<ExportOrdersSessionsArchive>(); } }
		public ITable<ExportOrderWM>                                ExportOrderWMS                                { get { return this.GetTable<ExportOrderWM>(); } }
		public ITable<ExportOrderWMSSession>                        ExportOrderWMSSessions                        { get { return this.GetTable<ExportOrderWMSSession>(); } }
		public ITable<ExportOrderWMSSessionItem>                    ExportOrderWMSSessionItems                    { get { return this.GetTable<ExportOrderWMSSessionItem>(); } }
		public ITable<ExportOrderWMSSessionItemsArchive>            ExportOrderWMSSessionItemsArchives            { get { return this.GetTable<ExportOrderWMSSessionItemsArchive>(); } }
		public ITable<ExportOrderWMSSessionsArchive>                ExportOrderWMSSessionsArchives                { get { return this.GetTable<ExportOrderWMSSessionsArchive>(); } }
		public ITable<ExportProduct>                                ExportProducts                                { get { return this.GetTable<ExportProduct>(); } }
		public ITable<ExportProductReservesChangesDate>             ExportProductReservesChangesDates             { get { return this.GetTable<ExportProductReservesChangesDate>(); } }
		public ITable<ExportProductsSession>                        ExportProductsSessions                        { get { return this.GetTable<ExportProductsSession>(); } }
		public ITable<ExportProductsSessionItem>                    ExportProductsSessionItems                    { get { return this.GetTable<ExportProductsSessionItem>(); } }
		public ITable<ExportProductsSessionItemsArchive>            ExportProductsSessionItemsArchives            { get { return this.GetTable<ExportProductsSessionItemsArchive>(); } }
		public ITable<ExportProductsSessionsArchive>                ExportProductsSessionsArchives                { get { return this.GetTable<ExportProductsSessionsArchive>(); } }
		public ITable<ExportPurchaseTask>                           ExportPurchaseTasks                           { get { return this.GetTable<ExportPurchaseTask>(); } }
		public ITable<ExportPurchaseTasksSession>                   ExportPurchaseTasksSessions                   { get { return this.GetTable<ExportPurchaseTasksSession>(); } }
		public ITable<ExportPurchaseTasksSessionItem>               ExportPurchaseTasksSessionItems               { get { return this.GetTable<ExportPurchaseTasksSessionItem>(); } }
		public ITable<ExportPurchaseTasksSessionItemsArchive>       ExportPurchaseTasksSessionItemsArchives       { get { return this.GetTable<ExportPurchaseTasksSessionItemsArchive>(); } }
		public ITable<ExportPurchaseTasksSessionsArchive>           ExportPurchaseTasksSessionsArchives           { get { return this.GetTable<ExportPurchaseTasksSessionsArchive>(); } }
		public ITable<ExportPurchaseTasksSetting>                   ExportPurchaseTasksSettings                   { get { return this.GetTable<ExportPurchaseTasksSetting>(); } }
		public ITable<ExportRefundTask>                             ExportRefundTasks                             { get { return this.GetTable<ExportRefundTask>(); } }
		public ITable<ExportRefundTasksSession>                     ExportRefundTasksSessions                     { get { return this.GetTable<ExportRefundTasksSession>(); } }
		public ITable<ExportRefundTasksSessionItem>                 ExportRefundTasksSessionItems                 { get { return this.GetTable<ExportRefundTasksSessionItem>(); } }
		public ITable<ExportRefundTasksSessionItemsArchive>         ExportRefundTasksSessionItemsArchives         { get { return this.GetTable<ExportRefundTasksSessionItemsArchive>(); } }
		public ITable<ExportRefundTasksSessionsArchive>             ExportRefundTasksSessionsArchives             { get { return this.GetTable<ExportRefundTasksSessionsArchive>(); } }
		public ITable<ExportRozliv>                                 ExportRozlivs                                 { get { return this.GetTable<ExportRozliv>(); } }
		public ITable<ExportRozlivSession>                          ExportRozlivSessions                          { get { return this.GetTable<ExportRozlivSession>(); } }
		public ITable<ExportRozlivSessionItem>                      ExportRozlivSessionItems                      { get { return this.GetTable<ExportRozlivSessionItem>(); } }
		public ITable<ExportRozlivSessionItemsArchive>              ExportRozlivSessionItemsArchives              { get { return this.GetTable<ExportRozlivSessionItemsArchive>(); } }
		public ITable<ExportRozlivSessionsArchive>                  ExportRozlivSessionsArchives                  { get { return this.GetTable<ExportRozlivSessionsArchive>(); } }
		public ITable<Holiday>                                      Holidays                                      { get { return this.GetTable<Holiday>(); } }
		public ITable<HttpMethod>                                   HttpMethods                                   { get { return this.GetTable<HttpMethod>(); } }
		public ITable<KitDefinition>                                KitDefinitions                                { get { return this.GetTable<KitDefinition>(); } }
		public ITable<LINK>                                         LINKS                                         { get { return this.GetTable<LINK>(); } }
		public ITable<MANUFACTURER>                                 MANUFACTURERS                                 { get { return this.GetTable<MANUFACTURER>(); } }
		public ITable<MonobrandKit>                                 MonobrandKits                                 { get { return this.GetTable<MonobrandKit>(); } }
		public ITable<MousetrapClient>                              MousetrapClients                              { get { return this.GetTable<MousetrapClient>(); } }
		public ITable<MousetrapDonorOrder>                          MousetrapDonorOrders                          { get { return this.GetTable<MousetrapDonorOrder>(); } }
		public ITable<MousetrapExportInterval>                      MousetrapExportIntervals                      { get { return this.GetTable<MousetrapExportInterval>(); } }
		public ITable<NeedReceivedOrder>                            NeedReceivedOrders                            { get { return this.GetTable<NeedReceivedOrder>(); } }
		public ITable<ObjectSyncSetting>                            ObjectSyncSettings                            { get { return this.GetTable<ObjectSyncSetting>(); } }
		public ITable<ObjectType>                                   ObjectTypes                                   { get { return this.GetTable<ObjectType>(); } }
		public ITable<OrderExportToWmsFilter>                       OrderExportToWmsFilters                       { get { return this.GetTable<OrderExportToWmsFilter>(); } }
		public ITable<OrderItemsInstockQuantityCorrectHistory>      OrderItemsInstockQuantityCorrectHistories     { get { return this.GetTable<OrderItemsInstockQuantityCorrectHistory>(); } }
		public ITable<OrdersContentTriggerUpdateOrderNumber>        OrdersContentTriggerUpdateOrderNumbers        { get { return this.GetTable<OrdersContentTriggerUpdateOrderNumber>(); } }
		public ITable<OrdersContentTriggerUpdateResult>             OrdersContentTriggerUpdateResults             { get { return this.GetTable<OrdersContentTriggerUpdateResult>(); } }
		public ITable<OrdersInstockQuantityCorrectHistory>          OrdersInstockQuantityCorrectHistories         { get { return this.GetTable<OrdersInstockQuantityCorrectHistory>(); } }
		public ITable<OrdersReservesMovedHistory>                   OrdersReservesMovedHistories                  { get { return this.GetTable<OrdersReservesMovedHistory>(); } }
		public ITable<OrdersStatusHistoryTriggerAction>             OrdersStatusHistoryTriggerActions             { get { return this.GetTable<OrdersStatusHistoryTriggerAction>(); } }
		public ITable<OrdersStatusHistoryTriggerUpdateOrderNumber>  OrdersStatusHistoryTriggerUpdateOrderNumbers  { get { return this.GetTable<OrdersStatusHistoryTriggerUpdateOrderNumber>(); } }
		public ITable<OrdersWarehouseContainer>                     OrdersWarehouseContainers                     { get { return this.GetTable<OrdersWarehouseContainer>(); } }
		public ITable<PaymentType>                                  PaymentTypes                                  { get { return this.GetTable<PaymentType>(); } }
		public ITable<PRICE>                                        PRICES                                        { get { return this.GetTable<PRICE>(); } }
		public ITable<PriceParam>                                   PriceParams                                   { get { return this.GetTable<PriceParam>(); } }
		public ITable<PRICESRECORD>                                 PRICESRECORDS                                 { get { return this.GetTable<PRICESRECORD>(); } }
		public ITable<PRODUCT>                                      PRODUCTS                                      { get { return this.GetTable<PRODUCT>(); } }
		public ITable<ProductInstockCorrectHistory>                 ProductInstockCorrectHistories                { get { return this.GetTable<ProductInstockCorrectHistory>(); } }
		public ITable<ProductQuality>                               ProductQualities                              { get { return this.GetTable<ProductQuality>(); } }
		public ITable<ProductReservesChangeHistory>                 ProductReservesChangeHistories                { get { return this.GetTable<ProductReservesChangeHistory>(); } }
		public ITable<ProductsQualityInstock>                       ProductsQualityInstocks                       { get { return this.GetTable<ProductsQualityInstock>(); } }
		public ITable<ProductsSync>                                 ProductsSyncs                                 { get { return this.GetTable<ProductsSync>(); } }
		public ITable<Role>                                         Roles                                         { get { return this.GetTable<Role>(); } }
		public ITable<RozlivUtDocument>                             RozlivUtDocuments                             { get { return this.GetTable<RozlivUtDocument>(); } }
		public ITable<RozlivUtDocumentItem>                         RozlivUtDocumentItems                         { get { return this.GetTable<RozlivUtDocumentItem>(); } }
		public ITable<ShopBaseObjectType>                           ShopBaseObjectTypes                           { get { return this.GetTable<ShopBaseObjectType>(); } }
		public ITable<ShowcaseProductsStock>                        ShowcaseProductsStocks                        { get { return this.GetTable<ShowcaseProductsStock>(); } }
		public ITable<SiteApiRequest>                               SiteApiRequests                               { get { return this.GetTable<SiteApiRequest>(); } }
		public ITable<SiteObjectSyncSetting>                        SiteObjectSyncSettings                        { get { return this.GetTable<SiteObjectSyncSetting>(); } }
		public ITable<SiteProductsRule>                             SiteProductsRules                             { get { return this.GetTable<SiteProductsRule>(); } }
		public ITable<SiteProductsRuleObjectType>                   SiteProductsRuleObjectTypes                   { get { return this.GetTable<SiteProductsRuleObjectType>(); } }
		public ITable<SiteProductsRulesBrandLink>                   SiteProductsRulesBrandLinks                   { get { return this.GetTable<SiteProductsRulesBrandLink>(); } }
		public ITable<SiteProductsRulesDistributorLink>             SiteProductsRulesDistributorLinks             { get { return this.GetTable<SiteProductsRulesDistributorLink>(); } }
		public ITable<SiteProductsRulesProductLink>                 SiteProductsRulesProductLinks                 { get { return this.GetTable<SiteProductsRulesProductLink>(); } }
		public ITable<SiteProductsRuleType>                         SiteProductsRuleTypes                         { get { return this.GetTable<SiteProductsRuleType>(); } }
		public ITable<SitesSync>                                    SitesSyncs                                    { get { return this.GetTable<SitesSync>(); } }
		public ITable<SitesSyncBlockInfo>                           SitesSyncBlockInfo                            { get { return this.GetTable<SitesSyncBlockInfo>(); } }
		public ITable<SmsSiteStatusTemplate>                        SmsSiteStatusTemplates                        { get { return this.GetTable<SmsSiteStatusTemplate>(); } }
		public ITable<StoringScanHistory>                           StoringScanHistories                          { get { return this.GetTable<StoringScanHistory>(); } }
		public ITable<SUZOrder>                                     SUZOrders                                     { get { return this.GetTable<SUZOrder>(); } }
		public ITable<SUZOrderItem>                                 SUZOrderItems                                 { get { return this.GetTable<SUZOrderItem>(); } }
		public ITable<SUZOrderItemDataMatrix>                       SUZOrderItemDataMatrixes                      { get { return this.GetTable<SUZOrderItemDataMatrix>(); } }
		public ITable<SUZPurchaseTask>                              SUZPurchaseTasks                              { get { return this.GetTable<SUZPurchaseTask>(); } }
		public ITable<SUZPurchaseTaskOrder>                         SUZPurchaseTaskOrders                         { get { return this.GetTable<SUZPurchaseTaskOrder>(); } }
		public ITable<SUZPurchaseTaskOrdersArchive>                 SUZPurchaseTaskOrdersArchives                 { get { return this.GetTable<SUZPurchaseTaskOrdersArchive>(); } }
		public ITable<SUZPurchaseTasksArchive>                      SUZPurchaseTasksArchives                      { get { return this.GetTable<SUZPurchaseTasksArchive>(); } }
		public ITable<SyncDeletedObjectSite>                        SyncDeletedObjectSites                        { get { return this.GetTable<SyncDeletedObjectSite>(); } }
		public ITable<SyncObjectsQueue>                             SyncObjectsQueues                             { get { return this.GetTable<SyncObjectsQueue>(); } }
		public ITable<SyncObjectsQueueArchive>                      SyncObjectsQueueArchives                      { get { return this.GetTable<SyncObjectsQueueArchive>(); } }
		public ITable<SyncProductsQueue>                            SyncProductsQueues                            { get { return this.GetTable<SyncProductsQueue>(); } }
		public ITable<SyncProductsQueueArchive>                     SyncProductsQueueArchives                     { get { return this.GetTable<SyncProductsQueueArchive>(); } }
		public ITable<SyncProtocol>                                 SyncProtocols                                 { get { return this.GetTable<SyncProtocol>(); } }
		public ITable<SyncQueueIn>                                  SyncQueueIns                                  { get { return this.GetTable<SyncQueueIn>(); } }
		public ITable<SyncQueueInArchive>                           SyncQueueInArchives                           { get { return this.GetTable<SyncQueueInArchive>(); } }
		public ITable<SyncQueueOut>                                 SyncQueueOuts                                 { get { return this.GetTable<SyncQueueOut>(); } }
		public ITable<SyncQueueOutArchive>                          SyncQueueOutArchives                          { get { return this.GetTable<SyncQueueOutArchive>(); } }
		public ITable<TaskScheduler>                                TaskSchedulers                                { get { return this.GetTable<TaskScheduler>(); } }
		public ITable<Template>                                     Templates                                     { get { return this.GetTable<Template>(); } }
		public ITable<TemplateType>                                 TemplateTypes                                 { get { return this.GetTable<TemplateType>(); } }
		public ITable<TracingPackage>                               TracingPackages                               { get { return this.GetTable<TracingPackage>(); } }
		public ITable<TracingPackageItem>                           TracingPackageItems                           { get { return this.GetTable<TracingPackageItem>(); } }
		public ITable<USER>                                         USERS                                         { get { return this.GetTable<USER>(); } }
		public ITable<UserAction>                                   UserActions                                   { get { return this.GetTable<UserAction>(); } }
		public ITable<UserPassword>                                 UserPasswords                                 { get { return this.GetTable<UserPassword>(); } }
		public ITable<UsersBound>                                   UsersBounds                                   { get { return this.GetTable<UsersBound>(); } }
		public ITable<UserSession>                                  UserSessions                                  { get { return this.GetTable<UserSession>(); } }
		public ITable<UsersPlanReportCallCount>                     UsersPlanReportCallCounts                     { get { return this.GetTable<UsersPlanReportCallCount>(); } }
		public ITable<UsersPlanReportParam>                         UsersPlanReportParams                         { get { return this.GetTable<UsersPlanReportParam>(); } }
		public ITable<UserStatus>                                   UserStatuses                                  { get { return this.GetTable<UserStatus>(); } }
		public ITable<UtCurrencyExchangeRateHistory>                UtCurrencyExchangeRateHistories               { get { return this.GetTable<UtCurrencyExchangeRateHistory>(); } }
		public ITable<UtDoubtfulPrice>                              UtDoubtfulPrices                              { get { return this.GetTable<UtDoubtfulPrice>(); } }
		public ITable<UtDoubtfulPriceDocument>                      UtDoubtfulPriceDocuments                      { get { return this.GetTable<UtDoubtfulPriceDocument>(); } }
		public ITable<UTExportOrder>                                UTExportOrders                                { get { return this.GetTable<UTExportOrder>(); } }
		public ITable<UTExportOrdersSession>                        UTExportOrdersSessions                        { get { return this.GetTable<UTExportOrdersSession>(); } }
		public ITable<UTExportOrdersSessionItem>                    UTExportOrdersSessionItems                    { get { return this.GetTable<UTExportOrdersSessionItem>(); } }
		public ITable<UTExportOrdersSessionItemsArchive>            UTExportOrdersSessionItemsArchives            { get { return this.GetTable<UTExportOrdersSessionItemsArchive>(); } }
		public ITable<UTExportOrdersSessionsArchive>                UTExportOrdersSessionsArchives                { get { return this.GetTable<UTExportOrdersSessionsArchive>(); } }
		public ITable<UTOrderHistory>                               UTOrderHistories                              { get { return this.GetTable<UTOrderHistory>(); } }
		public ITable<UtPrice>                                      UtPrices                                      { get { return this.GetTable<UtPrice>(); } }
		public ITable<UtPriceDocument>                              UtPriceDocuments                              { get { return this.GetTable<UtPriceDocument>(); } }
		public ITable<UtPriceDocumentsArchive>                      UtPriceDocumentsArchives                      { get { return this.GetTable<UtPriceDocumentsArchive>(); } }
		public ITable<UtPricesArchive>                              UtPricesArchives                              { get { return this.GetTable<UtPricesArchive>(); } }
		public ITable<UtPriceType>                                  UtPriceTypes                                  { get { return this.GetTable<UtPriceType>(); } }
		public ITable<VoximplantOrder>                              VoximplantOrders                              { get { return this.GetTable<VoximplantOrder>(); } }
		public ITable<VoximplantOrdersArchive>                      VoximplantOrdersArchives                      { get { return this.GetTable<VoximplantOrdersArchive>(); } }
		public ITable<Warehouse>                                    Warehouses                                    { get { return this.GetTable<Warehouse>(); } }
		public ITable<WarehouseCell>                                WarehouseCells                                { get { return this.GetTable<WarehouseCell>(); } }
		public ITable<WarehouseProductQuality>                      WarehouseProductQualities                     { get { return this.GetTable<WarehouseProductQuality>(); } }
		public ITable<WarehouseProductReserve>                      WarehouseProductReserves                      { get { return this.GetTable<WarehouseProductReserve>(); } }
		public ITable<WarehouseProductsStockHistory>                WarehouseProductsStockHistories               { get { return this.GetTable<WarehouseProductsStockHistory>(); } }
		public ITable<WarehouseShowcaseLink>                        WarehouseShowcaseLinks                        { get { return this.GetTable<WarehouseShowcaseLink>(); } }
		public ITable<WarehousesStock>                              WarehousesStocks                              { get { return this.GetTable<WarehousesStock>(); } }
		public ITable<WarehousesStockQuality>                       WarehousesStockQualities                      { get { return this.GetTable<WarehousesStockQuality>(); } }
		public ITable<WarehouseZone>                                WarehouseZones                                { get { return this.GetTable<WarehouseZone>(); } }
		public ITable<WhatsAppMessageStatus>                        WhatsAppMessageStatuses                       { get { return this.GetTable<WhatsAppMessageStatus>(); } }
		public ITable<WhatsAppOrderMessagesHistory>                 WhatsAppOrderMessagesHistories                { get { return this.GetTable<WhatsAppOrderMessagesHistory>(); } }
		public ITable<WhatsAppTemplate>                             WhatsAppTemplates                             { get { return this.GetTable<WhatsAppTemplate>(); } }
		public ITable<WhatsAppTemplateMessage>                      WhatsAppTemplateMessages                      { get { return this.GetTable<WhatsAppTemplateMessage>(); } }
		public ITable<WmsExpectedReceiptDocument>                   WmsExpectedReceiptDocuments                   { get { return this.GetTable<WmsExpectedReceiptDocument>(); } }
		public ITable<WmsExpectedReceiptDocumentsArchive>           WmsExpectedReceiptDocumentsArchives           { get { return this.GetTable<WmsExpectedReceiptDocumentsArchive>(); } }
		public ITable<WmsExpectedReceiptDocumentsItem>              WmsExpectedReceiptDocumentsItems              { get { return this.GetTable<WmsExpectedReceiptDocumentsItem>(); } }
		public ITable<WmsExpectedReceiptDocumentsItemsArchive>      WmsExpectedReceiptDocumentsItemsArchives      { get { return this.GetTable<WmsExpectedReceiptDocumentsItemsArchive>(); } }
		public ITable<WmsReceiptDocument>                           WmsReceiptDocuments                           { get { return this.GetTable<WmsReceiptDocument>(); } }
		public ITable<WmsReceiptDocumentsArchive>                   WmsReceiptDocumentsArchives                   { get { return this.GetTable<WmsReceiptDocumentsArchive>(); } }
		public ITable<WmsReceiptDocumentsItem>                      WmsReceiptDocumentsItems                      { get { return this.GetTable<WmsReceiptDocumentsItem>(); } }
		public ITable<WmsReceiptDocumentsItemDataMatrix>            WmsReceiptDocumentsItemDataMatrixes           { get { return this.GetTable<WmsReceiptDocumentsItemDataMatrix>(); } }
		public ITable<WmsReceiptDocumentsItemDataMatrixesArchive>   WmsReceiptDocumentsItemDataMatrixesArchives   { get { return this.GetTable<WmsReceiptDocumentsItemDataMatrixesArchive>(); } }
		public ITable<WmsReceiptDocumentsItemsArchive>              WmsReceiptDocumentsItemsArchives              { get { return this.GetTable<WmsReceiptDocumentsItemsArchive>(); } }
		public ITable<WmsShipmentDocument>                          WmsShipmentDocuments                          { get { return this.GetTable<WmsShipmentDocument>(); } }
		public ITable<WmsShipmentDocumentsArchive>                  WmsShipmentDocumentsArchives                  { get { return this.GetTable<WmsShipmentDocumentsArchive>(); } }
		public ITable<WmsShipmentDocumentsItem>                     WmsShipmentDocumentsItems                     { get { return this.GetTable<WmsShipmentDocumentsItem>(); } }
		public ITable<WmsShipmentDocumentsItemsArchive>             WmsShipmentDocumentsItemsArchives             { get { return this.GetTable<WmsShipmentDocumentsItemsArchive>(); } }
		public ITable<WmsShipmentDocumentsItemsDataMatrix>          WmsShipmentDocumentsItemsDataMatrixes         { get { return this.GetTable<WmsShipmentDocumentsItemsDataMatrix>(); } }
		public ITable<WmsShipmentDocumentWarehouseContainer>        WmsShipmentDocumentWarehouseContainers        { get { return this.GetTable<WmsShipmentDocumentWarehouseContainer>(); } }
		public ITable<WmsShipmentOrderDocument>                     WmsShipmentOrderDocuments                     { get { return this.GetTable<WmsShipmentOrderDocument>(); } }
		public ITable<WmsShipmentOrderDocumentDirection>            WmsShipmentOrderDocumentDirections            { get { return this.GetTable<WmsShipmentOrderDocumentDirection>(); } }
		public ITable<WmsShipmentOrderDocumentsArchive>             WmsShipmentOrderDocumentsArchives             { get { return this.GetTable<WmsShipmentOrderDocumentsArchive>(); } }
		public ITable<WmsShipmentOrderDocumentsItem>                WmsShipmentOrderDocumentsItems                { get { return this.GetTable<WmsShipmentOrderDocumentsItem>(); } }
		public ITable<WmsShipmentOrderDocumentsItemsArchive>        WmsShipmentOrderDocumentsItemsArchives        { get { return this.GetTable<WmsShipmentOrderDocumentsItemsArchive>(); } }
		public ITable<WmsShipmentOrderDocumentStatus>               WmsShipmentOrderDocumentStatuses              { get { return this.GetTable<WmsShipmentOrderDocumentStatus>(); } }
		public ITable<WmsVerificationDocument>                      WmsVerificationDocuments                      { get { return this.GetTable<WmsVerificationDocument>(); } }
		public ITable<WmsVerificationDocumentsArchive>              WmsVerificationDocumentsArchives              { get { return this.GetTable<WmsVerificationDocumentsArchive>(); } }
		public ITable<WmsVerificationDocumentsItem>                 WmsVerificationDocumentsItems                 { get { return this.GetTable<WmsVerificationDocumentsItem>(); } }
		public ITable<WmsVerificationDocumentsItemsArchive>         WmsVerificationDocumentsItemsArchives         { get { return this.GetTable<WmsVerificationDocumentsItemsArchive>(); } }
	}

	[Table(Schema="dbo", Name="ActionsProcessingHandlers")]
	public partial class ActionsProcessingHandler
	{
		[PrimaryKey, Identity] public int      Id               { get; set; } // int
		[Column,     NotNull ] public string   Name             { get; set; } // nvarchar(50)
		[Column,     NotNull ] public DateTime RegistrationDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ActionsProcessingHandleResults")]
	public partial class ActionsProcessingHandleResult
	{
		[PrimaryKey, Identity   ] public long     Id        { get; set; } // bigint
		[Column,     NotNull    ] public long     ActionId  { get; set; } // bigint
		[Column,     NotNull    ] public int      HandlerId { get; set; } // int
		[Column,     NotNull    ] public bool     Successed { get; set; } // bit
		[Column,        Nullable] public string   Error     { get; set; } // nvarchar(1000)
		[Column,     NotNull    ] public DateTime StartAt   { get; set; } // datetime
		[Column,     NotNull    ] public DateTime EndAt     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ActionsProcessingQueue")]
	public partial class ActionsProcessingQueue
	{
		[PrimaryKey, Identity] public long     Id            { get; set; } // bigint
		[Column,     NotNull ] public string   ObjectId      { get; set; } // nvarchar(50)
		[Column,     NotNull ] public int      OperationId   { get; set; } // int
		[Column,     NotNull ] public int      ObjectTypeId  { get; set; } // int
		[Column,     NotNull ] public string   ActionObject  { get; set; } // nvarchar(max)
		[Column,     NotNull ] public int      PriorityLevel { get; set; } // int
		[Column,     NotNull ] public bool     InProcess     { get; set; } // bit
		[Column,     NotNull ] public Guid     AuthorId      { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime CreatedDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ActionsProcessingQueueArchive")]
	public partial class ActionsProcessingQueueArchive
	{
		[PrimaryKey, NotNull] public long     Id            { get; set; } // bigint
		[Column,     NotNull] public string   ObjectId      { get; set; } // nvarchar(50)
		[Column,     NotNull] public int      OperationId   { get; set; } // int
		[Column,     NotNull] public int      ObjectTypeId  { get; set; } // int
		[Column,     NotNull] public string   ActionObject  { get; set; } // nvarchar(max)
		[Column,     NotNull] public int      PriorityLevel { get; set; } // int
		[Column,     NotNull] public Guid     AuthorId      { get; set; } // uniqueidentifier
		[Column,     NotNull] public DateTime CreatedDate   { get; set; } // datetime
		[Column,     NotNull] public DateTime ArchivedDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ActivityActions")]
	public partial class ActivityAction
	{
		[PrimaryKey, Identity] public int    Id       { get; set; } // int
		[Column,     NotNull ] public int    EntityId { get; set; } // int
		[Column,     NotNull ] public string Name     { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="ActivityBatchItems")]
	public partial class ActivityBatchItem
	{
		[PrimaryKey(1), NotNull] public long BatchId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public int  ActionId { get; set; } // int
	}

	[Table(Schema="dbo", Name="ActivityEntities")]
	public partial class ActivityEntity
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="ActivityProcesses")]
	public partial class ActivityProcess
	{
		[PrimaryKey, Identity] public long     Id           { get; set; } // bigint
		[Column,     NotNull ] public int      TypeId       { get; set; } // int
		[Column,     NotNull ] public int      SourceId     { get; set; } // int
		[Column,     NotNull ] public Guid     UserId       { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      EntityTypeId { get; set; } // int
		[Column,     NotNull ] public string   EntityId     { get; set; } // varchar(36)
		[Column,     NotNull ] public DateTime StartTime    { get; set; } // datetime
		[Column,     NotNull ] public DateTime FinishTime   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ActivityProcessTypes")]
	public partial class ActivityProcessType
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="ActivitySources")]
	public partial class ActivitySource
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="ActivityUserBatch")]
	public partial class ActivityUserBatch
	{
		[PrimaryKey, Identity] public long     Id          { get; set; } // bigint
		[Column,     NotNull ] public Guid     UserId      { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      SourceId    { get; set; } // int
		[Column,     NotNull ] public int      EntityId    { get; set; } // int
		[Column,     NotNull ] public string   ObjectId    { get; set; } // varchar(128)
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServices")]
	public partial class ApiDeliveryService
	{
		[PrimaryKey, NotNull    ] public int      Id            { get; set; } // int
		[Column,     NotNull    ] public string   Name          { get; set; } // varchar(50)
		[Column,     NotNull    ] public DateTime AddDate       { get; set; } // datetime
		[Column,     NotNull    ] public bool     IsActive      { get; set; } // bit
		[Column,        Nullable] public bool?    IsMarketPlace { get; set; } // bit
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceActionTypes")]
	public partial class ApiDeliveryServiceActionType
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceGroups")]
	public partial class ApiDeliveryServiceGroup
	{
		[PrimaryKey, Identity   ] public int      Id          { get; set; } // int
		[Column,     NotNull    ] public string   OuterId     { get; set; } // varchar(50)
		[Column,     NotNull    ] public string   Name        { get; set; } // varchar(50)
		[Column,     NotNull    ] public int      ServiceId   { get; set; } // int
		[Column,        Nullable] public int?     StatusId    { get; set; } // int
		[Column,     NotNull    ] public int      AccountId   { get; set; } // int
		[Column,     NotNull    ] public Guid     AuthorId    { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime CreatedDate { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ChangedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceGroupOrderLinks")]
	public partial class ApiDeliveryServiceGroupOrderLink
	{
		[PrimaryKey(1), NotNull    ] public Guid      OrderId     { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull    ] public int       GroupId     { get; set; } // int
		[Column,           Nullable] public DateTime? CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceGroupsInfo")]
	public partial class ApiDeliveryServiceGroupsInfo
	{
		[PrimaryKey, NotNull    ] public int       Id           { get; set; } // int
		[Column,        Nullable] public int?      TypeId       { get; set; } // int
		[Column,        Nullable] public int?      CategoryId   { get; set; } // int
		[Column,        Nullable] public DateTime? ExpectedDate { get; set; } // date
		[Column,        Nullable] public int?      DocsLoaded   { get; set; } // int
		[Column,        Nullable] public bool?     IsSent       { get; set; } // bit
		[Column,        Nullable] public DateTime? SentDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceGroupStatuses")]
	public partial class ApiDeliveryServiceGroupStatus
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(50)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceOrders")]
	public partial class ApiDeliveryServiceOrder
	{
		[PrimaryKey(1), NotNull    ] public Guid      InnerId           { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull    ] public string    OuterId           { get; set; } // varchar(50)
		[Column,        NotNull    ] public int       ServiceId         { get; set; } // int
		[Column,        NotNull    ] public int       StatusId          { get; set; } // int
		[Column,           Nullable] public string    StatusDescription { get; set; } // nvarchar(500)
		[Column,        NotNull    ] public Guid      AuthorId          { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public int       AccountId         { get; set; } // int
		[Column,        NotNull    ] public int       IKNId             { get; set; } // int
		[Column,        NotNull    ] public DateTime  CreatedDate       { get; set; } // datetime
		[Column,        NotNull    ] public DateTime  ChangedDate       { get; set; } // datetime
		[Column,           Nullable] public string    DispatchNumber    { get; set; } // varchar(100)
		[Column,           Nullable] public DateTime? StatusDate        { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceOrdersArchive")]
	public partial class ApiDeliveryServiceOrdersArchive
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public Guid     InnerId     { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string   OuterId     { get; set; } // varchar(50)
		[Column,     NotNull ] public int      ServiceId   { get; set; } // int
		[Column,     NotNull ] public int      StatusId    { get; set; } // int
		[Column,     NotNull ] public Guid     AuthorId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      AccountId   { get; set; } // int
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
		[Column,     NotNull ] public DateTime ChangedDate { get; set; } // datetime
		[Column,     NotNull ] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceOrdersInfo")]
	public partial class ApiDeliveryServiceOrdersInfo
	{
		[PrimaryKey, NotNull    ] public Guid      InnerId                { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public byte      LabelDowloadCount      { get; set; } // tinyint
		[Column,        Nullable] public int?      IKNId                  { get; set; } // int
		[Column,        Nullable] public string    LabelId                { get; set; } // varchar(100)
		[Column,        Nullable] public string    OuterDopId             { get; set; } // varchar(100)
		[Column,     NotNull    ] public DateTime  CreatedDate            { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ChangedDate            { get; set; } // datetime
		[Column,        Nullable] public string    CompensationNumber     { get; set; } // nvarchar(20)
		[Column,        Nullable] public DateTime? CompensationDate       { get; set; } // datetime
		[Column,        Nullable] public DateTime? CompensationUpdateDate { get; set; } // datetime
		[Column,        Nullable] public double?   CompensationSum        { get; set; } // float
		[Column,        Nullable] public bool?     CompensationFail       { get; set; } // bit
		[Column,     NotNull    ] public bool      DisabledForTracking    { get; set; } // bit
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceOrderStatuses")]
	public partial class ApiDeliveryServiceOrderStatus
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(50)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceOrderStatusesHistory")]
	public partial class ApiDeliveryServiceOrderStatusesHistory
	{
		[PrimaryKey, Identity   ] public int      Id                { get; set; } // int
		[Column,     NotNull    ] public Guid     InnerId           { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      StatusId          { get; set; } // int
		[Column,     NotNull    ] public DateTime StatusDate        { get; set; } // datetime
		[Column,        Nullable] public string   StatusDescription { get; set; } // nvarchar(500)
		[Column,     NotNull    ] public DateTime ArchiveDate       { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceQueue")]
	public partial class ApiDeliveryServiceQueue
	{
		[PrimaryKey, NotNull    ] public Guid      OrderId         { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int       AttemptCount    { get; set; } // int
		[Column,        Nullable] public DateTime? LastAttemptDate { get; set; } // datetime
		[Column,        Nullable] public string    LastError       { get; set; } // varchar(4000)
		[Column,     NotNull    ] public Guid      AuthorId        { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime  CreatedDate     { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ChangedDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceQueueArchive")]
	public partial class ApiDeliveryServiceQueueArchive
	{
		[PrimaryKey, Identity   ] public int       Id              { get; set; } // int
		[Column,     NotNull    ] public Guid      OrderId         { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int       AttemptCount    { get; set; } // int
		[Column,        Nullable] public DateTime? LastAttemptDate { get; set; } // datetime
		[Column,        Nullable] public string    LastError       { get; set; } // varchar(4000)
		[Column,     NotNull    ] public Guid      AuthorId        { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime  CreatedDate     { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ChangedDate     { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ArchiveDate     { get; set; } // datetime
		[Column,     NotNull    ] public int       ArchiveStatus   { get; set; } // int
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceRusPostGroupCaregories")]
	public partial class ApiDeliveryServiceRusPostGroupCaregory
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(50)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceRusPostGroupTypes")]
	public partial class ApiDeliveryServiceRusPostGroupType
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(50)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesAccounts")]
	public partial class ApiDeliveryServicesAccount
	{
		[PrimaryKey, Identity   ] public int       Id             { get; set; } // int
		[Column,     NotNull    ] public int       ServiceId      { get; set; } // int
		[Column,     NotNull    ] public string    Name           { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string    Host           { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string    AuthUser       { get; set; } // nvarchar(100)
		[Column,     NotNull    ] public string    AuthPassword   { get; set; } // nvarchar(100)
		[Column,     NotNull    ] public int       AuthType       { get; set; } // int
		[Column,        Nullable] public string    Token          { get; set; } // nvarchar(255)
		[Column,        Nullable] public DateTime? TokenExpiry    { get; set; } // datetime
		[Column,     NotNull    ] public int       TokenLifeTime  { get; set; } // int
		[Column,        Nullable] public DateTime? StatusSyncDate { get; set; } // datetime
		[Column,     NotNull    ] public int       ApiVresion     { get; set; } // int
		[Column,     NotNull    ] public bool      IsDefault      { get; set; } // bit
		[Column,        Nullable] public string    DopParams      { get; set; } // nvarchar(1000)
		[Column,     NotNull    ] public bool      IsActive       { get; set; } // bit
		[Column,     NotNull    ] public string    Selector       { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public bool      UseAggregator  { get; set; } // bit
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesCastOrderDeliveryKinds")]
	public partial class ApiDeliveryServicesCastOrderDeliveryKind
	{
		[PrimaryKey(1), NotNull] public int   ServiceId      { get; set; } // int
		[PrimaryKey(2), NotNull] public short DeliveryKindId { get; set; } // smallint
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesIKNs")]
	public partial class ApiDeliveryServicesIKN
	{
		[PrimaryKey, Identity] public int    Id        { get; set; } // int
		[Column,     NotNull ] public int    AccountId { get; set; } // int
		[Column,     NotNull ] public string Name      { get; set; } // nvarchar(50)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesIKNConditions")]
	public partial class ApiDeliveryServicesIKNCondition
	{
		[PrimaryKey, Identity] public int    Id         { get; set; } // int
		[Column,     NotNull ] public int    IKNId      { get; set; } // int
		[Column,     NotNull ] public string Name       { get; set; } // nvarchar(255)
		[Column,     NotNull ] public string Conditions { get; set; } // nvarchar(max)
		[Column,     NotNull ] public int    OrderNum   { get; set; } // int
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesIKNRules")]
	public partial class ApiDeliveryServicesIKNRule
	{
		[PrimaryKey, Identity] public int    Id       { get; set; } // int
		[Column,     NotNull ] public int    IknId    { get; set; } // int
		[Column,     NotNull ] public string Name     { get; set; } // nvarchar(255)
		[Column,     NotNull ] public int    OrderNum { get; set; } // int
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesIKNRuleConditions")]
	public partial class ApiDeliveryServicesIKNRuleCondition
	{
		[PrimaryKey, Identity] public int    Id     { get; set; } // int
		[Column,     NotNull ] public int    RuleId { get; set; } // int
		[Column,     NotNull ] public int    CType  { get; set; } // int
		[Column,     NotNull ] public string Args   { get; set; } // nvarchar(max)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesIKNRuleConstraints")]
	public partial class ApiDeliveryServicesIKNRuleConstraint
	{
		[PrimaryKey, Identity] public int    Id     { get; set; } // int
		[Column,     NotNull ] public int    RuleId { get; set; } // int
		[Column,     NotNull ] public int    CType  { get; set; } // int
		[Column,     NotNull ] public string Args   { get; set; } // nvarchar(max)
	}

	[Table(Schema="dbo", Name="ApiDeliveryServicesIKNRules_old")]
	public partial class ApiDeliveryServicesIKNRulesOld
	{
		[Column, NotNull] public int    Id       { get; set; } // int
		[Column, NotNull] public int    IknId    { get; set; } // int
		[Column, NotNull] public string Name     { get; set; } // nvarchar(255)
		[Column, NotNull] public int    OrderNum { get; set; } // int
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceTrackers")]
	public partial class ApiDeliveryServiceTracker
	{
		[PrimaryKey, Identity   ] public int       Id                 { get; set; } // int
		[Column,     NotNull    ] public int       AccountId          { get; set; } // int
		[Column,     NotNull    ] public int       StateId            { get; set; } // int
		[Column,        Nullable] public DateTime? StartTrackingDate  { get; set; } // datetime
		[Column,        Nullable] public int?      OrderCountLimit    { get; set; } // int
		[Column,        Nullable] public int?      DelayBetweenStages { get; set; } // int
		[Column,        Nullable] public string    Errors             { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public bool      IsActive           { get; set; } // bit
	}

	[Table(Schema="dbo", Name="ApiDeliveryServiceUserActions")]
	public partial class ApiDeliveryServiceUserAction
	{
		[PrimaryKey, Identity   ] public int       Id            { get; set; } // int
		[Column,     NotNull    ] public int       ServiceId     { get; set; } // int
		[Column,     NotNull    ] public int       ActionsTypeId { get; set; } // int
		[Column,        Nullable] public string    ObjectId      { get; set; } // varchar(50)
		[Column,     NotNull    ] public bool      Success       { get; set; } // bit
		[Column,        Nullable] public string    Comments      { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public Guid      AuthorId      { get; set; } // uniqueidentifier
		[Column,        Nullable] public DateTime? CreatedDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="BarCodes")]
	public partial class BarCode
	{
		[Column(),          PrimaryKey(1), NotNull] public int      SKU            { get; set; } // int
		[Column("BarCode"), PrimaryKey(2), NotNull] public string   BarCodeColumn  { get; set; } // nvarchar(39)
		[Column(),             Nullable           ] public string   BarFormat      { get; set; } // varchar(10)
		[Column(),             Nullable           ] public int?     CtrlDigit      { get; set; } // int
		[Column(),             Nullable           ] public int?     CtrlDigitCalc  { get; set; } // int
		[Column(),                         NotNull] public bool     ValidSign      { get; set; } // bit
		[Column(),             Nullable           ] public string   BatchNo1РЎ     { get; set; } // nchar(10)
		[Column(),             Nullable           ] public int?     SessionIDPrice { get; set; } // int
		[Column(),                         NotNull] public DateTime ReportDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="BarCodesDoubles")]
	public partial class BarCodesDouble
	{
		[PrimaryKey(1), NotNull] public long   SessionID  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public string BatchNo1РЎ { get; set; } // nchar(10)
		[PrimaryKey(3), NotNull] public string BarCode    { get; set; } // nvarchar(39)
		[PrimaryKey(4), NotNull] public int    SKU        { get; set; } // int
	}

	[Table(Schema="dbo", Name="BarCodesSession")]
	public partial class BarCodesSession
	{
		[PrimaryKey, Identity] public long     SessionID    { get; set; } // bigint
		[Column,     NotNull ] public DateTime SessionBegin { get; set; } // datetime
		[Column,     NotNull ] public int      SourceType   { get; set; } // int
	}

	[Table(Schema="dbo", Name="BarCodesSessionBatches")]
	public partial class BarCodesSessionBatch
	{
		[PrimaryKey(1), NotNull] public long     SessionID  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public string   BatchNo    { get; set; } // nchar(10)
		[Column,        NotNull] public DateTime BatchBegin { get; set; } // datetime
		[Column,        NotNull] public int      BatchWrite { get; set; } // int
		[Column,        NotNull] public int      BatchNull  { get; set; } // int
		[Column,        NotNull] public int      BatchDuble { get; set; } // int
	}

	[Table(Schema="dbo", Name="BlackListStatuses")]
	public partial class BlackListStatus
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // varchar(200)
	}

	[Table(Schema="dbo", Name="BQExportOrders")]
	public partial class BQExportOrder
	{
		[PrimaryKey, Identity] public int      Id         { get; set; } // int
		[Column,     NotNull ] public Guid     OrderId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="BQObjectTypes")]
	public partial class BQObjectType
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(50)
	}

	[Table(Schema="dbo", Name="BQOrderItemsLastData")]
	public partial class BQOrderItemsLastData
	{
		[PrimaryKey, Identity] public int      Id                      { get; set; } // int
		[Column,     NotNull ] public Guid     OrderId                 { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     ProductId               { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     BrandId                 { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string   CategoryName            { get; set; } // nvarchar(50)
		[Column,     NotNull ] public int      Quantity                { get; set; } // int
		[Column,     NotNull ] public double   Discount                { get; set; } // float
		[Column,     NotNull ] public double   FrozenPriceWithDiscount { get; set; } // float
		[Column,     NotNull ] public DateTime ChangedDate             { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="BQOrdersLastData")]
	public partial class BQOrdersLastData
	{
		[PrimaryKey, Identity   ] public int      Id               { get; set; } // int
		[Column,     NotNull    ] public Guid     OrderId          { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string   PublicNumber     { get; set; } // nvarchar(20)
		[Column,     NotNull    ] public DateTime OrderCreatedDate { get; set; } // datetime
		[Column,     NotNull    ] public Guid     SiteId           { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      StatusId         { get; set; } // int
		[Column,     NotNull    ] public Guid     ClientId         { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      ClientTypeId     { get; set; } // int
		[Column,     NotNull    ] public int      DeliveryTypeId   { get; set; } // int
		[Column,     NotNull    ] public int      PaymentTypeId    { get; set; } // int
		[Column,     NotNull    ] public string   Locality         { get; set; } // nvarchar(50)
		[Column,        Nullable] public int?     ReturnReasonId   { get; set; } // int
		[Column,        Nullable] public int?     FaultPartyId     { get; set; } // int
		[Column,        Nullable] public string   Coupon           { get; set; } // nvarchar(64)
		[Column,     NotNull    ] public int      OrdersCount      { get; set; } // int
		[Column,     NotNull    ] public double   DeliveryCost     { get; set; } // float
		[Column,     NotNull    ] public double   FrozenSum        { get; set; } // float
		[Column,        Nullable] public double?  BonusPaidSum     { get; set; } // float
		[Column,     NotNull    ] public double   PaidSum          { get; set; } // float
		[Column,     NotNull    ] public DateTime CreatedDate      { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ChangedDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="BQQueue")]
	public partial class BQQueue
	{
		[PrimaryKey, Identity   ] public long      Id           { get; set; } // bigint
		[Column,     NotNull    ] public Guid      PublicId     { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int       ObjectTypeId { get; set; } // int
		[Column,     NotNull    ] public string    Data         { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public DateTime  CreatedDate  { get; set; } // datetime
		[Column,        Nullable] public string    Error        { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public int       TryCount     { get; set; } // int
		[Column,        Nullable] public DateTime? NextTryDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="BQQueueHistory")]
	public partial class BQQueueHistory
	{
		[PrimaryKey, Identity] public long     Id          { get; set; } // bigint
		[Column,     NotNull ] public int      Type        { get; set; } // int
		[Column,     NotNull ] public string   Data        { get; set; } // nvarchar(max)
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="BQQueueHistoryDate")]
	public partial class BQQueueHistoryDate
	{
		[Column, NotNull] public DateTime HistoryDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ClientDeliveredWhatsAppTemplatesBuffer")]
	public partial class ClientDeliveredWhatsAppTemplatesBuffer
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public int      MessageId   { get; set; } // int
		[Column,     NotNull ] public string   PhoneNumber { get; set; } // varchar(50)
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ClientOrdersDelivery")]
	public partial class ClientOrdersDelivery
	{
		[PrimaryKey, NotNull    ] public Guid OrderId           { get; set; } // uniqueidentifier
		[Column,        Nullable] public int? DeliveryServiceId { get; set; } // int
		[Column,        Nullable] public int? DeliveryKindId    { get; set; } // int
	}

	[Table(Schema="dbo", Name="ClientOrdersSync")]
	public partial class ClientOrdersSync
	{
		[PrimaryKey, NotNull    ] public Guid     OrderId        { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string   PublicId       { get; set; } // nvarchar(50)
		[Column,        Nullable] public string   PublicNumber   { get; set; } // nvarchar(50)
		[Column,        Nullable] public string   PostingNumber  { get; set; } // nvarchar(50)
		[Column,        Nullable] public string   TrackingNumber { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public DateTime ChangedDate    { get; set; } // datetime
		[Column,     NotNull    ] public DateTime CreatedDate    { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ClientsBlackList")]
	public partial class ClientsBlackList
	{
		[PrimaryKey, NotNull    ] public Guid ClientId { get; set; } // uniqueidentifier
		[Column,        Nullable] public int? StatusId { get; set; } // int
	}

	[Table(Schema="dbo", Name="_clientsForDelete")]
	public partial class ClientsForDelete
	{
		[PrimaryKey, NotNull] public Guid Id { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="ClientTypes")]
	public partial class ClientType
	{
		[PrimaryKey, NotNull    ] public int    Id   { get; set; } // int
		[Column,        Nullable] public string Name { get; set; } // varchar(200)
	}

	[Table(Schema="dbo", Name="ClosestCompetitors")]
	public partial class ClosestCompetitor
	{
		[PrimaryKey, NotNull    ] public Guid     ProductId     { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      CompetitorId1 { get; set; } // int
		[Column,     NotNull    ] public int      CurrencyId1   { get; set; } // int
		[Column,     NotNull    ] public decimal  Price1        { get; set; } // decimal(14, 2)
		[Column,        Nullable] public int?     CompetitorId2 { get; set; } // int
		[Column,     NotNull    ] public int      CurrencyId2   { get; set; } // int
		[Column,        Nullable] public decimal? Price2        { get; set; } // decimal(14, 2)
		[Column,        Nullable] public int?     CompetitorId3 { get; set; } // int
		[Column,        Nullable] public int?     CurrencyId3   { get; set; } // int
		[Column,        Nullable] public decimal? Price3        { get; set; } // decimal(14, 2)
		[Column,     NotNull    ] public DateTime CreatedDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Competitors")]
	public partial class Competitor
	{
		[PrimaryKey, Identity   ] public int      Id           { get; set; } // int
		[Column,     NotNull    ] public bool     IsActive     { get; set; } // bit
		[Column,        Nullable] public string   Name         { get; set; } // varchar(100)
		[Column,        Nullable] public string   OfficialName { get; set; } // varchar(255)
		[Column,     NotNull    ] public DateTime ChangedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CompetitorsFeeds")]
	public partial class CompetitorsFeed
	{
		[PrimaryKey, Identity   ] public int       Id           { get; set; } // int
		[Column,     NotNull    ] public int       CompetitorId { get; set; } // int
		[Column,     NotNull    ] public bool      IsActive     { get; set; } // bit
		[Column,     NotNull    ] public string    Name         { get; set; } // varchar(255)
		[Column,        Nullable] public DateTime? LastLoadDate { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ChangedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  CreatedDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CompetitorsFeedItems")]
	public partial class CompetitorsFeedItem
	{
		[PrimaryKey, Identity   ] public int       Id                { get; set; } // int
		[Column,     NotNull    ] public int       FeedId            { get; set; } // int
		[Column,     NotNull    ] public bool      Deleted           { get; set; } // bit
		[Column,     NotNull    ] public bool      IsUsed            { get; set; } // bit
		[Column,     NotNull    ] public string    OuterId           { get; set; } // varchar(50)
		[Column,        Nullable] public string    OuterSku          { get; set; } // varchar(50)
		[Column,        Nullable] public string    OuterBarcode      { get; set; } // varchar(128)
		[Column,        Nullable] public DateTime? OuterChangedDate  { get; set; } // datetime
		[Column,     NotNull    ] public string    Name              { get; set; } // varchar(1000)
		[Column,        Nullable] public string    Model             { get; set; } // varchar(500)
		[Column,        Nullable] public string    Description       { get; set; } // varchar(max)
		[Column,        Nullable] public string    Details           { get; set; } // varchar(1000)
		[Column,     NotNull    ] public int       TypeId            { get; set; } // int
		[Column,     NotNull    ] public int       GroupId           { get; set; } // int
		[Column,     NotNull    ] public int       CategoryId        { get; set; } // int
		[Column,        Nullable] public string    PhotoUrl          { get; set; } // varchar(1000)
		[Column,        Nullable] public string    ProductUrl        { get; set; } // varchar(1000)
		[Column,     NotNull    ] public int       CurrencyId        { get; set; } // int
		[Column,     NotNull    ] public decimal   Price             { get; set; } // decimal(14, 2)
		[Column,        Nullable] public decimal?  OldPrice          { get; set; } // decimal(14, 2)
		[Column,        Nullable] public string    Vendor            { get; set; } // varchar(1000)
		[Column,        Nullable] public string    VendorCode        { get; set; } // varchar(128)
		[Column,        Nullable] public string    Sex               { get; set; } // varchar(128)
		[Column,        Nullable] public string    Year              { get; set; } // varchar(20)
		[Column,     NotNull    ] public bool      Available         { get; set; } // bit
		[Column,        Nullable] public bool?     PickupAvailable   { get; set; } // bit
		[Column,        Nullable] public bool?     DeliveryAvailable { get; set; } // bit
		[Column,        Nullable] public string    DeliveryDetails   { get; set; } // varchar(1000)
		[Column,     NotNull    ] public DateTime  ChangedDate       { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  CreatedDate       { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CompetitorsFeedItemsHistory")]
	public partial class CompetitorsFeedItemsHistory
	{
		[PrimaryKey, Identity   ] public int      Id          { get; set; } // int
		[Column,     NotNull    ] public int      OperationId { get; set; } // int
		[Column,     NotNull    ] public int      FeedItemId  { get; set; } // int
		[Column,        Nullable] public Guid?    ProductId   { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public Guid     AuthorId    { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CompetitorsFeedItemsOperations")]
	public partial class CompetitorsFeedItemsOperation
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="CompetitorsFeedProductLinks")]
	public partial class CompetitorsFeedProductLink
	{
		[PrimaryKey(2), NotNull] public Guid     ProductId   { get; set; } // uniqueidentifier
		[PrimaryKey(1), NotNull] public int      FeedItemId  { get; set; } // int
		[Column,        NotNull] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CompetitorsFeedSettings")]
	public partial class CompetitorsFeedSetting
	{
		[PrimaryKey, Identity] public int      Id             { get; set; } // int
		[Column,     NotNull ] public string   ServiceName    { get; set; } // varchar(500)
		[Column,     NotNull ] public int      SourceTypeId   { get; set; } // int
		[Column,     NotNull ] public int      SourceFormatId { get; set; } // int
		[Column,     NotNull ] public string   SourcePath     { get; set; } // varchar(500)
		[Column,     NotNull ] public string   SourceConfig   { get; set; } // varchar(1000)
		[Column,     NotNull ] public string   ConvertConfig  { get; set; } // varchar(1000)
		[Column,     NotNull ] public string   MatchConfig    { get; set; } // varchar(1000)
		[Column,     NotNull ] public DateTime ChangedDate    { get; set; } // datetime
		[Column,     NotNull ] public DateTime CreatedDate    { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CompetitorsFeedSettingsLinks")]
	public partial class CompetitorsFeedSettingsLink
	{
		[PrimaryKey(2), NotNull] public int      FeedId      { get; set; } // int
		[PrimaryKey(1), NotNull] public int      SettingsId  { get; set; } // int
		[Column,        NotNull] public bool     IsDefault   { get; set; } // bit
		[Column,        NotNull] public DateTime ChangedDate { get; set; } // datetime
		[Column,        NotNull] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ComplectingDocuments")]
	public partial class ComplectingDocument
	{
		[PrimaryKey, Identity   ] public long      Id          { get; set; } // bigint
		[Column,     NotNull    ] public Guid      PublicId    { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string    Number      { get; set; } // varchar(36)
		[Column,     NotNull    ] public int       DocType     { get; set; } // int
		[Column,     NotNull    ] public DateTime  CreateDate  { get; set; } // datetime
		[Column,     NotNull    ] public int       WarehouseId { get; set; } // int
		[Column,     NotNull    ] public bool      IsDeleted   { get; set; } // bit
		[Column,        Nullable] public DateTime? ChangeDate  { get; set; } // datetime
		[Column,     NotNull    ] public Guid      AuthorId    { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="ComplectingDocumentsArchive")]
	public partial class ComplectingDocumentsArchive
	{
		[PrimaryKey(1), Identity   ] public long      Id          { get; set; } // bigint
		[Column,        NotNull    ] public long      DocId       { get; set; } // bigint
		[Column,        NotNull    ] public Guid      PublicId    { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string    Number      { get; set; } // varchar(36)
		[Column,        NotNull    ] public int       DocType     { get; set; } // int
		[Column,        NotNull    ] public DateTime  CreateDate  { get; set; } // datetime
		[Column,        NotNull    ] public int       WarehouseId { get; set; } // int
		[Column,        NotNull    ] public bool      IsDeleted   { get; set; } // bit
		[Column,           Nullable] public DateTime? ChangeDate  { get; set; } // datetime
		[Column,        NotNull    ] public Guid      AuthorId    { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull    ] public DateTime  ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ComplectingDocumentsItems")]
	public partial class ComplectingDocumentsItem
	{
		[PrimaryKey, Identity] public long     Id          { get; set; } // bigint
		[Column,     NotNull ] public long     DocId       { get; set; } // bigint
		[Column,     NotNull ] public int      BalanceType { get; set; } // int
		[Column,     NotNull ] public Guid     ProductId   { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      Quantity    { get; set; } // int
		[Column,     NotNull ] public int      QualityId   { get; set; } // int
		[Column,     NotNull ] public DateTime CreateDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ComplectingDocumentsItemsArchive")]
	public partial class ComplectingDocumentsItemsArchive
	{
		[PrimaryKey, Identity] public long     Id           { get; set; } // bigint
		[Column,     NotNull ] public long     ArchiveDocId { get; set; } // bigint
		[Column,     NotNull ] public long     DocId        { get; set; } // bigint
		[Column,     NotNull ] public int      BalanceType  { get; set; } // int
		[Column,     NotNull ] public Guid     ProductId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      Quantity     { get; set; } // int
		[Column,     NotNull ] public int      QualityId    { get; set; } // int
		[Column,     NotNull ] public DateTime CreateDate   { get; set; } // datetime
		[Column,     NotNull ] public DateTime ArchiveDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Countries")]
	public partial class Country
	{
		[PrimaryKey, Identity   ] public int    Id          { get; set; } // int
		[Column,     NotNull    ] public string Name        { get; set; } // nvarchar(100)
		[Column,     NotNull    ] public string Description { get; set; } // nvarchar(500)
		[Column,        Nullable] public int?   CodeISO     { get; set; } // int
		[Column,        Nullable] public string Alfa2       { get; set; } // nvarchar(2)
	}

	[Table(Schema="dbo", Name="COURIERS")]
	public partial class COURIER
	{
		[Column, Nullable] public int?  ID                  { get; set; } // int
		[Column, Nullable] public char? LASTNAME            { get; set; } // varchar(1)
		[Column, Nullable] public char? NAME                { get; set; } // varchar(1)
		[Column, Nullable] public char? FATHERNAME          { get; set; } // varchar(1)
		[Column, Nullable] public char? DATIVEFULLNAME      { get; set; } // varchar(1)
		[Column, Nullable] public char? PHONE               { get; set; } // varchar(1)
		[Column, Nullable] public char? ADRESS              { get; set; } // varchar(1)
		[Column, Nullable] public char? PASSPORTDATA        { get; set; } // varchar(1)
		[Column, Nullable] public int?  MAXDELIVERIESPERDAY { get; set; } // int
		[Column, Nullable] public bool? METRO               { get; set; } // bit
	}

	[Table(Schema="dbo", Name="COURIERS_Archive")]
	public partial class CouriersArchive
	{
		[PrimaryKey, NotNull    ] public Guid   ID                  { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string LASTNAME            { get; set; } // nvarchar(255)
		[Column,        Nullable] public string NAME                { get; set; } // nvarchar(255)
		[Column,        Nullable] public string FATHERNAME          { get; set; } // nvarchar(255)
		[Column,        Nullable] public string DATIVEFULLNAME      { get; set; } // nvarchar(1024)
		[Column,        Nullable] public string PHONE               { get; set; } // nvarchar(10)
		[Column,        Nullable] public string ADRESS              { get; set; } // nvarchar(1024)
		[Column,        Nullable] public string PASSPORTDATA        { get; set; } // nvarchar(1024)
		[Column,     NotNull    ] public int    MAXDELIVERIESPERDAY { get; set; } // int
		[Column,     NotNull    ] public byte   METRO               { get; set; } // tinyint
		[Column,        Nullable] public string UserName            { get; set; } // nchar(128)
	}

	[Table(Schema="dbo", Name="CRPTDataMatrixInternalStatuses")]
	public partial class CRPTDataMatrixInternalStatus
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="CRPTDocuments")]
	public partial class CRPTDocument
	{
		[PrimaryKey,                                   Identity   ] public int       Id                       { get; set; } // int
		[Column,                                          Nullable] public string    CRPTNumber               { get; set; } // nvarchar(500)
		[Column,                                       NotNull    ] public bool      CRPTInput                { get; set; } // bit
		[Column,                                          Nullable] public DateTime? CRPTCreatedDate          { get; set; } // datetime
		[Column,                                          Nullable] public string    CRPTType                 { get; set; } // varchar(128)
		[Column,                                          Nullable] public string    CRPTStatus               { get; set; } // varchar(128)
		[Column,                                       NotNull    ] public string    SenderInn                { get; set; } // varchar(20)
		[Column,                                       NotNull    ] public string    ReceiverInn              { get; set; } // varchar(20)
		[Column,                                       NotNull    ] public string    DocNumber                { get; set; } // nvarchar(128)
		[Column,                                       NotNull    ] public DateTime  DocDate                  { get; set; } // date
		[Column,                                          Nullable] public string    DocAction                { get; set; } // nvarchar(128)
		[Column,                                          Nullable] public DateTime? DocActionDate            { get; set; } // datetime
		[Column,                                          Nullable] public string    DocPrimaryType           { get; set; } // nvarchar(64)
		[Column,                                          Nullable] public string    DocTypeName              { get; set; } // nvarchar(255)
		[Column,                                          Nullable] public int?      SenderId                 { get; set; } // int
		[Column,                                          Nullable] public int?      ReceiverId               { get; set; } // int
		[Column,                                       NotNull    ] public int       StatusId                 { get; set; } // int
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public bool?     IsCRPTCancelled          { get; set; } // bit
		[Column,                                          Nullable] public string    CancellationCRPTNumber   { get; set; } // nvarchar(500)
		[Column,                                          Nullable] public DateTime? CancellationDocDate      { get; set; } // datetime
		[Column,                                          Nullable] public DateTime? CancellationRecevingDate { get; set; } // datetime
		[Column,                                          Nullable] public string    Comments                 { get; set; } // nvarchar(255)
		[Column,                                          Nullable] public string    Error                    { get; set; } // nvarchar(4000)
		[Column,                                          Nullable] public Guid?     AuthorId                 { get; set; } // uniqueidentifier
		[Column,                                       NotNull    ] public DateTime  CreatedDate              { get; set; } // datetime
		[Column,                                       NotNull    ] public DateTime  ChangedDate              { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="CRPTDocumentInternalStatuses")]
	public partial class CRPTDocumentInternalStatus
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="CRPTDocumentItems")]
	public partial class CRPTDocumentItem
	{
		[PrimaryKey,                                   Identity   ] public int    Id          { get; set; } // int
		[Column,                                       NotNull    ] public int    DocId       { get; set; } // int
		[Column,                                          Nullable] public Guid?  ProductId   { get; set; } // uniqueidentifier
		[Column,                                       NotNull    ] public string ProductName { get; set; } // nvarchar(4000)
		[Column,                                       NotNull    ] public string DataMatrix  { get; set; } // nvarchar(128)
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public string Barcode     { get; set; } // nvarchar(14)
	}

	[Table(Schema="dbo", Name="CRPTDocumentStatuses")]
	public partial class CRPTDocumentStatus
	{
		[PrimaryKey, Identity] public int    Id    { get; set; } // int
		[Column,     NotNull ] public string Value { get; set; } // varchar(128)
		[Column,     NotNull ] public string Name  { get; set; } // nvarchar(255)
		[Column,     NotNull ] public string Note  { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="CRPTDocumentTypes")]
	public partial class CRPTDocumentType
	{
		[PrimaryKey, Identity] public int    Id    { get; set; } // int
		[Column,     NotNull ] public string Value { get; set; } // varchar(128)
		[Column,     NotNull ] public string Name  { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="CRPTDocumentWithPurchaseTaskLinks")]
	public partial class CRPTDocumentWithPurchaseTaskLink
	{
		[PrimaryKey(1), NotNull] public int CRPTDocId { get; set; } // int
		[PrimaryKey(2), NotNull] public int TaskId    { get; set; } // int
	}

	[Table(Schema="dbo", Name="CRPTTechCardBarcodes")]
	public partial class CRPTTechCardBarcode
	{
		[PrimaryKey(1), NotNull] public Guid   ProductId { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull] public string Barcode   { get; set; } // nvarchar(14)
	}

	[Table(Schema="dbo", Name="CRPTWithEDODocumentLinks")]
	public partial class CRPTWithEDODocumentLink
	{
		[PrimaryKey(1), NotNull] public int CRPTDocId { get; set; } // int
		[PrimaryKey(2), NotNull] public int EDODocId  { get; set; } // int
	}

	[Table(Schema="dbo", Name="Currencies")]
	public partial class Currency
	{
		[PrimaryKey, NotNull] public int    Id         { get; set; } // int
		[Column,     NotNull] public string Code       { get; set; } // varchar(3)
		[Column,     NotNull] public string Short      { get; set; } // varchar(10)
		[Column,     NotNull] public string Name       { get; set; } // varchar(50)
		[Column,     NotNull] public int    CurrencyId { get; set; } // int
	}

	[Table(Schema="dbo", Name="DailyCurrencies")]
	public partial class DailyCurrency
	{
		[PrimaryKey, NotNull] public string   CharCode  { get; set; } // nvarchar(5)
		[Column,     NotNull] public DateTime CBRDate   { get; set; } // datetime
		[Column,     NotNull] public DateTime ReadDate  { get; set; } // datetime
		[Column,     NotNull] public decimal  RateValue { get; set; } // decimal(10, 5)
	}

	[Table(Schema="dbo", Name="DataFormats")]
	public partial class DataFormat
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(50)
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTPuttingDocuments")]
	public partial class DataMatrixCRPTPuttingDocument
	{
		[PrimaryKey, Identity   ] public int       Id                    { get; set; } // int
		[Column,        Nullable] public string    PublicId              { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public int       ActionId              { get; set; } // int
		[Column,        Nullable] public DateTime? ActionDate            { get; set; } // datetime
		[Column,     NotNull    ] public int       ContractorId          { get; set; } // int
		[Column,     NotNull    ] public int       StatusId              { get; set; } // int
		[Column,        Nullable] public string    CRPTStatus            { get; set; } // varchar(128)
		[Column,     NotNull    ] public int       CRPTStatusId          { get; set; } // int
		[Column,        Nullable] public string    CRPTType              { get; set; } // varchar(128)
		[Column,        Nullable] public long?     WMSDocumentId         { get; set; } // bigint
		[Column,        Nullable] public string    PrimaryDocumentName   { get; set; } // nvarchar(128)
		[Column,        Nullable] public string    PrimaryDocumentNumber { get; set; } // nvarchar(128)
		[Column,        Nullable] public DateTime? PrimaryDocumentDate   { get; set; } // datetime
		[Column,     NotNull    ] public int       PrimaryDocumentTypeId { get; set; } // int
		[Column,        Nullable] public string    Comments              { get; set; } // nvarchar(255)
		[Column,        Nullable] public string    Error                 { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public int       RegTryCount           { get; set; } // int
		[Column,        Nullable] public DateTime? NextTryDate           { get; set; } // datetime
		[Column,        Nullable] public Guid?     AuthorId              { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime  CreatedDate           { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ChangedDate           { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTPuttingDocumentItems")]
	public partial class DataMatrixCRPTPuttingDocumentItem
	{
		[PrimaryKey,                                   Identity   ] public int    Id         { get; set; } // int
		[Column,                                       NotNull    ] public int    DocumentId { get; set; } // int
		[Column,                                          Nullable] public Guid?  ProductId  { get; set; } // uniqueidentifier
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public string Barcode    { get; set; } // nvarchar(14)
		[Column,                                       NotNull    ] public string DataMatrix { get; set; } // nvarchar(128)
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTPuttingDocumentsArchive")]
	public partial class DataMatrixCRPTPuttingDocumentsArchive
	{
		[PrimaryKey(1), Identity   ] public int       Id                    { get; set; } // int
		[PrimaryKey(2), NotNull    ] public int       DocId                 { get; set; } // int
		[Column,           Nullable] public string    PublicId              { get; set; } // nvarchar(128)
		[Column,        NotNull    ] public int       ActionId              { get; set; } // int
		[Column,           Nullable] public DateTime? ActionDate            { get; set; } // datetime
		[Column,        NotNull    ] public int       ContractorId          { get; set; } // int
		[Column,        NotNull    ] public int       StatusId              { get; set; } // int
		[Column,           Nullable] public string    CRPTStatus            { get; set; } // varchar(128)
		[Column,        NotNull    ] public int       CRPTStatusId          { get; set; } // int
		[Column,           Nullable] public string    CRPTType              { get; set; } // varchar(128)
		[Column,           Nullable] public long?     WMSDocumentId         { get; set; } // bigint
		[Column,           Nullable] public string    PrimaryDocumentName   { get; set; } // nvarchar(128)
		[Column,           Nullable] public string    PrimaryDocumentNumber { get; set; } // nvarchar(128)
		[Column,           Nullable] public DateTime? PrimaryDocumentDate   { get; set; } // datetime
		[Column,        NotNull    ] public int       PrimaryDocumentTypeId { get; set; } // int
		[Column,           Nullable] public string    Comments              { get; set; } // nvarchar(255)
		[Column,           Nullable] public string    Error                 { get; set; } // nvarchar(4000)
		[Column,        NotNull    ] public int       RegTryCount           { get; set; } // int
		[Column,           Nullable] public DateTime? NextTryDate           { get; set; } // datetime
		[Column,           Nullable] public Guid?     AuthorId              { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public DateTime  CreatedDate           { get; set; } // datetime
		[Column,        NotNull    ] public DateTime  ChangedDate           { get; set; } // datetime
		[Column,        NotNull    ] public DateTime  ArchiveDate           { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTPuttingQueue")]
	public partial class DataMatrixCRPTPuttingQueue
	{
		[PrimaryKey, Identity] public int    Id         { get; set; } // int
		[Column,     NotNull ] public string DataMatrix { get; set; } // nvarchar(128)
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTPuttingQueueArchive")]
	public partial class DataMatrixCRPTPuttingQueueArchive
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public int      QueueId     { get; set; } // int
		[Column,     NotNull ] public string   DataMatrix  { get; set; } // nvarchar(128)
		[Column,     NotNull ] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTWithdrawalDocuments")]
	public partial class DataMatrixCRPTWithdrawalDocument
	{
		[PrimaryKey, Identity   ] public int       Id                    { get; set; } // int
		[Column,        Nullable] public Guid?     OrderId               { get; set; } // uniqueidentifier
		[Column,        Nullable] public string    PublicId              { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public int       ActionId              { get; set; } // int
		[Column,        Nullable] public DateTime? ActionDate            { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  PrimaryDocumentDate   { get; set; } // datetime
		[Column,     NotNull    ] public string    PrimaryDocumentNumber { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public int       PrimaryDocumentTypeId { get; set; } // int
		[Column,        Nullable] public string    PrimaryDocumentName   { get; set; } // nvarchar(255)
		[Column,        Nullable] public string    PdfFile               { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public int       ContractorId          { get; set; } // int
		[Column,        Nullable] public int?      KKTId                 { get; set; } // int
		[Column,     NotNull    ] public string    CRPTStatus            { get; set; } // varchar(128)
		[Column,     NotNull    ] public int       CRPTStatusId          { get; set; } // int
		[Column,     NotNull    ] public int       StatusId              { get; set; } // int
		[Column,        Nullable] public string    Comments              { get; set; } // nvarchar(255)
		[Column,        Nullable] public string    Error                 { get; set; } // nvarchar(1000)
		[Column,     NotNull    ] public int       RegTryCount           { get; set; } // int
		[Column,        Nullable] public DateTime? NextTryDate           { get; set; } // datetime
		[Column,        Nullable] public Guid?     AuthorId              { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int       SourceId              { get; set; } // int
		[Column,     NotNull    ] public DateTime  CreatedDate           { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ChangedDate           { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTWithdrawalDocumentActions")]
	public partial class DataMatrixCRPTWithdrawalDocumentAction
	{
		[PrimaryKey, NotNull] public int    Id          { get; set; } // int
		[Column,     NotNull] public string Name        { get; set; } // nvarchar(255)
		[Column,     NotNull] public string Description { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTWithdrawalDocumentCRPTStatuses")]
	public partial class DataMatrixCRPTWithdrawalDocumentCRPTStatus
	{
		[PrimaryKey, NotNull] public int    Id          { get; set; } // int
		[Column,     NotNull] public string Name        { get; set; } // nvarchar(128)
		[Column,     NotNull] public string Description { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTWithdrawalDocumentItems")]
	public partial class DataMatrixCRPTWithdrawalDocumentItem
	{
		[PrimaryKey, Identity   ] public int       Id                    { get; set; } // int
		[Column,     NotNull    ] public int       DocumentId            { get; set; } // int
		[Column,        Nullable] public Guid?     ProductId             { get; set; } // uniqueidentifier
		[Column,        Nullable] public double?   ProductCost           { get; set; } // float
		[Column,     NotNull    ] public string    DataMatrix            { get; set; } // nvarchar(128)
		[Column,        Nullable] public DateTime? PrimaryDocumentDate   { get; set; } // datetime
		[Column,        Nullable] public int?      PrimaryDocumentTypeId { get; set; } // int
		[Column,        Nullable] public string    PrimaryDocumentNumber { get; set; } // nvarchar(100)
		[Column,        Nullable] public string    PrimaryDocumentName   { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTWithdrawalDocumentsArchive")]
	public partial class DataMatrixCRPTWithdrawalDocumentsArchive
	{
		[PrimaryKey, Identity   ] public int       Id                    { get; set; } // int
		[Column,     NotNull    ] public int       DocId                 { get; set; } // int
		[Column,        Nullable] public Guid?     OrderId               { get; set; } // uniqueidentifier
		[Column,        Nullable] public string    PublicId              { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public int       ActionId              { get; set; } // int
		[Column,        Nullable] public DateTime? ActionDate            { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  PrimaryDocumentDate   { get; set; } // datetime
		[Column,     NotNull    ] public string    PrimaryDocumentNumber { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public int       PrimaryDocumentTypeId { get; set; } // int
		[Column,        Nullable] public string    PrimaryDocumentName   { get; set; } // nvarchar(255)
		[Column,        Nullable] public string    PdfFile               { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public int       ContractorId          { get; set; } // int
		[Column,        Nullable] public int?      KKTId                 { get; set; } // int
		[Column,        Nullable] public string    CRPTStatus            { get; set; } // varchar(128)
		[Column,     NotNull    ] public int       CRPTStatusId          { get; set; } // int
		[Column,     NotNull    ] public int       StatusId              { get; set; } // int
		[Column,        Nullable] public string    Comments              { get; set; } // nvarchar(255)
		[Column,        Nullable] public string    Error                 { get; set; } // nvarchar(1000)
		[Column,     NotNull    ] public int       RegTryCount           { get; set; } // int
		[Column,        Nullable] public DateTime? NextTryDate           { get; set; } // datetime
		[Column,        Nullable] public Guid?     AuthorId              { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime  CreatedDate           { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ChangedDate           { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ArchiveDate           { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTWithdrawalDocumentStatuses")]
	public partial class DataMatrixCRPTWithdrawalDocumentStatus
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DataMatrixCRPTWithdrawalDocumentTypes")]
	public partial class DataMatrixCRPTWithdrawalDocumentType
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DebugFiles")]
	public partial class DebugFile
	{
		[PrimaryKey(1), NotNull    ] public int    SessionID    { get; set; } // int
		[PrimaryKey(2), Identity   ] public int    FileID       { get; set; } // int
		[Column,        NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,           Nullable] public byte[] FileData     { get; set; } // varbinary(max)
		[Column,           Nullable] public string ErrorMessage { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DebugParameters")]
	public partial class DebugParameter
	{
		[PrimaryKey(1), NotNull    ] public int    SessionID      { get; set; } // int
		[PrimaryKey(2), Identity   ] public int    ParameterID    { get; set; } // int
		[Column,        NotNull    ] public string ParameterName  { get; set; } // nvarchar(255)
		[Column,           Nullable] public string ParameterValue { get; set; } // nvarchar(4000)
	}

	[Table(Schema="dbo", Name="DebugSession")]
	public partial class DebugSession
	{
		[PrimaryKey, Identity] public int      SessionID   { get; set; } // int
		[Column,     NotNull ] public DateTime SessionDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DeliveryHolydays")]
	public partial class DeliveryHolyday
	{
		[PrimaryKey, NotNull] public DateTime Date { get; set; } // date
	}

	[Table(Schema="dbo", Name="DeliveryKindsServices")]
	public partial class DeliveryKindsService
	{
		[PrimaryKey(1), NotNull    ] public int   DeliveryServiceId { get; set; } // int
		[PrimaryKey(2), NotNull    ] public int   DeliveryKindId    { get; set; } // int
		[Column,           Nullable] public bool? DefaultService    { get; set; } // bit
	}

	[Table(Schema="dbo", Name="DeliveryServicePrinterConfigurations")]
	public partial class DeliveryServicePrinterConfiguration
	{
		[PrimaryKey, Identity] public int    Id            { get; set; } // int
		[Column,     NotNull ] public string WorkplaceName { get; set; } // nvarchar(255)
		[Column,     NotNull ] public string A4Printer     { get; set; } // nvarchar(500)
		[Column,     NotNull ] public string LabelPrinters { get; set; } // nvarchar(4000)
	}

	[Table(Schema="dbo", Name="Departments")]
	public partial class Department
	{
		[PrimaryKey, NotNull] public int    Id        { get; set; } // int
		[Column,     NotNull] public string Name      { get; set; } // nvarchar(128)
		[Column,     NotNull] public string ShortName { get; set; } // nvarchar(32)
	}

	[Table(Schema="dbo", Name="DiscountCalcArchive")]
	public partial class DiscountCalcArchive
	{
		[Column, NotNull    ] public int     CalcId     { get; set; } // int
		[Column, NotNull    ] public Guid    SiteId     { get; set; } // uniqueidentifier
		[Column, NotNull    ] public Guid    ProductId  { get; set; } // uniqueidentifier
		[Column, NotNull    ] public int     DiscountId { get; set; } // int
		[Column,    Nullable] public double? FinalPrice { get; set; } // float
	}

	[Table(Schema="dbo", Name="DiscountGroups")]
	public partial class DiscountGroup
	{
		[PrimaryKey, Identity   ] public int       Id          { get; set; } // int
		[Column,     NotNull    ] public string    Name        { get; set; } // nvarchar(100)
		[Column,     NotNull    ] public DateTime  CreatedDate { get; set; } // datetime
		[Column,        Nullable] public DateTime? MinDateFrom { get; set; } // datetime
		[Column,        Nullable] public DateTime? MaxDateTo   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DiscountObjectType")]
	public partial class DiscountObjectType
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DiscountsGroupsLinks")]
	public partial class DiscountsGroupsLink
	{
		[PrimaryKey(1), NotNull] public int GroupId    { get; set; } // int
		[PrimaryKey(2), NotNull] public int DiscountId { get; set; } // int
	}

	[Table(Schema="dbo", Name="DiscountType")]
	public partial class DiscountType
	{
		[PrimaryKey, Identity] public int    Id        { get; set; } // int
		[Column,     NotNull ] public string Name      { get; set; } // nvarchar(255)
		[Column,     NotNull ] public string ShortName { get; set; } // nvarchar(10)
	}

	[Table(Schema="dbo", Name="DiscountValuesToDiscountIds")]
	public partial class DiscountValuesToDiscountId
	{
		[PrimaryKey(1), NotNull] public int    DiscountId { get; set; } // int
		[PrimaryKey(2), NotNull] public double Value      { get; set; } // float
	}

	[Table(Schema="dbo", Name="DISTRIBUTORS")]
	public partial class DISTRIBUTOR
	{
		[PrimaryKey, NotNull    ] public Guid   ID               { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string NAME             { get; set; } // varchar(255)
		[Column,     NotNull    ] public bool   ACTIVE           { get; set; } // bit
		[Column,        Nullable] public bool?  GOINPURCHASELIST { get; set; } // bit
		[Column,        Nullable] public bool?  FIRSTALWAYS      { get; set; } // bit
		[Column,        Nullable] public string PHONE            { get; set; } // nvarchar(64)
		[Column,        Nullable] public string EMAIL            { get; set; } // nvarchar(1024)
		[Column,        Nullable] public bool?  SENDMAIL         { get; set; } // bit
		[Column,        Nullable] public string ADDRESS          { get; set; } // nvarchar(1024)
		[Column,        Nullable] public string COMMENT          { get; set; } // nvarchar(4000)
		[Column,        Nullable] public byte?  PRIORITY         { get; set; } // tinyint
		[Column,        Nullable] public int?   DEALERORDER      { get; set; } // int

		#region Associations

		/// <summary>
		/// PRICESFOREIGNDISTRIBUTOR_BackReference (dbo.PRICES)
		/// </summary>
		[Association(ThisKey="ID", OtherKey="DISID", CanBeNull=true)]
		public IEnumerable<PRICE> Pricesforeigndistributors { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="DistributorsApiOrders")]
	public partial class DistributorsApiOrder
	{
		[PrimaryKey, Identity   ] public int       Id            { get; set; } // int
		[Column,     NotNull    ] public Guid      DistributorId { get; set; } // uniqueidentifier
		[Column,        Nullable] public int?      PurchaseCode  { get; set; } // int
		[Column,     NotNull    ] public Guid      OrderId       { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string    ApiOrderId    { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public DateTime  CreatedDate   { get; set; } // datetime
		[Column,     NotNull    ] public int       Status        { get; set; } // int
		[Column,        Nullable] public string    ApiStatus     { get; set; } // nvarchar(255)
		[Column,        Nullable] public DateTime? CloseDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DistributorsApiOrdersArchive")]
	public partial class DistributorsApiOrdersArchive
	{
		[PrimaryKey(1), NotNull    ] public int       Id            { get; set; } // int
		[Column,        NotNull    ] public Guid      DistributorId { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public int       PurchaseCode  { get; set; } // int
		[Column,        NotNull    ] public string    ApiOrderId    { get; set; } // nvarchar(50)
		[Column,        NotNull    ] public Guid      OrderId       { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public DateTime  CreatedDate   { get; set; } // datetime
		[Column,        NotNull    ] public int       Status        { get; set; } // int
		[Column,           Nullable] public string    ApiStatus     { get; set; } // nvarchar(255)
		[Column,           Nullable] public DateTime? CloseDate     { get; set; } // datetime
		[Column,        NotNull    ] public bool      IsArchive     { get; set; } // bit
		[PrimaryKey(2), NotNull    ] public DateTime  ArchiveDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="DistributorsApiOrdersContent")]
	public partial class DistributorsApiOrdersContent
	{
		[PrimaryKey(1), NotNull    ] public int      OrderId     { get; set; } // int
		[PrimaryKey(2), NotNull    ] public Guid     ProductId   { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public Guid     PriceListId { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string   OutSku      { get; set; } // nvarchar(50)
		[Column,        NotNull    ] public int      Quantity    { get; set; } // int
		[Column,           Nullable] public double?  Price       { get; set; } // float
		[Column,        NotNull    ] public bool     Done        { get; set; } // bit
		[Column,        NotNull    ] public DateTime ReportDate  { get; set; } // datetime
		[Column,        NotNull    ] public string   Comment     { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DistributorsApiOrdersContentArchive")]
	public partial class DistributorsApiOrdersContentArchive
	{
		[PrimaryKey(1), NotNull    ] public int      OrderId     { get; set; } // int
		[PrimaryKey(2), NotNull    ] public Guid     ProductId   { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public Guid     PriceListId { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string   OutSku      { get; set; } // nvarchar(50)
		[Column,        NotNull    ] public int      Quantity    { get; set; } // int
		[Column,           Nullable] public double?  Price       { get; set; } // float
		[Column,        NotNull    ] public bool     Done        { get; set; } // bit
		[Column,        NotNull    ] public DateTime ReportDate  { get; set; } // datetime
		[Column,        NotNull    ] public bool     IsArchive   { get; set; } // bit
		[PrimaryKey(3), NotNull    ] public DateTime ArchivDate  { get; set; } // datetime
		[Column,        NotNull    ] public string   Comment     { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="DistributorsApiSettings")]
	public partial class DistributorsApiSetting
	{
		[PrimaryKey, NotNull    ] public Guid   DistributorId    { get; set; } // uniqueidentifier
		[Column,        Nullable] public string ApiHost          { get; set; } // nvarchar(255)
		[Column,        Nullable] public string ApiUser          { get; set; } // nvarchar(100)
		[Column,        Nullable] public string ApiPassword      { get; set; } // nvarchar(100)
		[Column,        Nullable] public string ApiSecretToken   { get; set; } // nvarchar(100)
		[Column,        Nullable] public int?   AnswerDataFormat { get; set; } // int
	}

	[Table(Schema="dbo", Name="EmailSiteStatusTemplates")]
	public partial class EmailSiteStatusTemplate
	{
		[PrimaryKey(1), NotNull] public Guid SiteId     { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull] public byte StatusId   { get; set; } // tinyint
		[PrimaryKey(3), NotNull] public int  TemplateId { get; set; } // int
	}

	[Table(Schema="dbo", Name="_excludedOrdersForReserves")]
	public partial class ExcludedOrdersForReserve
	{
		[PrimaryKey, NotNull] public Guid OrderId { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="ExportBarcodes")]
	public partial class ExportBarcode
	{
		[PrimaryKey(1), Identity] public long     Id         { get; set; } // bigint
		[Column,        NotNull ] public Guid     ProductId  { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull ] public string   Barcode    { get; set; } // nvarchar(39)
		[Column,        NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull ] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportBarcodesSessions")]
	public partial class ExportBarcodesSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportBarcodesSessionItems")]
	public partial class ExportBarcodesSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportBarcodesSessionItemsArchive")]
	public partial class ExportBarcodesSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     ProductId  { get; set; } // uniqueidentifier
		[PrimaryKey(3), NotNull] public string   Barcode    { get; set; } // nvarchar(39)
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportBarcodesSessionsArchive")]
	public partial class ExportBarcodesSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportBrands")]
	public partial class ExportBrand
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     BrandId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,     NotNull ] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportBrandsSessions")]
	public partial class ExportBrandsSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportBrandsSessionItems")]
	public partial class ExportBrandsSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportBrandsSessionItemsArchive")]
	public partial class ExportBrandsSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     BrandId    { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportBrandsSessionsArchive")]
	public partial class ExportBrandsSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportClients")]
	public partial class ExportClient
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     ClientId   { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,     NotNull ] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportClientsSessions")]
	public partial class ExportClientsSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportClientsSessionItems")]
	public partial class ExportClientsSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportClientsSessionItemsArchive")]
	public partial class ExportClientsSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     ClientId   { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportClientsSessionsArchive")]
	public partial class ExportClientsSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportDistributors")]
	public partial class ExportDistributor
	{
		[PrimaryKey, Identity] public long     Id            { get; set; } // bigint
		[Column,     NotNull ] public Guid     DistributorId { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate    { get; set; } // datetime
		[Column,     NotNull ] public int      Operation     { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportDistributorsExchangeIds")]
	public partial class ExportDistributorsExchangeId
	{
		[PrimaryKey(1), NotNull] public Guid InnerId { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull] public Guid OuterId { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="ExportDistributorsSessions")]
	public partial class ExportDistributorsSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportDistributorsSessionItems")]
	public partial class ExportDistributorsSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportDistributorsSessionItemsArchive")]
	public partial class ExportDistributorsSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId     { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id            { get; set; } // bigint
		[Column,        NotNull] public Guid     DistributorId { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate    { get; set; } // datetime
		[Column,        NotNull] public int      Operation     { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportDistributorsSessionsArchive")]
	public partial class ExportDistributorsSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportOrders")]
	public partial class ExportOrder
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     OrderId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,     NotNull ] public int      Operation  { get; set; } // int
		[Column,     NotNull ] public bool     IsPartial  { get; set; } // bit
		[Column,     NotNull ] public int      OrderState { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportOrderInvoiceSummary")]
	public partial class ExportOrderInvoiceSummary
	{
		[PrimaryKey, Identity] public long     Id              { get; set; } // bigint
		[Column,     NotNull ] public Guid     InvoicePublicId { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     OrderId         { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportOrderInvoiceSummarySessions")]
	public partial class ExportOrderInvoiceSummarySession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportOrderInvoiceSummarySessionItems")]
	public partial class ExportOrderInvoiceSummarySessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportOrderInvoiceSummarySessionItemsArchive")]
	public partial class ExportOrderInvoiceSummarySessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId       { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id              { get; set; } // bigint
		[Column,        NotNull] public Guid     InvoicePublicId { get; set; } // uniqueidentifier
		[Column,        NotNull] public Guid     OrderId         { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportOrderInvoiceSummarySessionsArchive")]
	public partial class ExportOrderInvoiceSummarySessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportOrdersSessions")]
	public partial class ExportOrdersSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportOrdersSessionItems")]
	public partial class ExportOrdersSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportOrdersSessionItemsArchive")]
	public partial class ExportOrdersSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     OrderId    { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
		[Column,        NotNull] public bool     IsPartial  { get; set; } // bit
		[Column,        NotNull] public int      OrderState { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportOrdersSessionsArchive")]
	public partial class ExportOrdersSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportOrderWMS")]
	public partial class ExportOrderWM
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     OrderId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportOrderWMSSessions")]
	public partial class ExportOrderWMSSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportOrderWMSSessionItems")]
	public partial class ExportOrderWMSSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportOrderWMSSessionItemsArchive")]
	public partial class ExportOrderWMSSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     OrderId    { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportOrderWMSSessionsArchive")]
	public partial class ExportOrderWMSSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportProducts")]
	public partial class ExportProduct
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     ProductId  { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,     NotNull ] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportProductReservesChangesDates")]
	public partial class ExportProductReservesChangesDate
	{
		[Column, NotNull] public DateTime ExportTime { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportProductsSessions")]
	public partial class ExportProductsSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportProductsSessionItems")]
	public partial class ExportProductsSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportProductsSessionItemsArchive")]
	public partial class ExportProductsSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     ProductId  { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportProductsSessionsArchive")]
	public partial class ExportProductsSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportPurchaseTasks")]
	public partial class ExportPurchaseTask
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     TaskId     { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,     NotNull ] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportPurchaseTasksSessions")]
	public partial class ExportPurchaseTasksSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportPurchaseTasksSessionItems")]
	public partial class ExportPurchaseTasksSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportPurchaseTasksSessionItemsArchive")]
	public partial class ExportPurchaseTasksSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     TaskId     { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportPurchaseTasksSessionsArchive")]
	public partial class ExportPurchaseTasksSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportPurchaseTasksSettings")]
	public partial class ExportPurchaseTasksSetting
	{
		[Column, NotNull] public bool OnlyStorageArea { get; set; } // bit
	}

	[Table(Schema="dbo", Name="ExportRefundTasks")]
	public partial class ExportRefundTask
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     PublicId   { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportRefundTasksSessions")]
	public partial class ExportRefundTasksSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportRefundTasksSessionItems")]
	public partial class ExportRefundTasksSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportRefundTasksSessionItemsArchive")]
	public partial class ExportRefundTasksSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     PublicId   { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportRefundTasksSessionsArchive")]
	public partial class ExportRefundTasksSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="ExportRozliv")]
	public partial class ExportRozliv
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public int      DocId      { get; set; } // int
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,     NotNull ] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportRozlivSessions")]
	public partial class ExportRozlivSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ExportRozlivSessionItems")]
	public partial class ExportRozlivSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="ExportRozlivSessionItemsArchive")]
	public partial class ExportRozlivSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public int      DocId      { get; set; } // int
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ExportRozlivSessionsArchive")]
	public partial class ExportRozlivSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="Holidays")]
	public partial class Holiday
	{
		[PrimaryKey, NotNull] public DateTime Date { get; set; } // date
	}

	[Table(Schema="dbo", Name="HttpMethods")]
	public partial class HttpMethod
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // varchar(10)
	}

	[Table(Schema="dbo", Name="KitDefinitions")]
	public partial class KitDefinition
	{
		[PrimaryKey, Identity   ] public int    Id        { get; set; } // int
		[Column,     NotNull    ] public Guid   CreatorId { get; set; } // uniqueidentifier
		[Column,        Nullable] public string Name      { get; set; } // nvarchar(300)

		#region Associations

		/// <summary>
		/// FK__KitDefini__Creat__62108194 (dbo.USERS)
		/// </summary>
		[Association(ThisKey="CreatorId", OtherKey="ID", CanBeNull=false)]
		public USER Creator { get; set; }

		/// <summary>
		/// FK__Monobrand__MonoI__6304A5CD_BackReference (dbo.MonobrandKits)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MonoId", CanBeNull=true)]
		public IEnumerable<MonobrandKit> MonobrandMonoI6304A5Cds { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="LINKS")]
	public partial class LINK
	{
		[PrimaryKey, NotNull] public Guid ID               { get; set; } // uniqueidentifier
		[Column,     NotNull] public Guid CATALOGPRODUCTID { get; set; } // uniqueidentifier
		[Column,     NotNull] public int  PRICERECORDINDEX { get; set; } // int

		#region Associations

		/// <summary>
		/// LINKSFOREIGNCATALOGPRODUCT (dbo.PRODUCTS)
		/// </summary>
		[Association(ThisKey="CATALOGPRODUCTID", OtherKey="ID", CanBeNull=false)]
		public PRODUCT CATALOGPRODUCT { get; set; }

		/// <summary>
		/// LINKSFOREIGNPRICERECORD (dbo.PRICESRECORDS)
		/// </summary>
		[Association(ThisKey="PRICERECORDINDEX", OtherKey="RECORDINDEX", CanBeNull=false)]
		public PRICESRECORD LINKSFOREIGNPRICERECORD { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="MANUFACTURERS")]
	public partial class MANUFACTURER
	{
		[PrimaryKey, NotNull    ] public Guid   ID          { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string NAME        { get; set; } // varchar(255)
		[Column,     NotNull    ] public bool   EXTRAUSED   { get; set; } // bit
		[Column,     NotNull    ] public int    EXTRA       { get; set; } // int
		[Column,     NotNull    ] public string DESCRIPTION { get; set; } // nvarchar(1024)
		[Column,     NotNull    ] public bool   PUBLISHED   { get; set; } // bit
		[Column,        Nullable] public bool?  IsDeleted   { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK__Monobrand__ManId__63F8CA06_BackReference (dbo.MonobrandKits)
		/// </summary>
		[Association(ThisKey="ID", OtherKey="ManId", CanBeNull=true)]
		public IEnumerable<MonobrandKit> MonobrandManId63F8Cas { get; set; }

		/// <summary>
		/// PRODUCTSFOREIGNMANUFACTURER_BackReference (dbo.PRODUCTS)
		/// </summary>
		[Association(ThisKey="ID", OtherKey="MANID", CanBeNull=true)]
		public IEnumerable<PRODUCT> Productsforeignmanufacturers { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="MonobrandKits")]
	public partial class MonobrandKit
	{
		[PrimaryKey, Identity] public int  Id     { get; set; } // int
		[Column,     NotNull ] public int  MonoId { get; set; } // int
		[Column,     NotNull ] public Guid ManId  { get; set; } // uniqueidentifier

		#region Associations

		/// <summary>
		/// FK__Monobrand__ManId__63F8CA06 (dbo.MANUFACTURERS)
		/// </summary>
		[Association(ThisKey="ManId", OtherKey="ID", CanBeNull=false)]
		public MANUFACTURER Man { get; set; }

		/// <summary>
		/// FK__Monobrand__MonoI__6304A5CD (dbo.KitDefinitions)
		/// </summary>
		[Association(ThisKey="MonoId", OtherKey="Id", CanBeNull=false)]
		public KitDefinition Mono { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_mousetrapClients")]
	public partial class MousetrapClient
	{
		[PrimaryKey, Identity] public int  Id       { get; set; } // int
		[Column,     NotNull ] public Guid ClientId { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="_mousetrapDonorOrders")]
	public partial class MousetrapDonorOrder
	{
		[PrimaryKey(1), NotNull] public Guid     ClientId  { get; set; } // uniqueidentifier
		[Column,        NotNull] public Guid     OrderId   { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull] public DateTime ExportDay { get; set; } // date
	}

	[Table(Schema="dbo", Name="_mousetrapExportInterval")]
	public partial class MousetrapExportInterval
	{
		[PrimaryKey, Identity] public int Id          { get; set; } // int
		[Column,     NotNull ] public int WmsHourFrom { get; set; } // int
		[Column,     NotNull ] public int WmsHourTo   { get; set; } // int
	}

	[Table(Schema="dbo", Name="_needReceivedOrders")]
	public partial class NeedReceivedOrder
	{
		[PrimaryKey, NotNull    ] public Guid     Id             { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public byte     StatusId       { get; set; } // tinyint
		[Column,     NotNull    ] public int      ServiceId      { get; set; } // int
		[Column,        Nullable] public string   DispatchNumber { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public DateTime CreatedDate    { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ObjectSyncSettings")]
	public partial class ObjectSyncSetting
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="ObjectTypes")]
	public partial class ObjectType
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="OrderExportToWmsFilters")]
	public partial class OrderExportToWmsFilter
	{
		[PrimaryKey, Identity   ] public int       Id          { get; set; } // int
		[Column,     NotNull    ] public string    Filters     { get; set; } // varchar(max)
		[Column,     NotNull    ] public DateTime  ReportDate  { get; set; } // datetime
		[Column,     NotNull    ] public bool      Archive     { get; set; } // bit
		[Column,        Nullable] public DateTime? ArchiveDate { get; set; } // datetime
		[Column,     NotNull    ] public Guid      Author      { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="OrderItemsInstockQuantityCorrectHistory")]
	public partial class OrderItemsInstockQuantityCorrectHistory
	{
		[PrimaryKey(1), NotNull] public long     CorrectId        { get; set; } // bigint
		[Column,        NotNull] public int      CorrectState     { get; set; } // int
		[Column,        NotNull] public byte     StatusPrioriry   { get; set; } // tinyint
		[PrimaryKey(2), NotNull] public int      Number           { get; set; } // int
		[PrimaryKey(3), NotNull] public int      Sku              { get; set; } // int
		[Column,        NotNull] public int      Quantity         { get; set; } // int
		[PrimaryKey(4), NotNull] public bool     IsGift           { get; set; } // bit
		[Column,        NotNull] public int      PurchaseQuantity { get; set; } // int
		[Column,        NotNull] public int      InstockQuantity  { get; set; } // int
		[PrimaryKey(5), NotNull] public DateTime ReportDate       { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_OrdersContentTriggerUpdateOrderNumbers")]
	public partial class OrdersContentTriggerUpdateOrderNumber
	{
		[Column, NotNull] public int Number { get; set; } // int
	}

	[Table(Schema="dbo", Name="_OrdersContentTriggerUpdateResults")]
	public partial class OrdersContentTriggerUpdateResult
	{
		[Column, NotNull] public int  Number          { get; set; } // int
		[Column, NotNull] public int  Sku             { get; set; } // int
		[Column, NotNull] public bool IsGift          { get; set; } // bit
		[Column, NotNull] public int  Quantity        { get; set; } // int
		[Column, NotNull] public int  FactQuantity    { get; set; } // int
		[Column, NotNull] public int  InstockQuantity { get; set; } // int
	}

	[Table(Schema="dbo", Name="OrdersInstockQuantityCorrectHistory")]
	public partial class OrdersInstockQuantityCorrectHistory
	{
		[PrimaryKey, Identity] public long     CorrectId  { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreateDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="OrdersReservesMovedHistory")]
	public partial class OrdersReservesMovedHistory
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     SourceId   { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     TargetId   { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     ProductId  { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     AuthorId   { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      MovedCount { get; set; } // int
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_ordersStatusHistoryTriggerActions")]
	public partial class OrdersStatusHistoryTriggerAction
	{
		[Column, NotNull] public Guid     Number     { get; set; } // uniqueidentifier
		[Column, NotNull] public string   ActionTest { get; set; } // nvarchar(255)
		[Column, NotNull] public DateTime ReportDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_OrdersStatusHistoryTriggerUpdateOrderNumbers")]
	public partial class OrdersStatusHistoryTriggerUpdateOrderNumber
	{
		[Column, NotNull] public int Number { get; set; } // int
		[Column, NotNull] public int Sku    { get; set; } // int
	}

	[Table(Schema="dbo", Name="OrdersWarehouseContainers")]
	public partial class OrdersWarehouseContainer
	{
		[PrimaryKey, Identity] public long     Id              { get; set; } // bigint
		[Column,     NotNull ] public Guid     OrderId         { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string   ContainerNumber { get; set; } // varchar(20)
		[Column,     NotNull ] public string   CellAddress     { get; set; } // varchar(20)
		[Column,     NotNull ] public DateTime ReportDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="PaymentTypes")]
	public partial class PaymentType
	{
		[Column(),                 PrimaryKey,  Identity] public int     ID            { get; set; } // int
		[Column(),                 NotNull              ] public string  TITLE         { get; set; } // varchar(100)
		[Column(),                 NotNull              ] public string  DESCRIPTION   { get; set; } // nvarchar(1024)
		[Column(),                 NotNull              ] public string  ADAPTER       { get; set; } // nvarchar(25)
		[Column(),                 NotNull              ] public double  PRICE         { get; set; } // float
		[Column("PRICE_ORIGINAL"), NotNull              ] public double  PriceOriginal { get; set; } // float
		[Column("MIN_ORDER_SUM"),  NotNull              ] public double  MinOrderSum   { get; set; } // float
		[Column("Max_Order_Sum"),     Nullable          ] public double? MaxOrderSum   { get; set; } // float
		[Column("SORT_ID"),        NotNull              ] public int     SortId        { get; set; } // int
		[Column("IS_ACTIVE"),      NotNull              ] public bool    IsActive      { get; set; } // bit
		[Column(),                 NotNull              ] public bool    IsDeleeted    { get; set; } // bit
		[Column(),                 NotNull              ] public int     SourceID      { get; set; } // int
		[Column(),                 NotNull              ] public string  DISABLED      { get; set; } // nvarchar(255)
		[Column(),                 NotNull              ] public bool    IsOld         { get; set; } // bit
	}

	[Table(Schema="dbo", Name="PRICES")]
	public partial class PRICE
	{
		[PrimaryKey, NotNull    ] public Guid      ID              { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string    NAME            { get; set; } // varchar(255)
		[Column,        Nullable] public Guid?     DISID           { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public double    DISCOUNT        { get; set; } // float
		[Column,     NotNull    ] public byte      DEFAULTCURRENCY { get; set; } // tinyint
		[Column,     NotNull    ] public double    TURNDOLLARSRATE { get; set; } // float
		[Column,     NotNull    ] public string    SHEET           { get; set; } // varchar(1024)
		[Column,     NotNull    ] public string    NAMERANGE       { get; set; } // varchar(16)
		[Column,     NotNull    ] public string    PRICERANGE      { get; set; } // varchar(16)
		[Column,     NotNull    ] public int       FIRSTROW        { get; set; } // int
		[Column,     NotNull    ] public float     MAXPRICECHANGE  { get; set; } // real
		[Column,        Nullable] public string    STOPWORDS       { get; set; } // varchar(6000)
		[Column,        Nullable] public string    FILENAME        { get; set; } // varchar(1024)
		[Column,        Nullable] public DateTime? FILEDATE        { get; set; } // datetime
		[Column,        Nullable] public string    FILESHEETS      { get; set; } // varchar(1024)
		[Column,     NotNull    ] public string    COMMENT         { get; set; } // nvarchar(1024)
		[Column,     NotNull    ] public string    SKURANGE        { get; set; } // varchar(16)
		[Column,     NotNull    ] public string    STOCKRANGE      { get; set; } // nvarchar(16)
		[Column,     NotNull    ] public string    INSTOCKRANGE    { get; set; } // nvarchar(16)
		[Column,     NotNull    ] public bool      ISACTIVE        { get; set; } // bit

		#region Associations

		/// <summary>
		/// PRICESFOREIGNDISTRIBUTOR (dbo.DISTRIBUTORS)
		/// </summary>
		[Association(ThisKey="DISID", OtherKey="ID", CanBeNull=true)]
		public DISTRIBUTOR DI { get; set; }

		/// <summary>
		/// PRICESRECORDSFOREIGNPRICE_BackReference (dbo.PRICESRECORDS)
		/// </summary>
		[Association(ThisKey="ID", OtherKey="PRICEID", CanBeNull=true)]
		public IEnumerable<PRICESRECORD> Pricesrecordsforeignprices { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="PriceParams")]
	public partial class PriceParam
	{
		[Column,                                       NotNull    ] public decimal  USDRateExtra        { get; set; } // decimal(10, 5)
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public decimal? USDRateExtraAsRatio { get; set; } // numeric(17, 10)
	}

	[Table(Schema="dbo", Name="PRICESRECORDS")]
	public partial class PRICESRECORD
	{
		[PrimaryKey, Identity] public int    RECORDINDEX { get; set; } // int
		[Column,     NotNull ] public Guid   PRICEID     { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string NAME        { get; set; } // nvarchar(1024)
		[Column,     NotNull ] public byte   STATE       { get; set; } // tinyint
		[Column,     NotNull ] public bool   USED        { get; set; } // bit
		[Column,     NotNull ] public double PRICE       { get; set; } // float
		[Column,     NotNull ] public bool   DELETED     { get; set; } // bit
		[Column,     NotNull ] public string COMMENT     { get; set; } // nvarchar(1024)
		[Column,     NotNull ] public string SKU         { get; set; } // nvarchar(50)
		[Column,     NotNull ] public int    STOCK       { get; set; } // int
		[Column,     NotNull ] public int    INSTOCK     { get; set; } // int

		#region Associations

		/// <summary>
		/// LINKSFOREIGNPRICERECORD_BackReference (dbo.LINKS)
		/// </summary>
		[Association(ThisKey="RECORDINDEX", OtherKey="PRICERECORDINDEX", CanBeNull=true)]
		public IEnumerable<LINK> Linksforeignpricerecords { get; set; }

		/// <summary>
		/// PRICESRECORDSFOREIGNPRICE (dbo.PRICES)
		/// </summary>
		[Association(ThisKey="PRICEID", OtherKey="ID", CanBeNull=false)]
		public PRICE PRICESRECORDSFOREIGNPRICE { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="PRODUCTS")]
	public partial class PRODUCT
	{
		[Column(),           PrimaryKey,  NotNull] public Guid      ID              { get; set; } // uniqueidentifier
		[Column(),                        NotNull] public string    NAME            { get; set; } // varchar(1024)
		[Column(),                        NotNull] public Guid      MANID           { get; set; } // uniqueidentifier
		[Column(),                        NotNull] public double    PRICE           { get; set; } // float
		[Column(),              Nullable         ] public double?   BASEPRICE       { get; set; } // float
		[Column(),                        NotNull] public string    LABEL           { get; set; } // varchar(255)
		[Column(),              Nullable         ] public string    PARENTLABEL     { get; set; } // varchar(255)
		[Column(),                        NotNull] public byte      STATE           { get; set; } // tinyint
		[Column(),                        NotNull] public bool      USERCHANGED     { get; set; } // bit
		[Column(),                        NotNull] public bool      EXTRAUSED       { get; set; } // bit
		[Column(),                        NotNull] public int       EXTRA           { get; set; } // int
		[Column(),                        NotNull] public bool      AUTOUPDATE      { get; set; } // bit
		[Column(),              Nullable         ] public bool?     AUTOUPDATETESTS { get; set; } // bit
		[Column(),              Nullable         ] public bool?     PRODUCTEXISTS   { get; set; } // bit
		[Column(),                        NotNull] public bool      PHOTOEXISTS     { get; set; } // bit
		[Column(),                        NotNull] public int       VIEWSTYLEID     { get; set; } // int
		[Column(),                        NotNull] public string    CHILDNAME       { get; set; } // nvarchar(1024)
		[Column(),                        NotNull] public bool      TESTER          { get; set; } // bit
		[Column(),                        NotNull] public bool      PUBLISHED       { get; set; } // bit
		[Column(),                        NotNull] public DateTime  CREATEDATE      { get; set; } // datetime
		[Column(),                        NotNull] public DateTime  CHANGEDATE      { get; set; } // datetime
		[Column(),                        NotNull] public byte      CORRECTEDSTATUS { get; set; } // tinyint
		[Column(),                        NotNull] public int       INSTOCK         { get; set; } // int
		[Column(),                        NotNull] public bool      ISPROBIRKA      { get; set; } // bit
		[Column(),                        NotNull] public string    COMMENT         { get; set; } // nvarchar(500)
		[Column(),                        NotNull] public bool      DELETED         { get; set; } // bit
		[Column("IS_PROMO"),              NotNull] public bool      IsPromo         { get; set; } // bit
		[Column(),                        NotNull] public int       TEMPLATEID      { get; set; } // int
		[Column(),                        NotNull] public int       SKU             { get; set; } // int
		[Column(),                        NotNull] public bool      ISNEW           { get; set; } // bit
		[Column(),              Nullable         ] public DateTime? ISNEWSTARTDATE  { get; set; } // datetime
		[Column(),                        NotNull] public double    WEIGHT          { get; set; } // float
		[Column(),                        NotNull] public byte      DEFAULTCURRENCY { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// LINKSFOREIGNCATALOGPRODUCT_BackReference (dbo.LINKS)
		/// </summary>
		[Association(ThisKey="ID", OtherKey="CATALOGPRODUCTID", CanBeNull=true)]
		public IEnumerable<LINK> Linksforeigncatalogproducts { get; set; }

		/// <summary>
		/// PRODUCTSFOREIGNMANUFACTURER (dbo.MANUFACTURERS)
		/// </summary>
		[Association(ThisKey="MANID", OtherKey="ID", CanBeNull=false)]
		public MANUFACTURER MAN { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="ProductInstockCorrectHistory")]
	public partial class ProductInstockCorrectHistory
	{
		[Column,        NotNull    ] public int      WarehouseId  { get; set; } // int
		[PrimaryKey(1), NotNull    ] public int      Sku          { get; set; } // int
		[Column,        NotNull    ] public int      OldQuantity  { get; set; } // int
		[Column,        NotNull    ] public int      NewQuantity  { get; set; } // int
		[Column,           Nullable] public int?     DocumentType { get; set; } // int
		[Column,           Nullable] public long?    DocId        { get; set; } // bigint
		[PrimaryKey(2), NotNull    ] public DateTime ReportDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ProductQuality")]
	public partial class ProductQuality
	{
		[PrimaryKey, Identity] public int    Id       { get; set; } // int
		[Column,     NotNull ] public string Name     { get; set; } // varchar(50)
		[Column,     NotNull ] public Guid   PublicId { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="ProductReservesChangeHistory")]
	public partial class ProductReservesChangeHistory
	{
		[PrimaryKey, Identity   ] public long     Id             { get; set; } // bigint
		[Column,     NotNull    ] public Guid     ProductId      { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      NewState       { get; set; } // int
		[Column,     NotNull    ] public int      Diff           { get; set; } // int
		[Column,        Nullable] public int?     PassiveReserve { get; set; } // int
		[Column,     NotNull    ] public DateTime ReportDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="ProductsQualityInstock")]
	public partial class ProductsQualityInstock
	{
		[PrimaryKey(1), NotNull] public Guid ProductId { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull] public int  QualityId { get; set; } // int
		[Column,        NotNull] public int  Quantity  { get; set; } // int
	}

	[Table(Schema="dbo", Name="ProductsSync")]
	public partial class ProductsSync
	{
		[PrimaryKey(1), NotNull    ] public Guid     ProductId   { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull    ] public Guid     SiteId      { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string   PublicId    { get; set; } // nvarchar(50)
		[Column,           Nullable] public string   PublicSku   { get; set; } // nvarchar(50)
		[Column,           Nullable] public string   Barcode     { get; set; } // nvarchar(50)
		[Column,        NotNull    ] public DateTime ChangedDate { get; set; } // datetime
		[Column,        NotNull    ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Roles")]
	public partial class Role
	{
		[PrimaryKey, Identity   ] public int    Id                  { get; set; } // int
		[Column,     NotNull    ] public string Name                { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public int    DepartmentId        { get; set; } // int
		[Column,        Nullable] public string DefaultAccessGroups { get; set; } // nvarchar(255)
		[Column,        Nullable] public int?   TypeId              { get; set; } // int
	}

	[Table(Schema="dbo", Name="RozlivUtDocuments")]
	public partial class RozlivUtDocument
	{
		[PrimaryKey, Identity] public int      Id            { get; set; } // int
		[Column,     NotNull ] public Guid     PublicId      { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string   Number        { get; set; } // varchar(15)
		[Column,     NotNull ] public DateTime CreatedDate   { get; set; } // datetime
		[Column,     NotNull ] public Guid     OrderId       { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     AuthorId      { get; set; } // uniqueidentifier
		[Column,     NotNull ] public bool     ConfirmedByUt { get; set; } // bit
	}

	[Table(Schema="dbo", Name="RozlivUtDocumentItems")]
	public partial class RozlivUtDocumentItem
	{
		[PrimaryKey, Identity   ] public int     Id            { get; set; } // int
		[Column,     NotNull    ] public int     DocId         { get; set; } // int
		[Column,     NotNull    ] public Guid    ProductId     { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int     Quantity      { get; set; } // int
		[Column,        Nullable] public double? PurchasePrice { get; set; } // float
	}

	[Table(Schema="dbo", Name="ShopBaseObjectTypes")]
	public partial class ShopBaseObjectType
	{
		[PrimaryKey, NotNull] public int    Id   { get; set; } // int
		[Column,     NotNull] public string Name { get; set; } // nvarchar(100)
	}

	[Table(Schema="dbo", Name="ShowcaseProductsStock")]
	public partial class ShowcaseProductsStock
	{
		[PrimaryKey(1),                                NotNull    ] public Guid SiteId              { get; set; } // uniqueidentifier
		[PrimaryKey(2),                                NotNull    ] public Guid ProductId           { get; set; } // uniqueidentifier
		[Column,                                       NotNull    ] public int  Stock               { get; set; } // int
		[Column,                                       NotNull    ] public int  ConditionStock      { get; set; } // int
		[Column,                                       NotNull    ] public int  ReserveStock        { get; set; } // int
		[Column,                                       NotNull    ] public int  PassiveReserveStock { get; set; } // int
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public int? FreeStock           { get; set; } // int
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public int? TotalReserveStock   { get; set; } // int
	}

	[Table(Schema="dbo", Name="SiteApiRequests")]
	public partial class SiteApiRequest
	{
		[PrimaryKey, Identity   ] public long     Id           { get; set; } // bigint
		[Column,     NotNull    ] public bool     IsSuccess    { get; set; } // bit
		[Column,     NotNull    ] public int      Direction    { get; set; } // int
		[Column,     NotNull    ] public int      ObjectTypeId { get; set; } // int
		[Column,     NotNull    ] public string   SiteName     { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public int      Method       { get; set; } // int
		[Column,     NotNull    ] public string   Url          { get; set; } // nvarchar(1000)
		[Column,     NotNull    ] public string   Body         { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public DateTime RequestDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      AnswerCode   { get; set; } // int
		[Column,     NotNull    ] public string   AnswerBody   { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public Guid     AuthorId     { get; set; } // uniqueidentifier
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="SiteObjectSyncSettings")]
	public partial class SiteObjectSyncSetting
	{
		[PrimaryKey(1), NotNull] public Guid     SiteId       { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull] public int      ObjectTypeId { get; set; } // int
		[PrimaryKey(3), NotNull] public int      SettingId    { get; set; } // int
		[Column,        NotNull] public string   SettingValue { get; set; } // nvarchar(255)
		[Column,        NotNull] public DateTime CreatedDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SiteProductsRules")]
	public partial class SiteProductsRule
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public Guid     SiteId      { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      RuleTypeId  { get; set; } // int
		[Column,     NotNull ] public bool     IsActive    { get; set; } // bit
		[Column,     NotNull ] public string   Caption     { get; set; } // varchar(255)
		[Column,     NotNull ] public int      OrderNum    { get; set; } // int
		[Column,     NotNull ] public string   Args        { get; set; } // varchar(max)
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
		[Column,     NotNull ] public DateTime ChangedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SiteProductsRuleObjectTypes")]
	public partial class SiteProductsRuleObjectType
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="SiteProductsRulesBrandLinks")]
	public partial class SiteProductsRulesBrandLink
	{
		[PrimaryKey(1), NotNull] public int  RuleId    { get; set; } // int
		[PrimaryKey(2), NotNull] public Guid BrandId   { get; set; } // uniqueidentifier
		[PrimaryKey(3), NotNull] public bool Inversion { get; set; } // bit
	}

	[Table(Schema="dbo", Name="SiteProductsRulesDistributorLinks")]
	public partial class SiteProductsRulesDistributorLink
	{
		[PrimaryKey(1), NotNull] public int  RuleId        { get; set; } // int
		[PrimaryKey(2), NotNull] public Guid DistributorId { get; set; } // uniqueidentifier
		[PrimaryKey(3), NotNull] public bool Inversion     { get; set; } // bit
	}

	[Table(Schema="dbo", Name="SiteProductsRulesProductLinks")]
	public partial class SiteProductsRulesProductLink
	{
		[PrimaryKey(1), NotNull] public int  RuleId    { get; set; } // int
		[PrimaryKey(2), NotNull] public Guid ProductId { get; set; } // uniqueidentifier
		[PrimaryKey(3), NotNull] public bool Inversion { get; set; } // bit
	}

	[Table(Schema="dbo", Name="SiteProductsRuleTypes")]
	public partial class SiteProductsRuleType
	{
		[PrimaryKey, Identity   ] public int    Id           { get; set; } // int
		[Column,     NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string Code         { get; set; } // varchar(50)
		[Column,     NotNull    ] public int    ObjectTypeId { get; set; } // int
		[Column,        Nullable] public string Description  { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="SitesSync")]
	public partial class SitesSync
	{
		[PrimaryKey, NotNull    ] public Guid     SiteId       { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string   Host         { get; set; } // varchar(128)
		[Column,        Nullable] public string   Token        { get; set; } // varchar(255)
		[Column,        Nullable] public string   UserLogin    { get; set; } // varchar(50)
		[Column,        Nullable] public string   UserPassword { get; set; } // varchar(50)
		[Column,        Nullable] public string   MerchantId   { get; set; } // varchar(50)
		[Column,     NotNull    ] public DateTime ChangedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SitesSyncBlockInfo")]
	public partial class SitesSyncBlockInfo
	{
		[PrimaryKey, NotNull    ] public Guid     SiteId                 { get; set; } // uniqueidentifier
		[Column,        Nullable] public decimal? HighPriceMaxPercent    { get; set; } // decimal(6, 2)
		[Column,        Nullable] public decimal? HighPricesBlockPercent { get; set; } // decimal(6, 2)
	}

	[Table(Schema="dbo", Name="SmsSiteStatusTemplates")]
	public partial class SmsSiteStatusTemplate
	{
		[Column, NotNull    ] public Guid SiteId     { get; set; } // uniqueidentifier
		[Column, NotNull    ] public byte StatusId   { get; set; } // tinyint
		[Column,    Nullable] public int? ServiceId  { get; set; } // int
		[Column,    Nullable] public int? DeliveryId { get; set; } // int
		[Column,    Nullable] public int? TemplateId { get; set; } // int
	}

	[Table(Schema="dbo", Name="StoringScanHistory")]
	public partial class StoringScanHistory
	{
		[PrimaryKey, Identity] public long     Id              { get; set; } // bigint
		[Column,     NotNull ] public Guid     OrderId         { get; set; } // uniqueidentifier
		[Column,     NotNull ] public Guid     ProductId       { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string   DataMatrix      { get; set; } // varchar(128)
		[Column,     NotNull ] public string   ContainerNumber { get; set; } // nvarchar(16)
		[Column,     NotNull ] public string   CellAddress     { get; set; } // nvarchar(16)
		[Column,     NotNull ] public Guid     AuthorId        { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SUZOrders")]
	public partial class SUZOrder
	{
		[PrimaryKey, Identity   ] public int       Id           { get; set; } // int
		[Column,        Nullable] public string    PublicId     { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public bool      IsActive     { get; set; } // bit
		[Column,     NotNull    ] public int       StatusId     { get; set; } // int
		[Column,     NotNull    ] public int       SourceId     { get; set; } // int
		[Column,     NotNull    ] public bool      MustBeClosed { get; set; } // bit
		[Column,        Nullable] public string    Error        { get; set; } // nvarchar(4000)
		[Column,        Nullable] public DateTime? ClosedDate   { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  CreatedDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SUZOrderItems")]
	public partial class SUZOrderItem
	{
		[PrimaryKey, Identity] public int      Id              { get; set; } // int
		[Column,     NotNull ] public int      OrderId         { get; set; } // int
		[Column,     NotNull ] public string   GTIN            { get; set; } // nvarchar(14)
		[Column,     NotNull ] public int      Quantity        { get; set; } // int
		[Column,     NotNull ] public int      PrintedQuantity { get; set; } // int
		[Column,     NotNull ] public bool     IsActive        { get; set; } // bit
		[Column,     NotNull ] public Guid     ProductId       { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime CreatedDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SUZOrderItemDataMatrixes")]
	public partial class SUZOrderItemDataMatrix
	{
		[PrimaryKey, Identity   ] public int       Id          { get; set; } // int
		[Column,     NotNull    ] public int       ItemId      { get; set; } // int
		[Column,     NotNull    ] public string    DataMatrix  { get; set; } // nvarchar(128)
		[Column,     NotNull    ] public bool      IsPrinted   { get; set; } // bit
		[Column,        Nullable] public DateTime? PrintedDate { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SUZPurchaseTasks")]
	public partial class SUZPurchaseTask
	{
		[PrimaryKey, Identity] public int      Id           { get; set; } // int
		[Column,     NotNull ] public int      TaskId       { get; set; } // int
		[Column,     NotNull ] public int      OrderNum     { get; set; } // int
		[Column,     NotNull ] public DateTime ExpectedDate { get; set; } // date
		[Column,     NotNull ] public DateTime CreatedDate  { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SUZPurchaseTaskOrders")]
	public partial class SUZPurchaseTaskOrder
	{
		[PrimaryKey(1), NotNull] public int TaskId  { get; set; } // int
		[PrimaryKey(2), NotNull] public int OrderId { get; set; } // int
	}

	[Table(Schema="dbo", Name="SUZPurchaseTaskOrdersArchive")]
	public partial class SUZPurchaseTaskOrdersArchive
	{
		[PrimaryKey(1), NotNull] public int      TaskId       { get; set; } // int
		[PrimaryKey(2), NotNull] public int      OrderId      { get; set; } // int
		[PrimaryKey(3), NotNull] public DateTime ArchivedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SUZPurchaseTasksArchive")]
	public partial class SUZPurchaseTasksArchive
	{
		[PrimaryKey, Identity] public int      Id           { get; set; } // int
		[Column,     NotNull ] public int      TaskId       { get; set; } // int
		[Column,     NotNull ] public int      OrderNum     { get; set; } // int
		[Column,     NotNull ] public DateTime ExpectedDate { get; set; } // date
		[Column,     NotNull ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull ] public DateTime ArchivedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncDeletedObjectSites")]
	public partial class SyncDeletedObjectSite
	{
		[Column, NotNull] public string ObjectId { get; set; } // nvarchar(50)
		[Column, NotNull] public int    ClassId  { get; set; } // int
		[Column, NotNull] public Guid   SiteId   { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="SyncObjectsQueue")]
	public partial class SyncObjectsQueue
	{
		[PrimaryKey, Identity   ] public long     Id          { get; set; } // bigint
		[Column,     NotNull    ] public string   ObjectId    { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public int      ClassId     { get; set; } // int
		[Column,     NotNull    ] public int      Method      { get; set; } // int
		[Column,     NotNull    ] public string   Data        { get; set; } // nvarchar(max)
		[Column,        Nullable] public int?     Error       { get; set; } // int
		[Column,        Nullable] public int?     ErrorStatus { get; set; } // int
		[Column,     NotNull    ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncObjectsQueueArchive")]
	public partial class SyncObjectsQueueArchive
	{
		[PrimaryKey, Identity   ] public long     Id          { get; set; } // bigint
		[Column,     NotNull    ] public string   ObjectId    { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public int      ClassId     { get; set; } // int
		[Column,     NotNull    ] public int      Method      { get; set; } // int
		[Column,     NotNull    ] public string   Data        { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public DateTime CreatedDate { get; set; } // datetime
		[Column,     NotNull    ] public string   MediaType   { get; set; } // varchar(100)
		[Column,        Nullable] public string   Error       { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public int      ErrorStatus { get; set; } // int
		[Column,     NotNull    ] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncProductsQueue")]
	public partial class SyncProductsQueue
	{
		[PrimaryKey, NotNull    ] public Guid      Id          { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int       Sku         { get; set; } // int
		[Column,        Nullable] public DateTime? CreatedDate { get; set; } // datetime
		[Column,        Nullable] public int?      TryCount    { get; set; } // int
		[Column,        Nullable] public string    LastError   { get; set; } // varchar(1024)
	}

	[Table(Schema="dbo", Name="SyncProductsQueueArchive")]
	public partial class SyncProductsQueueArchive
	{
		[PrimaryKey(1), NotNull] public Guid     Id       { get; set; } // uniqueidentifier
		[Column,        NotNull] public int      Sku      { get; set; } // int
		[PrimaryKey(2), NotNull] public DateTime SyncDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncProtocol")]
	public partial class SyncProtocol
	{
		[PrimaryKey, Identity   ] public long     Id             { get; set; } // bigint
		[Column,     NotNull    ] public Guid     SiteId         { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string   ApiPoint       { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string   ObjectId       { get; set; } // nvarchar(36)
		[Column,     NotNull    ] public int      ObjectTypeId   { get; set; } // int
		[Column,     NotNull    ] public int      MethodId       { get; set; } // int
		[Column,        Nullable] public string   Content        { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public string   ResponseAnswer { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public int      ResponseCode   { get; set; } // int
		[Column,     NotNull    ] public byte     TryCount       { get; set; } // tinyint
		[Column,     NotNull    ] public Guid     AuthorId       { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime CreatedDate    { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncQueueIn")]
	public partial class SyncQueueIn
	{
		[PrimaryKey, Identity   ] public long      Id          { get; set; } // bigint
		[Column,     NotNull    ] public string    PublicId    { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public int       ClassId     { get; set; } // int
		[Column,     NotNull    ] public int       TypeId      { get; set; } // int
		[Column,     NotNull    ] public string    Sender      { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string    Body        { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public DateTime  CreatedDate { get; set; } // datetime
		[Column,        Nullable] public string    Error       { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public int       ErrorStatus { get; set; } // int
		[Column,     NotNull    ] public int       TryCount    { get; set; } // int
		[Column,        Nullable] public DateTime? NextTryDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncQueueInArchive")]
	public partial class SyncQueueInArchive
	{
		[PrimaryKey, NotNull    ] public long      Id          { get; set; } // bigint
		[Column,     NotNull    ] public string    PublicId    { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public int       ClassId     { get; set; } // int
		[Column,     NotNull    ] public int       TypeId      { get; set; } // int
		[Column,     NotNull    ] public string    Sender      { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string    Body        { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public DateTime  CreatedDate { get; set; } // datetime
		[Column,        Nullable] public string    Error       { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public int       ErrorStatus { get; set; } // int
		[Column,     NotNull    ] public int       TryCount    { get; set; } // int
		[Column,        Nullable] public DateTime? NextTryDate { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncQueueOut")]
	public partial class SyncQueueOut
	{
		[PrimaryKey, Identity   ] public long      Id          { get; set; } // bigint
		[Column,     NotNull    ] public string    PublicId    { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public int       ClassId     { get; set; } // int
		[Column,     NotNull    ] public string    Receivers   { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string    Body        { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public DateTime  CreatedDate { get; set; } // datetime
		[Column,        Nullable] public string    Error       { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public int       ErrorStatus { get; set; } // int
		[Column,     NotNull    ] public int       TryCount    { get; set; } // int
		[Column,        Nullable] public DateTime? NextTryDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="SyncQueueOutArchive")]
	public partial class SyncQueueOutArchive
	{
		[PrimaryKey, NotNull    ] public long     Id          { get; set; } // bigint
		[Column,     NotNull    ] public string   PublicId    { get; set; } // nvarchar(50)
		[Column,     NotNull    ] public int      ClassId     { get; set; } // int
		[Column,     NotNull    ] public string   Receivers   { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string   Body        { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public DateTime CreatedDate { get; set; } // datetime
		[Column,        Nullable] public string   Error       { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public int      ErrorStatus { get; set; } // int
		[Column,     NotNull    ] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="TaskScheduler")]
	public partial class TaskScheduler
	{
		[PrimaryKey, Identity   ] public int      ID         { get; set; } // int
		[Column,     NotNull    ] public DateTime RunTime    { get; set; } // datetime
		[Column,     NotNull    ] public string   Path       { get; set; } // nvarchar(500)
		[Column,     NotNull    ] public string   Commentary { get; set; } // nvarchar(500)
		[Column,     NotNull    ] public string   Action     { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public int      Done       { get; set; } // int
		[Column,        Nullable] public string   Params     { get; set; } // nvarchar(500)
		[Column,     NotNull    ] public int      TaskType   { get; set; } // int
		[Column,     NotNull    ] public int      Counter    { get; set; } // int
	}

	[Table(Schema="dbo", Name="Templates")]
	public partial class Template
	{
		[PrimaryKey, Identity   ] public int      Id            { get; set; } // int
		[Column,     NotNull    ] public int      TypeId        { get; set; } // int
		[Column,     NotNull    ] public string   Name          { get; set; } // nvarchar(255)
		[Column,        Nullable] public string   Theme         { get; set; } // nvarchar(255)
		[Column,     NotNull    ] public string   Body          { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public DateTime OperationDate { get; set; } // datetime
		[Column,     NotNull    ] public Guid     AuthorId      { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="TemplateTypes")]
	public partial class TemplateType
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="TracingPackages")]
	public partial class TracingPackage
	{
		[PrimaryKey, Identity] public int      Id            { get; set; } // int
		[Column,     NotNull ] public string   SourceService { get; set; } // varchar(128)
		[Column,     NotNull ] public string   Operation     { get; set; } // varchar(128)
		[Column,     NotNull ] public int      EntityTypeId  { get; set; } // int
		[Column,     NotNull ] public string   EntityId      { get; set; } // varchar(36)
		[Column,     NotNull ] public DateTime CreatedDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="TracingPackageItems")]
	public partial class TracingPackageItem
	{
		[PrimaryKey, Identity   ] public int      Id            { get; set; } // int
		[Column,     NotNull    ] public int      PackageId     { get; set; } // int
		[Column,     NotNull    ] public int      RowNo         { get; set; } // int
		[Column,     NotNull    ] public string   RequestMethod { get; set; } // varchar(25)
		[Column,     NotNull    ] public string   RequestQuery  { get; set; } // varchar(500)
		[Column,        Nullable] public string   RequestBody   { get; set; } // varchar(4000)
		[Column,     NotNull    ] public DateTime RequestStart  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime RequestEnd    { get; set; } // datetime
		[Column,     NotNull    ] public int      ResponseCode  { get; set; } // int
		[Column,        Nullable] public string   ResponseBody  { get; set; } // varchar(4000)
		[Column,        Nullable] public string   ResponseError { get; set; } // varchar(4000)
	}

	[Table(Schema="dbo", Name="USERS")]
	public partial class USER
	{
		[PrimaryKey, NotNull    ] public Guid   ID           { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string NAME         { get; set; } // varchar(255)
		[Column,        Nullable] public byte?  USERSGROUP   { get; set; } // tinyint
		[Column,     NotNull    ] public string Password     { get; set; } // nvarchar(16)
		[Column,        Nullable] public string FirstName    { get; set; } // nvarchar(25)
		[Column,        Nullable] public string Patronymic   { get; set; } // nvarchar(25)
		[Column,        Nullable] public string LastName     { get; set; } // nvarchar(25)
		[Column,        Nullable] public string Email        { get; set; } // nvarchar(255)
		[Column,        Nullable] public int?   DepartmentId { get; set; } // int
		[Column,        Nullable] public int?   RoleId       { get; set; } // int
		[Column,        Nullable] public string Status       { get; set; } // nvarchar(255)

		#region Associations

		/// <summary>
		/// FK__KitDefini__Creat__62108194_BackReference (dbo.KitDefinitions)
		/// </summary>
		[Association(ThisKey="ID", OtherKey="CreatorId", CanBeNull=true)]
		public IEnumerable<KitDefinition> KitDefiniCreats { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="UserActions")]
	public partial class UserAction
	{
		[PrimaryKey, NotNull    ] public int      Id          { get; set; } // int
		[Column,     NotNull    ] public int      ObjectType  { get; set; } // int
		[Column,     NotNull    ] public string   ObjectId    { get; set; } // varchar(36)
		[Column,        Nullable] public string   ActionInfo  { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public int      ActionType  { get; set; } // int
		[Column,     NotNull    ] public Guid     UserId      { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UserPasswords")]
	public partial class UserPassword
	{
		[PrimaryKey, NotNull] public Guid   UserId         { get; set; } // uniqueidentifier
		[Column,     NotNull] public string HashedPassword { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="UsersBounds")]
	public partial class UsersBound
	{
		[Column, NotNull    ] public Guid  UserId   { get; set; } // uniqueidentifier
		[Column,    Nullable] public Guid? ParentId { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="UserSession")]
	public partial class UserSession
	{
		[PrimaryKey, Identity   ] public int       Id          { get; set; } // int
		[Column,     NotNull    ] public Guid      UserId      { get; set; } // uniqueidentifier
		[Column,        Nullable] public int?      SessionId   { get; set; } // int
		[Column,        Nullable] public DateTime? DateSession { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UsersPlanReportCallCount")]
	public partial class UsersPlanReportCallCount
	{
		[PrimaryKey, Identity] public int      Id        { get; set; } // int
		[Column,     NotNull ] public Guid     UserID    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      CallCount { get; set; } // int
		[Column,     NotNull ] public DateTime Date      { get; set; } // date
	}

	[Table(Schema="dbo", Name="UsersPlanReportParams")]
	public partial class UsersPlanReportParam
	{
		[PrimaryKey, Identity   ] public int      Id                 { get; set; } // int
		[Column,        Nullable] public int?     CallCount          { get; set; } // int
		[Column,        Nullable] public int?     CallServicePercent { get; set; } // int
		[Column,        Nullable] public int?     CallPercent        { get; set; } // int
		[Column,        Nullable] public int?     Confirmed          { get; set; } // int
		[Column,        Nullable] public int?     CancellPercent     { get; set; } // int
		[Column,        Nullable] public int?     TaskPercent        { get; set; } // int
		[Column,        Nullable] public int?     AwardPrice         { get; set; } // int
		[Column,        Nullable] public int?     BonusPercent       { get; set; } // int
		[Column,        Nullable] public int?     CallAnswerTime     { get; set; } // int
		[Column,     NotNull    ] public DateTime Date               { get; set; } // date
	}

	[Table(Schema="dbo", Name="UserStatuses")]
	public partial class UserStatus
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="UtCurrencyExchangeRateHistory")]
	public partial class UtCurrencyExchangeRateHistory
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public DateTime UtDate      { get; set; } // date
		[Column,     NotNull ] public int      CurrencyId  { get; set; } // int
		[Column,     NotNull ] public decimal  Rate        { get; set; } // decimal(10, 4)
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UtDoubtfulPrices")]
	public partial class UtDoubtfulPrice
	{
		[PrimaryKey, Identity   ] public int  Id        { get; set; } // int
		[Column,     NotNull    ] public int  DocId     { get; set; } // int
		[Column,     NotNull    ] public Guid ProductId { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int  ReasonId  { get; set; } // int
		[Column,        Nullable] public int? LastDocId { get; set; } // int
	}

	[Table(Schema="dbo", Name="UtDoubtfulPriceDocuments")]
	public partial class UtDoubtfulPriceDocument
	{
		[PrimaryKey, NotNull    ] public int      DocId       { get; set; } // int
		[Column,     NotNull    ] public DateTime CreatedDate { get; set; } // datetime
		[Column,        Nullable] public int?     ReasonId    { get; set; } // int
	}

	[Table(Schema="dbo", Name="UTExportOrders")]
	public partial class UTExportOrder
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public Guid     OrderId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime ReportDate { get; set; } // datetime
		[Column,     NotNull ] public int      Operation  { get; set; } // int
		[Column,     NotNull ] public bool     IsPartial  { get; set; } // bit
		[Column,     NotNull ] public int      OrderState { get; set; } // int
	}

	[Table(Schema="dbo", Name="UTExportOrdersSessions")]
	public partial class UTExportOrdersSession
	{
		[PrimaryKey, Identity] public long     SessionId   { get; set; } // bigint
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UTExportOrdersSessionItems")]
	public partial class UTExportOrdersSessionItem
	{
		[PrimaryKey(1), NotNull] public long SessionId { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long Id        { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="UTExportOrdersSessionItemsArchive")]
	public partial class UTExportOrdersSessionItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     SessionId  { get; set; } // bigint
		[PrimaryKey(2), NotNull] public long     Id         { get; set; } // bigint
		[Column,        NotNull] public Guid     OrderId    { get; set; } // uniqueidentifier
		[Column,        NotNull] public DateTime ReportDate { get; set; } // datetime
		[Column,        NotNull] public int      Operation  { get; set; } // int
		[Column,        NotNull] public bool     IsPartial  { get; set; } // bit
		[Column,        NotNull] public int      OrderState { get; set; } // int
	}

	[Table(Schema="dbo", Name="UTExportOrdersSessionsArchive")]
	public partial class UTExportOrdersSessionsArchive
	{
		[PrimaryKey, NotNull    ] public long     SessionId    { get; set; } // bigint
		[Column,     NotNull    ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
		[Column,     NotNull    ] public int      ArchiveSatus { get; set; } // int
		[Column,        Nullable] public string   Comment      { get; set; } // nvarchar(500)
	}

	[Table(Schema="dbo", Name="_UTOrderHistory")]
	public partial class UTOrderHistory
	{
		[Column, NotNull] public Guid OrderId               { get; set; } // uniqueidentifier
		[Column, NotNull] public bool IsCalc                { get; set; } // bit
		[Column, NotNull] public bool IsWMSDocumentUpdate   { get; set; } // bit
		[Column, NotNull] public bool IsPutToUTExportOrders { get; set; } // bit
	}

	[Table(Schema="dbo", Name="UtPrices")]
	public partial class UtPrice
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public int      DocId       { get; set; } // int
		[Column,     NotNull ] public Guid     ProductId   { get; set; } // uniqueidentifier
		[Column,     NotNull ] public double   Price       { get; set; } // float
		[Column,     NotNull ] public int      PriceTypeId { get; set; } // int
		[Column,     NotNull ] public int      CurrencyId  { get; set; } // int
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UtPriceDocuments")]
	public partial class UtPriceDocument
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public string   PublicId    { get; set; } // nvarchar(64)
		[Column,     NotNull ] public string   Number      { get; set; } // nvarchar(64)
		[Column,     NotNull ] public DateTime Date        { get; set; } // datetime
		[Column,     NotNull ] public int      Type        { get; set; } // int
		[Column,     NotNull ] public bool     IsCancelled { get; set; } // bit
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
		[Column,     NotNull ] public DateTime ChangedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UtPriceDocumentsArchive")]
	public partial class UtPriceDocumentsArchive
	{
		[PrimaryKey, Identity] public int      Id           { get; set; } // int
		[Column,     NotNull ] public int      DocId        { get; set; } // int
		[Column,     NotNull ] public string   PublicId     { get; set; } // nvarchar(64)
		[Column,     NotNull ] public string   Number       { get; set; } // nvarchar(64)
		[Column,     NotNull ] public DateTime Date         { get; set; } // datetime
		[Column,     NotNull ] public int      Type         { get; set; } // int
		[Column,     NotNull ] public bool     IsCancelled  { get; set; } // bit
		[Column,     NotNull ] public DateTime CreatedDate  { get; set; } // datetime
		[Column,     NotNull ] public DateTime ChangedDate  { get; set; } // datetime
		[Column,     NotNull ] public DateTime ArchivedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UtPricesArchive")]
	public partial class UtPricesArchive
	{
		[PrimaryKey, Identity] public int      Id           { get; set; } // int
		[Column,     NotNull ] public int      DocId        { get; set; } // int
		[Column,     NotNull ] public Guid     ProductId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public double   Price        { get; set; } // float
		[Column,     NotNull ] public int      PriceTypeId  { get; set; } // int
		[Column,     NotNull ] public int      CurrencyId   { get; set; } // int
		[Column,     NotNull ] public DateTime ArchivedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="UtPriceTypes")]
	public partial class UtPriceType
	{
		[Column, NotNull] public int    Id      { get; set; } // int
		[Column, NotNull] public string OuterId { get; set; } // nvarchar(64)
		[Column, NotNull] public string Name    { get; set; } // nvarchar(64)
	}

	[Table(Schema="dbo", Name="VoximplantOrders")]
	public partial class VoximplantOrder
	{
		[PrimaryKey, Identity   ] public int      Id          { get; set; } // int
		[Column,     NotNull    ] public Guid     OrderId     { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      StatusId    { get; set; } // int
		[Column,     NotNull    ] public int      ScenarioId  { get; set; } // int
		[Column,        Nullable] public string   Error       { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public DateTime ChangedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="VoximplantOrdersArchive")]
	public partial class VoximplantOrdersArchive
	{
		[PrimaryKey, Identity   ] public int      Id           { get; set; } // int
		[Column,     NotNull    ] public Guid     OrderId      { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      StatusId     { get; set; } // int
		[Column,        Nullable] public string   Error        { get; set; } // nvarchar(4000)
		[Column,     NotNull    ] public DateTime ChangedDate  { get; set; } // datetime
		[Column,        Nullable] public int?     ScenarioId   { get; set; } // int
		[Column,     NotNull    ] public DateTime ArchivedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Warehouses")]
	public partial class Warehouse
	{
		[PrimaryKey, Identity] public int    Id       { get; set; } // int
		[Column,     NotNull ] public Guid   PublicId { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string Name     { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="WarehouseCells")]
	public partial class WarehouseCell
	{
		[PrimaryKey, Identity] public int    Id     { get; set; } // int
		[Column,     NotNull ] public string Number { get; set; } // varchar(64)
		[Column,     NotNull ] public int    ZoneId { get; set; } // int
	}

	[Table(Schema="dbo", Name="WarehouseProductQuality")]
	public partial class WarehouseProductQuality
	{
		[PrimaryKey, Identity] public int    Id       { get; set; } // int
		[Column,     NotNull ] public string Name     { get; set; } // varchar(128)
		[Column,     NotNull ] public int    StateId  { get; set; } // int
		[Column,     NotNull ] public Guid   PublicId { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="WarehouseProductReserves")]
	public partial class WarehouseProductReserve
	{
		[PrimaryKey(1), NotNull    ] public int  WarehouseId         { get; set; } // int
		[PrimaryKey(2), NotNull    ] public Guid ProductId           { get; set; } // uniqueidentifier
		[Column,           Nullable] public int? ReserveStock        { get; set; } // int
		[Column,           Nullable] public int? PassiveReserveStock { get; set; } // int
	}

	[Table(Schema="dbo", Name="WarehouseProductsStockHistory")]
	public partial class WarehouseProductsStockHistory
	{
		[PrimaryKey, Identity   ] public int      Id           { get; set; } // int
		[Column,     NotNull    ] public int      WarehouseId  { get; set; } // int
		[Column,     NotNull    ] public Guid     ProductId    { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      OldStock     { get; set; } // int
		[Column,     NotNull    ] public int      NewStock     { get; set; } // int
		[Column,        Nullable] public int?     DocumentType { get; set; } // int
		[Column,        Nullable] public long?    DocId        { get; set; } // bigint
		[Column,     NotNull    ] public DateTime ReportDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WarehouseShowcaseLinks")]
	public partial class WarehouseShowcaseLink
	{
		[PrimaryKey(2), NotNull] public Guid SiteId      { get; set; } // uniqueidentifier
		[PrimaryKey(1), NotNull] public int  WarehouseId { get; set; } // int
		[Column,        NotNull] public byte StatusId    { get; set; } // tinyint
		[Column,        NotNull] public bool IsActive    { get; set; } // bit
	}

	[Table(Schema="dbo", Name="WarehousesStock")]
	public partial class WarehousesStock
	{
		[PrimaryKey(1), NotNull] public int  WarehouseId    { get; set; } // int
		[PrimaryKey(2), NotNull] public Guid ProductId      { get; set; } // uniqueidentifier
		[Column,        NotNull] public int  Stock          { get; set; } // int
		[Column,        NotNull] public int  ConditionStock { get; set; } // int
	}

	[Table(Schema="dbo", Name="WarehousesStockQuality")]
	public partial class WarehousesStockQuality
	{
		[PrimaryKey(1), NotNull] public int  WarehouseId { get; set; } // int
		[PrimaryKey(2), NotNull] public Guid ProductId   { get; set; } // uniqueidentifier
		[PrimaryKey(3), NotNull] public int  QualityId   { get; set; } // int
		[Column,        NotNull] public int  Stock       { get; set; } // int
	}

	[Table(Schema="dbo", Name="WarehouseZones")]
	public partial class WarehouseZone
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Type { get; set; } // varchar(64)
		[Column,     NotNull ] public string Name { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="WhatsAppMessageStatuses")]
	public partial class WhatsAppMessageStatus
	{
		[PrimaryKey, Identity] public int    Id         { get; set; } // int
		[Column,     NotNull ] public string StatusName { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="WhatsAppOrderMessagesHistory")]
	public partial class WhatsAppOrderMessagesHistory
	{
		[PrimaryKey, Identity] public int      Id          { get; set; } // int
		[Column,     NotNull ] public Guid     OrderId     { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      MessageId   { get; set; } // int
		[Column,     NotNull ] public Guid     AuthorId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public DateTime CreatedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WhatsAppTemplates")]
	public partial class WhatsAppTemplate
	{
		[PrimaryKey, Identity] public int    Id           { get; set; } // int
		[Column,     NotNull ] public string TemplateName { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="WhatsAppTemplateMessages")]
	public partial class WhatsAppTemplateMessage
	{
		[PrimaryKey, Identity   ] public int      Id               { get; set; } // int
		[Column,     NotNull    ] public string   ExternalId       { get; set; } // varchar(36)
		[Column,     NotNull    ] public string   PhoneNumber      { get; set; } // varchar(50)
		[Column,        Nullable] public string   Message          { get; set; } // varchar(4000)
		[Column,     NotNull    ] public int      StatusId         { get; set; } // int
		[Column,        Nullable] public int?     ErrorCode        { get; set; } // int
		[Column,        Nullable] public string   ErrorDescription { get; set; } // varchar(max)
		[Column,     NotNull    ] public int      TemplateId       { get; set; } // int
		[Column,     NotNull    ] public DateTime CreatedDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsExpectedReceiptDocuments")]
	public partial class WmsExpectedReceiptDocument
	{
		[PrimaryKey, Identity   ] public long     Id               { get; set; } // bigint
		[Column,     NotNull    ] public int      WarehouseId      { get; set; } // int
		[Column,     NotNull    ] public Guid     PublicId         { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string   Number           { get; set; } // varchar(36)
		[Column,     NotNull    ] public DateTime CreateDate       { get; set; } // datetime
		[Column,     NotNull    ] public DateTime WmsCreateDate    { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ExpectedDate     { get; set; } // date
		[Column,     NotNull    ] public int      DocStatus        { get; set; } // int
		[Column,     NotNull    ] public int      DocSource        { get; set; } // int
		[Column,     NotNull    ] public int      Priority         { get; set; } // int
		[Column,     NotNull    ] public bool     IsDeleted        { get; set; } // bit
		[Column,     NotNull    ] public Guid     AuthorId         { get; set; } // uniqueidentifier
		[Column,        Nullable] public Guid?    SourceDocumentId { get; set; } // uniqueidentifier
		[Column,        Nullable] public string   Comments         { get; set; } // nvarchar(1024)
		[Column,     NotNull    ] public int      Operation        { get; set; } // int
		[Column,     NotNull    ] public DateTime ReportDate       { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsExpectedReceiptDocumentsArchive")]
	public partial class WmsExpectedReceiptDocumentsArchive
	{
		[PrimaryKey(1), NotNull    ] public long     Id               { get; set; } // bigint
		[Column,        NotNull    ] public int      WarehouseId      { get; set; } // int
		[Column,        NotNull    ] public Guid     PublicId         { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string   Number           { get; set; } // varchar(36)
		[Column,        NotNull    ] public DateTime CreateDate       { get; set; } // datetime
		[Column,        NotNull    ] public DateTime WmsCreateDate    { get; set; } // datetime
		[Column,        NotNull    ] public DateTime ExpectedDate     { get; set; } // date
		[Column,        NotNull    ] public int      DocStatus        { get; set; } // int
		[Column,        NotNull    ] public int      DocSource        { get; set; } // int
		[Column,        NotNull    ] public bool     IsDeleted        { get; set; } // bit
		[Column,        NotNull    ] public int      Priority         { get; set; } // int
		[Column,        NotNull    ] public Guid     AuthorId         { get; set; } // uniqueidentifier
		[Column,           Nullable] public Guid?    SourceDocumentId { get; set; } // uniqueidentifier
		[Column,           Nullable] public string   Comments         { get; set; } // nvarchar(1024)
		[Column,        NotNull    ] public int      Operation        { get; set; } // int
		[Column,        NotNull    ] public DateTime ReportDate       { get; set; } // datetime
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsExpectedReceiptDocumentsItems")]
	public partial class WmsExpectedReceiptDocumentsItem
	{
		[PrimaryKey, Identity   ] public long     Id                 { get; set; } // bigint
		[Column,     NotNull    ] public long     DocId              { get; set; } // bigint
		[Column,        Nullable] public Guid?    TaskId             { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public Guid     ProductId          { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      Sku                { get; set; } // int
		[Column,     NotNull    ] public int      Quantity           { get; set; } // int
		[Column,     NotNull    ] public int      QualityId          { get; set; } // int
		[Column,     NotNull    ] public double   Price              { get; set; } // float
		[Column,     NotNull    ] public bool     ForOrder           { get; set; } // bit
		[Column,     NotNull    ] public bool     DataMatrixExpected { get; set; } // bit
		[Column,     NotNull    ] public DateTime CreateDate         { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsExpectedReceiptDocumentsItemsArchive")]
	public partial class WmsExpectedReceiptDocumentsItemsArchive
	{
		[PrimaryKey(1), NotNull    ] public long     Id                 { get; set; } // bigint
		[Column,        NotNull    ] public long     DocId              { get; set; } // bigint
		[Column,           Nullable] public Guid?    TaskId             { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public Guid     ProductId          { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public int      Sku                { get; set; } // int
		[Column,        NotNull    ] public int      Quantity           { get; set; } // int
		[Column,        NotNull    ] public int      QualityId          { get; set; } // int
		[Column,        NotNull    ] public double   Price              { get; set; } // float
		[Column,        NotNull    ] public bool     ForOrder           { get; set; } // bit
		[Column,        NotNull    ] public bool     DataMatrixExpected { get; set; } // bit
		[Column,        NotNull    ] public DateTime CreateDate         { get; set; } // datetime
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate        { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsReceiptDocuments")]
	public partial class WmsReceiptDocument
	{
		[PrimaryKey, Identity   ] public long     Id              { get; set; } // bigint
		[Column,     NotNull    ] public int      WarehouseId     { get; set; } // int
		[Column,     NotNull    ] public Guid     PublicId        { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string   Number          { get; set; } // varchar(36)
		[Column,     NotNull    ] public DateTime CreateDate      { get; set; } // datetime
		[Column,     NotNull    ] public DateTime WmsCreateDate   { get; set; } // datetime
		[Column,     NotNull    ] public int      DocSource       { get; set; } // int
		[Column,     NotNull    ] public bool     IsDeleted       { get; set; } // bit
		[Column,        Nullable] public Guid?    ReturnedOrderId { get; set; } // uniqueidentifier
		[Column,        Nullable] public string   Comments        { get; set; } // nvarchar(1024)
		[Column,     NotNull    ] public int      Operation       { get; set; } // int
		[Column,     NotNull    ] public Guid     AuthorId        { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="WmsReceiptDocumentsArchive")]
	public partial class WmsReceiptDocumentsArchive
	{
		[PrimaryKey(1), NotNull    ] public long     Id              { get; set; } // bigint
		[Column,        NotNull    ] public int      WarehouseId     { get; set; } // int
		[Column,        NotNull    ] public Guid     PublicId        { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string   Number          { get; set; } // varchar(36)
		[Column,        NotNull    ] public DateTime CreateDate      { get; set; } // datetime
		[Column,        NotNull    ] public DateTime WmsCreateDate   { get; set; } // datetime
		[Column,        NotNull    ] public int      DocSource       { get; set; } // int
		[Column,        NotNull    ] public bool     IsDeleted       { get; set; } // bit
		[Column,           Nullable] public Guid?    ReturnedOrderId { get; set; } // uniqueidentifier
		[Column,           Nullable] public string   Comments        { get; set; } // nvarchar(1024)
		[Column,        NotNull    ] public int      Operation       { get; set; } // int
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate     { get; set; } // datetime
		[Column,        NotNull    ] public Guid     AuthorId        { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="WmsReceiptDocumentsItems")]
	public partial class WmsReceiptDocumentsItem
	{
		[PrimaryKey, Identity   ] public long     Id         { get; set; } // bigint
		[Column,     NotNull    ] public long     DocId      { get; set; } // bigint
		[Column,        Nullable] public Guid?    TaskId     { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public Guid     ProductId  { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      Sku        { get; set; } // int
		[Column,     NotNull    ] public int      Quantity   { get; set; } // int
		[Column,     NotNull    ] public int      QualityId  { get; set; } // int
		[Column,     NotNull    ] public double   Price      { get; set; } // float
		[Column,     NotNull    ] public DateTime CreateDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsReceiptDocumentsItemDataMatrixes")]
	public partial class WmsReceiptDocumentsItemDataMatrix
	{
		[PrimaryKey, Identity   ] public int    Id         { get; set; } // int
		[Column,     NotNull    ] public long   DocId      { get; set; } // bigint
		[Column,        Nullable] public Guid?  ProductId  { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string DataMatrix { get; set; } // nvarchar(128)
	}

	[Table(Schema="dbo", Name="WmsReceiptDocumentsItemDataMatrixesArchive")]
	public partial class WmsReceiptDocumentsItemDataMatrixesArchive
	{
		[PrimaryKey(1), NotNull    ] public int      Id          { get; set; } // int
		[Column,        NotNull    ] public long     DocId       { get; set; } // bigint
		[Column,           Nullable] public Guid?    ProductId   { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string   DataMatrix  { get; set; } // nvarchar(128)
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsReceiptDocumentsItemsArchive")]
	public partial class WmsReceiptDocumentsItemsArchive
	{
		[PrimaryKey(1), NotNull    ] public long     Id          { get; set; } // bigint
		[Column,        NotNull    ] public long     DocId       { get; set; } // bigint
		[Column,           Nullable] public Guid?    TaskId      { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public Guid     ProductId   { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public int      Sku         { get; set; } // int
		[Column,        NotNull    ] public int      Quantity    { get; set; } // int
		[Column,        NotNull    ] public int      QualityId   { get; set; } // int
		[Column,        NotNull    ] public double   Price       { get; set; } // float
		[Column,        NotNull    ] public DateTime CreateDate  { get; set; } // datetime
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsShipmentDocuments")]
	public partial class WmsShipmentDocument
	{
		[PrimaryKey, Identity   ] public long     Id                { get; set; } // bigint
		[Column,     NotNull    ] public int      WarehouseId       { get; set; } // int
		[Column,     NotNull    ] public Guid     PublicId          { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string   Number            { get; set; } // varchar(36)
		[Column,     NotNull    ] public DateTime CreateDate        { get; set; } // datetime
		[Column,     NotNull    ] public DateTime WmsCreateDate     { get; set; } // datetime
		[Column,     NotNull    ] public DateTime ShipmentDate      { get; set; } // datetime
		[Column,     NotNull    ] public int      ShipmentDirection { get; set; } // int
		[Column,     NotNull    ] public int      DocStatus         { get; set; } // int
		[Column,        Nullable] public Guid?    RouteId           { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public bool     OuterOrder        { get; set; } // bit
		[Column,        Nullable] public string   Comments          { get; set; } // nvarchar(1024)
		[Column,     NotNull    ] public bool     IsDeleted         { get; set; } // bit
		[Column,     NotNull    ] public int      Operation         { get; set; } // int
		[Column,     NotNull    ] public Guid     AuthorId          { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="WmsShipmentDocumentsArchive")]
	public partial class WmsShipmentDocumentsArchive
	{
		[PrimaryKey(1), NotNull    ] public long     Id                { get; set; } // bigint
		[Column,        NotNull    ] public int      WarehouseId       { get; set; } // int
		[Column,        NotNull    ] public Guid     PublicId          { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string   Number            { get; set; } // varchar(36)
		[Column,        NotNull    ] public DateTime CreateDate        { get; set; } // datetime
		[Column,        NotNull    ] public DateTime WmsCreateDate     { get; set; } // datetime
		[Column,        NotNull    ] public DateTime ShipmentDate      { get; set; } // datetime
		[Column,        NotNull    ] public int      ShipmentDirection { get; set; } // int
		[Column,        NotNull    ] public int      DocStatus         { get; set; } // int
		[Column,           Nullable] public Guid?    RouteId           { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public bool     OuterOrder        { get; set; } // bit
		[Column,           Nullable] public string   Comments          { get; set; } // nvarchar(1024)
		[Column,        NotNull    ] public bool     IsDeleted         { get; set; } // bit
		[Column,        NotNull    ] public int      Operation         { get; set; } // int
		[Column,        NotNull    ] public Guid     AuthorId          { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate       { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsShipmentDocumentsItems")]
	public partial class WmsShipmentDocumentsItem
	{
		[PrimaryKey, Identity   ] public long     Id         { get; set; } // bigint
		[Column,     NotNull    ] public long     DocId      { get; set; } // bigint
		[Column,        Nullable] public Guid?    OrderId    { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public Guid     ProductId  { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      Sku        { get; set; } // int
		[Column,     NotNull    ] public int      Quantity   { get; set; } // int
		[Column,     NotNull    ] public int      QualityId  { get; set; } // int
		[Column,     NotNull    ] public bool     IsDeleted  { get; set; } // bit
		[Column,     NotNull    ] public DateTime CreateDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsShipmentDocumentsItemsArchive")]
	public partial class WmsShipmentDocumentsItemsArchive
	{
		[PrimaryKey(1), NotNull    ] public long     Id          { get; set; } // bigint
		[Column,        NotNull    ] public long     DocId       { get; set; } // bigint
		[Column,           Nullable] public Guid?    OrderId     { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public Guid     ProductId   { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public int      Sku         { get; set; } // int
		[Column,        NotNull    ] public int      Quantity    { get; set; } // int
		[Column,        NotNull    ] public int      QualityId   { get; set; } // int
		[Column,        NotNull    ] public bool     IsDeleted   { get; set; } // bit
		[Column,        NotNull    ] public DateTime CreateDate  { get; set; } // datetime
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsShipmentDocumentsItemsDataMatrixes")]
	public partial class WmsShipmentDocumentsItemsDataMatrix
	{
		[Identity                                                 ] public long   Id             { get; set; } // bigint
		[Column,                                       NotNull    ] public long   DocId          { get; set; } // bigint
		[Column,                                          Nullable] public Guid?  ProductId      { get; set; } // uniqueidentifier
		[Column,                                       NotNull    ] public string DataMatrix     { get; set; } // nvarchar(128)
		[Column,                                          Nullable] public string FullDataMatrix { get; set; } // nvarchar(128)
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public string Barcode        { get; set; } // nvarchar(14)
	}

	[Table(Schema="dbo", Name="WmsShipmentDocumentWarehouseContainers")]
	public partial class WmsShipmentDocumentWarehouseContainer
	{
		[PrimaryKey, Identity] public long     Id              { get; set; } // bigint
		[Column,     NotNull ] public Guid     PublicId        { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string   ContainerNumber { get; set; } // varchar(20)
		[Column,     NotNull ] public string   CellAddress     { get; set; } // varchar(20)
		[Column,     NotNull ] public DateTime ReportDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsShipmentOrderDocuments")]
	public partial class WmsShipmentOrderDocument
	{
		[PrimaryKey, Identity   ] public long      Id                { get; set; } // bigint
		[Column,     NotNull    ] public int       WarehouseId       { get; set; } // int
		[Column,     NotNull    ] public Guid      PublicId          { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public Guid      ClientId          { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public string    Number            { get; set; } // varchar(36)
		[Column,     NotNull    ] public DateTime  CreateDate        { get; set; } // datetime
		[Column,     NotNull    ] public DateTime  WmsCreateDate     { get; set; } // datetime
		[Column,        Nullable] public DateTime? ShipmentDate      { get; set; } // datetime
		[Column,     NotNull    ] public int       ShipmentDirection { get; set; } // int
		[Column,        Nullable] public Guid?     OrderSource       { get; set; } // uniqueidentifier
		[Column,        Nullable] public string    DeliveryAddress   { get; set; } // nvarchar(500)
		[Column,     NotNull    ] public Guid      RouteId           { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int       DocStatus         { get; set; } // int
		[Column,     NotNull    ] public bool      IsShipped         { get; set; } // bit
		[Column,     NotNull    ] public bool      IsPartial         { get; set; } // bit
		[Column,     NotNull    ] public bool      IsDeleted         { get; set; } // bit
		[Column,     NotNull    ] public int       ImportanceLevel   { get; set; } // int
		[Column,        Nullable] public string    Comments          { get; set; } // nvarchar(1024)
		[Column,     NotNull    ] public int       Operation         { get; set; } // int
		[Column,     NotNull    ] public DateTime  ReportDate        { get; set; } // datetime
		[Column,     NotNull    ] public Guid      AuthorId          { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="WmsShipmentOrderDocumentDirections")]
	public partial class WmsShipmentOrderDocumentDirection
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // varchar(36)
	}

	[Table(Schema="dbo", Name="WmsShipmentOrderDocumentsArchive")]
	public partial class WmsShipmentOrderDocumentsArchive
	{
		[PrimaryKey(1), NotNull    ] public long      Id                { get; set; } // bigint
		[Column,        NotNull    ] public int       WarehouseId       { get; set; } // int
		[Column,        NotNull    ] public Guid      PublicId          { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public Guid      ClientId          { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public string    Number            { get; set; } // varchar(36)
		[Column,        NotNull    ] public DateTime  CreateDate        { get; set; } // datetime
		[Column,        NotNull    ] public DateTime  WmsCreateDate     { get; set; } // datetime
		[Column,           Nullable] public DateTime? ShipmentDate      { get; set; } // datetime
		[Column,        NotNull    ] public int       ShipmentDirection { get; set; } // int
		[Column,           Nullable] public Guid?     OrderSource       { get; set; } // uniqueidentifier
		[Column,           Nullable] public string    DeliveryAddress   { get; set; } // nvarchar(500)
		[Column,        NotNull    ] public Guid      RouteId           { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public int       DocStatus         { get; set; } // int
		[Column,        NotNull    ] public bool      IsShipped         { get; set; } // bit
		[Column,        NotNull    ] public bool      IsPartial         { get; set; } // bit
		[Column,        NotNull    ] public bool      IsDeleted         { get; set; } // bit
		[Column,        NotNull    ] public int       ImportanceLevel   { get; set; } // int
		[Column,           Nullable] public string    Comments          { get; set; } // nvarchar(1024)
		[Column,        NotNull    ] public DateTime  ReportDate        { get; set; } // datetime
		[Column,        NotNull    ] public int       Operation         { get; set; } // int
		[PrimaryKey(2), NotNull    ] public DateTime  ArchiveDate       { get; set; } // datetime
		[Column,        NotNull    ] public Guid      AuthorId          { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="WmsShipmentOrderDocumentsItems")]
	public partial class WmsShipmentOrderDocumentsItem
	{
		[PrimaryKey, Identity] public long     Id         { get; set; } // bigint
		[Column,     NotNull ] public long     DocId      { get; set; } // bigint
		[Column,     NotNull ] public Guid     ProductId  { get; set; } // uniqueidentifier
		[Column,     NotNull ] public int      Sku        { get; set; } // int
		[Column,     NotNull ] public int      Quantity   { get; set; } // int
		[Column,     NotNull ] public int      QualityId  { get; set; } // int
		[Column,     NotNull ] public double   Price      { get; set; } // float
		[Column,     NotNull ] public DateTime CreateDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsShipmentOrderDocumentsItemsArchive")]
	public partial class WmsShipmentOrderDocumentsItemsArchive
	{
		[PrimaryKey(1), NotNull] public long     Id          { get; set; } // bigint
		[Column,        NotNull] public long     DocId       { get; set; } // bigint
		[Column,        NotNull] public Guid     ProductId   { get; set; } // uniqueidentifier
		[Column,        NotNull] public int      Sku         { get; set; } // int
		[Column,        NotNull] public int      Quantity    { get; set; } // int
		[Column,        NotNull] public int      QualityId   { get; set; } // int
		[Column,        NotNull] public double   Price       { get; set; } // float
		[Column,        NotNull] public DateTime CreateDate  { get; set; } // datetime
		[PrimaryKey(2), NotNull] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsShipmentOrderDocumentStatuses")]
	public partial class WmsShipmentOrderDocumentStatus
	{
		[PrimaryKey, Identity] public int    Id   { get; set; } // int
		[Column,     NotNull ] public string Name { get; set; } // varchar(36)
	}

	[Table(Schema="dbo", Name="WmsVerificationDocuments")]
	public partial class WmsVerificationDocument
	{
		[PrimaryKey, Identity] public long     Id          { get; set; } // bigint
		[Column,     NotNull ] public int      WarehouseId { get; set; } // int
		[Column,     NotNull ] public Guid     PublicId    { get; set; } // uniqueidentifier
		[Column,     NotNull ] public string   Number      { get; set; } // varchar(36)
		[Column,     NotNull ] public int      DocType     { get; set; } // int
		[Column,     NotNull ] public DateTime CreateDate  { get; set; } // datetime
		[Column,     NotNull ] public int      Operation   { get; set; } // int
		[Column,     NotNull ] public Guid     AuthorId    { get; set; } // uniqueidentifier
	}

	[Table(Schema="dbo", Name="WmsVerificationDocumentsArchive")]
	public partial class WmsVerificationDocumentsArchive
	{
		[PrimaryKey(1), NotNull] public long     Id          { get; set; } // bigint
		[Column,        NotNull] public int      WarehouseId { get; set; } // int
		[Column,        NotNull] public Guid     PublicId    { get; set; } // uniqueidentifier
		[Column,        NotNull] public string   Number      { get; set; } // varchar(36)
		[Column,        NotNull] public int      DocType     { get; set; } // int
		[Column,        NotNull] public DateTime CreateDate  { get; set; } // datetime
		[Column,        NotNull] public int      Operation   { get; set; } // int
		[Column,        NotNull] public Guid     AuthorId    { get; set; } // uniqueidentifier
		[PrimaryKey(2), NotNull] public DateTime ArchiveDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsVerificationDocumentsItems")]
	public partial class WmsVerificationDocumentsItem
	{
		[PrimaryKey, Identity   ] public long     Id           { get; set; } // bigint
		[Column,     NotNull    ] public long     DocId        { get; set; } // bigint
		[Column,     NotNull    ] public Guid     ProductId    { get; set; } // uniqueidentifier
		[Column,     NotNull    ] public int      Sku          { get; set; } // int
		[Column,     NotNull    ] public int      Quantity     { get; set; } // int
		[Column,     NotNull    ] public int      QualityId    { get; set; } // int
		[Column,        Nullable] public int?     OldQualityId { get; set; } // int
		[Column,     NotNull    ] public DateTime CreateDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="WmsVerificationDocumentsItemsArchive")]
	public partial class WmsVerificationDocumentsItemsArchive
	{
		[PrimaryKey(1), NotNull    ] public long     Id           { get; set; } // bigint
		[Column,        NotNull    ] public long     DocId        { get; set; } // bigint
		[Column,        NotNull    ] public Guid     ProductId    { get; set; } // uniqueidentifier
		[Column,        NotNull    ] public int      Sku          { get; set; } // int
		[Column,        NotNull    ] public int      Quantity     { get; set; } // int
		[Column,        NotNull    ] public DateTime CreateDate   { get; set; } // datetime
		[Column,        NotNull    ] public int      QualityId    { get; set; } // int
		[Column,           Nullable] public int?     OldQualityId { get; set; } // int
		[PrimaryKey(2), NotNull    ] public DateTime ArchiveDate  { get; set; } // datetime
	}

	public static partial class ComparerDataContextStoredProcedures
	{
		#region GetPrePaymentKinds

		public static IEnumerable<GetPrePaymentKindsResult> GetPrePaymentKinds(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<GetPrePaymentKindsResult>("[dbo].[_getPrePaymentKinds]");
		}

		public partial class GetPrePaymentKindsResult
		{
			public int Id { get; set; }
		}

		#endregion

		#region ActionProcessingArchive

		public static int ActionProcessingArchive(this ComparerDataContext dataConnection, long? @ActionId)
		{
			var parameters = new []
			{
				new DataParameter("@ActionId", @ActionId, LinqToDB.DataType.Int64)
			};

			return dataConnection.ExecuteProc("[dbo].[ActionProcessingArchive]", parameters);
		}

		#endregion

		#region ActionProcessingArchiveV2

		public static int ActionProcessingArchiveV2(this ComparerDataContext dataConnection, long? @ActionId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ActionId", @ActionId, LinqToDB.DataType.Int64),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[ActionProcessingArchive_v2]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region ActionsProcessingQueueInProcessClear

		public static int ActionsProcessingQueueInProcessClear(this ComparerDataContext dataConnection)
		{
			return dataConnection.ExecuteProc("[dbo].[ActionsProcessingQueueInProcessClear]");
		}

		#endregion

		#region ActionsProcessingQueuePut

		public static int ActionsProcessingQueuePut(this ComparerDataContext dataConnection, string @ObjectId, int? @OperationId, int? @ObjectTypeId, string @ActionObject, int? @PriorityLevel, Guid? @AuthorId)
		{
			var parameters = new []
			{
				new DataParameter("@ObjectId",      @ObjectId,      LinqToDB.DataType.NVarChar)
				{
					Size = 50
				},
				new DataParameter("@OperationId",   @OperationId,   LinqToDB.DataType.Int32),
				new DataParameter("@ObjectTypeId",  @ObjectTypeId,  LinqToDB.DataType.Int32),
				new DataParameter("@ActionObject",  @ActionObject,  LinqToDB.DataType.NVarChar)
				{
					Size = -1
				},
				new DataParameter("@PriorityLevel", @PriorityLevel, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId",      @AuthorId,      LinqToDB.DataType.Guid)
			};

			return dataConnection.ExecuteProc("[dbo].[ActionsProcessingQueuePut]", parameters);
		}

		#endregion

		#region ActionsProcessingQueueView

		public static IEnumerable<ActionsProcessingQueueViewResult> ActionsProcessingQueueView(this ComparerDataContext dataConnection, int? @Limit)
		{
			var parameters = new []
			{
				new DataParameter("@Limit", @Limit, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<ActionsProcessingQueueViewResult>("[dbo].[ActionsProcessingQueueView]", parameters);
		}

		public partial class ActionsProcessingQueueViewResult
		{
			public long   Id            { get; set; }
			public string ObjectId      { get; set; }
			public int    ObjectTypeId  { get; set; }
			public int    OperationId   { get; set; }
			public string ActionObject  { get; set; }
			public int    PriorityLevel { get; set; }
			public string AuthorName    { get; set; }
			public long?  RowNum        { get; set; }
		}

		#endregion

		#region ActivityProcessCreate

		public static int ActivityProcessCreate(this ComparerDataContext dataConnection, int? @TypeId, int? @SourceId, Guid? @UserId, int? @EntityTypeId, string @EntityId, DateTime? @StartTime, DateTime? @FinishTime, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@TypeId",   @TypeId,   LinqToDB.DataType.Int32),
				new DataParameter("@SourceId", @SourceId, LinqToDB.DataType.Int32),
				new DataParameter("@UserId",   @UserId,   LinqToDB.DataType.Guid),
				new DataParameter("@EntityTypeId", @EntityTypeId, LinqToDB.DataType.Int32),
				new DataParameter("@EntityId", @EntityId, LinqToDB.DataType.VarChar)
				{
					Size = 36
				},
				new DataParameter("@StartTime", @StartTime, LinqToDB.DataType.DateTime),
				new DataParameter("@FinishTime", @FinishTime, LinqToDB.DataType.DateTime),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.VarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[ActivityProcessCreate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[7].Value);

			return ret;
		}

		#endregion

		#region ActivityProcessView

		public static IEnumerable<ActivityProcessViewResult> ActivityProcessView(this ComparerDataContext dataConnection, string @EntityId)
		{
			var parameters = new []
			{
				new DataParameter("@EntityId", @EntityId, LinqToDB.DataType.VarChar)
				{
					Size = 36
				}
			};

			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new ActivityProcessViewResult
				{
					TypeId       = Converter.ChangeTypeTo<int>     (dataReader.GetValue(0), ms),
					Name         = Converter.ChangeTypeTo<string>  (dataReader.GetValue(1), ms),
					SourceId     = Converter.ChangeTypeTo<int>     (dataReader.GetValue(2), ms),
					Column4      = Converter.ChangeTypeTo<string>  (dataReader.GetValue(3), ms),
					UserId       = Converter.ChangeTypeTo<Guid>    (dataReader.GetValue(4), ms),
					NAME         = Converter.ChangeTypeTo<string>  (dataReader.GetValue(5), ms),
					EntityTypeId = Converter.ChangeTypeTo<int>     (dataReader.GetValue(6), ms),
					Column8      = Converter.ChangeTypeTo<string>  (dataReader.GetValue(7), ms),
					EntityId     = Converter.ChangeTypeTo<string>  (dataReader.GetValue(8), ms),
					StartTime    = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(9), ms),
					FinishTime   = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(10), ms),
				},
				"[dbo].[ActivityProcessView]", parameters);
		}

		public partial class ActivityProcessViewResult
		{
			                 public int      TypeId       { get; set; }
			                 public string   Name         { get; set; }
			                 public int      SourceId     { get; set; }
			[Column("Name")] public string   Column4      { get; set; }
			                 public Guid     UserId       { get; set; }
			                 public string   NAME         { get; set; }
			                 public int      EntityTypeId { get; set; }
			[Column("Name")] public string   Column8      { get; set; }
			                 public string   EntityId     { get; set; }
			                 public DateTime StartTime    { get; set; }
			                 public DateTime FinishTime   { get; set; }
		}

		#endregion

		#region Barcodes1CView

		public static IEnumerable<Barcodes1CViewResult> Barcodes1CView(this ComparerDataContext dataConnection, DateTime? @RepDate)
		{
			var parameters = new []
			{
				new DataParameter("@RepDate", @RepDate, LinqToDB.DataType.DateTime)
			};

			return dataConnection.QueryProc<Barcodes1CViewResult>("[dbo].[Barcodes1CView]", parameters);
		}

		public partial class Barcodes1CViewResult
		{
			[Column("РђСЂС‚РёРєСѓР»")] public int      РђСЂС_РёРєСѓР_ { get; set; }
			                           public string   РљРѕРґ         { get; set; }
			[Column("Р”Р°С‚Р°")      ] public DateTime Р_Р_С_Р_       { get; set; }
		}

		#endregion

		#region BarcodesCtrl

		public static int BarcodesCtrl(this ComparerDataContext dataConnection)
		{
			return dataConnection.ExecuteProc("[dbo].[BarcodesCtrl]");
		}

		#endregion

		#region BarcodesPriceRead

		public static int BarcodesPriceRead(this ComparerDataContext dataConnection, long? @session)
		{
			var parameters = new []
			{
				new DataParameter("@session", @session, LinqToDB.DataType.Int64)
			};

			return dataConnection.ExecuteProc("[dbo].[BarcodesPriceRead]", parameters);
		}

		#endregion

		#region BarCodesRecQuantity

		public static IEnumerable<BarCodesRecQuantityResult> BarCodesRecQuantity(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<BarCodesRecQuantityResult>("[dbo].[BarCodesRecQuantity]");
		}

		public partial class BarCodesRecQuantityResult
		{
			public int? RecordQuantity { get; set; }
		}

		#endregion

		#region BarcodesTypeFind

		public static int BarcodesTypeFind(this ComparerDataContext dataConnection)
		{
			return dataConnection.ExecuteProc("[dbo].[BarcodesTypeFind]");
		}

		#endregion

		#region BlackListClientDelete

		public static int BlackListClientDelete(this ComparerDataContext dataConnection, Guid? @ClientId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ClientId", @ClientId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[BlackListClientDelete]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region BlackListClientEdit

		public static int BlackListClientEdit(this ComparerDataContext dataConnection, Guid? @ClientId, int? @StatusId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ClientId", @ClientId, LinqToDB.DataType.Guid),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[BlackListClientEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region BQExportOrdersView

		public static IEnumerable<BQExportOrdersViewResult> BQExportOrdersView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<BQExportOrdersViewResult>("[dbo].[BQExportOrdersView]");
		}

		public partial class BQExportOrdersViewResult
		{
			public int  Id      { get; set; }
			public Guid OrderId { get; set; }
		}

		#endregion

		#region BQOrderLastDataView

		public static IEnumerable<BQOrderLastDataViewResult> BQOrderLastDataView(this ComparerDataContext dataConnection, Guid? @OrderId)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId", @OrderId, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<BQOrderLastDataViewResult>("[dbo].[BQOrderLastDataView]", parameters);
		}

		public partial class BQOrderLastDataViewResult
		{
			public Guid     OrderId          { get; set; }
			public string   PublicNumber     { get; set; }
			public DateTime OrderCreatedDate { get; set; }
			public int      StatusId         { get; set; }
			public Guid     SiteId           { get; set; }
			public Guid     ClientId         { get; set; }
			public int      ClientTypeId     { get; set; }
			public int      DeliveryTypeId   { get; set; }
			public int      PaymentTypeId    { get; set; }
			public string   Locality         { get; set; }
			public int?     ReturnReasonId   { get; set; }
			public int?     FaultPartyId     { get; set; }
			public string   Coupon           { get; set; }
			public int      OrdersCount      { get; set; }
			public double   DeliveryCost     { get; set; }
			public double   FrozenSum        { get; set; }
			public double?  BonusPaidSum     { get; set; }
			public double   PaidSum          { get; set; }
		}

		#endregion

		#region BQQueueClear

		public static int BQQueueClear(this ComparerDataContext dataConnection, long? @Id, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.VarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[BQQueueClear]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region BQQueueHistoryDateUpdate

		public static int BQQueueHistoryDateUpdate(this ComparerDataContext dataConnection, DateTime? @Date, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Date",     @Date,     LinqToDB.DataType.DateTime),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.VarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[BQQueueHistoryDateUpdate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region BQQueueHistoryDateView

		public static IEnumerable<BQQueueHistoryDate> BQQueueHistoryDateView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<BQQueueHistoryDate>("[dbo].[BQQueueHistoryDateView]");
		}

		#endregion

		#region BQQueueHistoryView

		public static IEnumerable<BQQueueHistoryViewResult> BQQueueHistoryView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<BQQueueHistoryViewResult>("[dbo].[BQQueueHistoryView]");
		}

		public partial class BQQueueHistoryViewResult
		{
			public long   Id   { get; set; }
			public int    Type { get; set; }
			public string Data { get; set; }
		}

		#endregion

		#region BQQueueUpdate

		public static int BQQueueUpdate(this ComparerDataContext dataConnection, long? @Id, string @Error, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.VarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[BQQueueUpdate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region BQQueueView

		public static IEnumerable<BQQueueViewResult> BQQueueView(this ComparerDataContext dataConnection, int? @ObjectTypeId, Guid? @PublicId)
		{
			var parameters = new []
			{
				new DataParameter("@ObjectTypeId", @ObjectTypeId, LinqToDB.DataType.Int32),
				new DataParameter("@PublicId",     @PublicId,     LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<BQQueueViewResult>("[dbo].[BQQueueView]", parameters);
		}

		public partial class BQQueueViewResult
		{
			public long      Id           { get; set; }
			public Guid      PublicId     { get; set; }
			public int       ObjectTypeId { get; set; }
			public string    Data         { get; set; }
			public string    Error        { get; set; }
			public int       TryCount     { get; set; }
			public DateTime? NextTryDate  { get; set; }
		}

		#endregion

		#region CompetitiorsFeedSettingsView

		public static IEnumerable<CompetitiorsFeedSettingsViewResult> CompetitiorsFeedSettingsView(this ComparerDataContext dataConnection, int? @FeedId, bool? @IsDefault)
		{
			var parameters = new []
			{
				new DataParameter("@FeedId",    @FeedId,    LinqToDB.DataType.Int32),
				new DataParameter("@IsDefault", @IsDefault, LinqToDB.DataType.Boolean)
			};

			return dataConnection.QueryProc<CompetitiorsFeedSettingsViewResult>("[dbo].[CompetitiorsFeedSettingsView]", parameters);
		}

		public partial class CompetitiorsFeedSettingsViewResult
		{
			public int      Id             { get; set; }
			public int      SourceTypeId   { get; set; }
			public int      SourceFormatId { get; set; }
			public string   ServiceName    { get; set; }
			public string   SourceConfig   { get; set; }
			public string   ConvertConfig  { get; set; }
			public string   MatchConfig    { get; set; }
			public DateTime CreatedDate    { get; set; }
			public DateTime ChangedDate    { get; set; }
			public int      FeedId         { get; set; }
			public bool     IsDefault      { get; set; }
		}

		#endregion

		#region CompetitorFeedInfoView

		public static IEnumerable<CompetitorFeedInfoViewResult> CompetitorFeedInfoView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<CompetitorFeedInfoViewResult>("[dbo].[CompetitorFeedInfoView]", parameters);
		}

		public partial class CompetitorFeedInfoViewResult
		{
			public int      Id           { get; set; }
			public bool     IsActive     { get; set; }
			public string   Name         { get; set; }
			public string   OfficialName { get; set; }
			public DateTime CreatedDate  { get; set; }
			public DateTime ChangedDate  { get; set; }
		}

		#endregion

		#region CompetitorFeedItemMatch

		public static int CompetitorFeedItemMatch(this ComparerDataContext dataConnection, int? @ItemId, Guid? @ProductId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ItemId",   @ItemId,   LinqToDB.DataType.Int32),
				new DataParameter("@ProductId", @ProductId, LinqToDB.DataType.Guid),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CompetitorFeedItemMatch]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region CompetitorFeedItemUnMatch

		public static int CompetitorFeedItemUnMatch(this ComparerDataContext dataConnection, int? @ItemId, Guid? @ProductId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ItemId",   @ItemId,   LinqToDB.DataType.Int32),
				new DataParameter("@ProductId", @ProductId, LinqToDB.DataType.Guid),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CompetitorFeedItemUnMatch]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region CompetitorFeedItemUnusedStateChange

		public static int CompetitorFeedItemUnusedStateChange(this ComparerDataContext dataConnection, bool? @UsedState, int? @ItemId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@UsedState", @UsedState, LinqToDB.DataType.Boolean),
				new DataParameter("@ItemId",   @ItemId,   LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CompetitorFeedItemUnusedStateChange]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region CompetitorFeedMatchingStatView

		public static IEnumerable<CompetitorFeedMatchingStatViewResult> CompetitorFeedMatchingStatView(this ComparerDataContext dataConnection, int? @FeedId)
		{
			var parameters = new []
			{
				new DataParameter("@FeedId", @FeedId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<CompetitorFeedMatchingStatViewResult>("[dbo].[CompetitorFeedMatchingStatView]", parameters);
		}

		public partial class CompetitorFeedMatchingStatViewResult
		{
			public int? TotalCount      { get; set; }
			public int? NotMatchedCount { get; set; }
			public int? UnusedCount     { get; set; }
		}

		#endregion

		#region CompetitorFeedView

		public static IEnumerable<CompetitorFeedViewResult> CompetitorFeedView(this ComparerDataContext dataConnection, int? @FeedId)
		{
			var parameters = new []
			{
				new DataParameter("@FeedId", @FeedId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<CompetitorFeedViewResult>("[dbo].[CompetitorFeedView]", parameters);
		}

		public partial class CompetitorFeedViewResult
		{
			public int      Id           { get; set; }
			public bool     IsActive     { get; set; }
			public string   Name         { get; set; }
			public string   OfficialName { get; set; }
			public DateTime CreatedDate  { get; set; }
		}

		#endregion

		#region CompetitorsFeedsView

		public static IEnumerable<CompetitorsFeed> CompetitorsFeedsView(this ComparerDataContext dataConnection, string @CompetitorId, bool? @IsActive)
		{
			var parameters = new []
			{
				new DataParameter("@CompetitorId", @CompetitorId, LinqToDB.DataType.VarChar)
				{
					Size = 100
				},
				new DataParameter("@IsActive",     @IsActive,     LinqToDB.DataType.Boolean)
			};

			return dataConnection.QueryProc<CompetitorsFeed>("[dbo].[CompetitorsFeedsView]", parameters);
		}

		#endregion

		#region CompetitorsView

		public static IEnumerable<CompetitorsViewResult> CompetitorsView(this ComparerDataContext dataConnection, bool? @IsActive, string @Name)
		{
			var parameters = new []
			{
				new DataParameter("@IsActive", @IsActive, LinqToDB.DataType.Boolean),
				new DataParameter("@Name",     @Name,     LinqToDB.DataType.VarChar)
				{
					Size = 100
				}
			};

			return dataConnection.QueryProc<CompetitorsViewResult>("[dbo].[CompetitorsView]", parameters);
		}

		public partial class CompetitorsViewResult
		{
			public int    Id           { get; set; }
			public bool   IsActive     { get; set; }
			public string Name         { get; set; }
			public string OfficialName { get; set; }
		}

		#endregion

		#region CompetitorsWithFeedsView

		public static IEnumerable<CompetitorsWithFeedsViewResult> CompetitorsWithFeedsView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<CompetitorsWithFeedsViewResult>("[dbo].[CompetitorsWithFeedsView]");
		}

		public partial class CompetitorsWithFeedsViewResult
		{
			public int    Id           { get; set; }
			public bool   IsActive     { get; set; }
			public string Name         { get; set; }
			public string OfficialName { get; set; }
		}

		#endregion

		#region CompetitorView

		public static IEnumerable<CompetitorViewResult> CompetitorView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<CompetitorViewResult>("[dbo].[CompetitorView]", parameters);
		}

		public partial class CompetitorViewResult
		{
			public int      Id           { get; set; }
			public bool     IsActive     { get; set; }
			public string   Name         { get; set; }
			public string   OfficialName { get; set; }
			public DateTime CreatedDate  { get; set; }
			public DateTime ChangedDate  { get; set; }
		}

		#endregion

		#region CRPTCancellationDocumentProcess

		public static int CRPTCancellationDocumentProcess(this ComparerDataContext dataConnection, string @CRPTNumber, DateTime? @CRPTCreatedDate, string @CRPTType, string @CRPTStatus, string @CancelledDocCRPTNumber, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@CRPTNumber", @CRPTNumber, LinqToDB.DataType.NVarChar)
				{
					Size = 500
				},
				new DataParameter("@CRPTCreatedDate", @CRPTCreatedDate, LinqToDB.DataType.DateTime),
				new DataParameter("@CRPTType", @CRPTType, LinqToDB.DataType.VarChar)
				{
					Size = 128
				},
				new DataParameter("@CRPTStatus", @CRPTStatus, LinqToDB.DataType.VarChar)
				{
					Size = 128
				},
				new DataParameter("@CancelledDocCRPTNumber", @CancelledDocCRPTNumber, LinqToDB.DataType.NVarChar)
				{
					Size = 500
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CRPTCancellationDocumentProcess]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[6].Value);

			return ret;
		}

		#endregion

		#region CRPTDocsPuttingDataMatrixesView

		public static IEnumerable<CRPTDocsPuttingDataMatrixesViewResult> CRPTDocsPuttingDataMatrixesView(this ComparerDataContext dataConnection, string @DocNumber, int? @Status, DateTime? @DateFrom, DateTime? @DateTo)
		{
			var parameters = new []
			{
				new DataParameter("@DocNumber", @DocNumber, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@Status",    @Status,    LinqToDB.DataType.Int32),
				new DataParameter("@DateFrom",  @DateFrom,  LinqToDB.DataType.Date),
				new DataParameter("@DateTo",    @DateTo,    LinqToDB.DataType.Date)
			};

			return dataConnection.QueryProc<CRPTDocsPuttingDataMatrixesViewResult>("[dbo].[CRPTDocsPuttingDataMatrixesView]", parameters);
		}

		public partial class CRPTDocsPuttingDataMatrixesViewResult
		{
			public int      Id           { get; set; }
			public string   DocNumber    { get; set; }
			public int      StatusId     { get; set; }
			public int      CRPTStatusId { get; set; }
			public string   CRPTStatus   { get; set; }
			public string   Comments     { get; set; }
			public string   Error        { get; set; }
			public DateTime CreatedDate  { get; set; }
		}

		#endregion

		#region CRPTDocumentInternalStatusesView

		public static IEnumerable<CRPTDocumentInternalStatusesViewResult> CRPTDocumentInternalStatusesView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<CRPTDocumentInternalStatusesViewResult>("[dbo].[CRPTDocumentInternalStatusesView]");
		}

		public partial class CRPTDocumentInternalStatusesViewResult
		{
			public string Name { get; set; }
		}

		#endregion

		#region CRPTDocumentRegDataEdit

		public static int CRPTDocumentRegDataEdit(this ComparerDataContext dataConnection, int? @Id, string @CRPTNumber, DateTime? @CRPTCreatedDate, string @Comments, string @Error, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@CRPTNumber", @CRPTNumber, LinqToDB.DataType.NVarChar)
				{
					Size = 500
				},
				new DataParameter("@CRPTCreatedDate", @CRPTCreatedDate, LinqToDB.DataType.DateTime),
				new DataParameter("@Comments", @Comments, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CRPTDocumentRegDataEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[6].Value);

			return ret;
		}

		#endregion

		#region CRPTDocumentStatusEdit

		public static int CRPTDocumentStatusEdit(this ComparerDataContext dataConnection, int? @Id, string @CRPTNumber, string @CRPTStatus, int? @StatusId, string @Error, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@CRPTNumber", @CRPTNumber, LinqToDB.DataType.NVarChar)
				{
					Size = 500
				},
				new DataParameter("@CRPTStatus", @CRPTStatus, LinqToDB.DataType.VarChar)
				{
					Size = 128
				},
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CRPTDocumentStatusEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[6].Value);

			return ret;
		}

		#endregion

		#region CRPTWithEDODocumentLinkCreate

		public static int CRPTWithEDODocumentLinkCreate(this ComparerDataContext dataConnection, int? @CRPTDocId, int? @EDODocId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@CRPTDocId", @CRPTDocId, LinqToDB.DataType.Int32),
				new DataParameter("@EDODocId", @EDODocId, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CRPTWithEDODocumentLinkCreate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region CRPTWithEDODocumentLinkDelete

		public static int CRPTWithEDODocumentLinkDelete(this ComparerDataContext dataConnection, int? @CRPTDocId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@CRPTDocId", @CRPTDocId, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[CRPTWithEDODocumentLinkDelete]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region CurrencyView

		public static IEnumerable<Currency> CurrencyView(this ComparerDataContext dataConnection, int? @CurrencyId)
		{
			var parameters = new []
			{
				new DataParameter("@CurrencyId", @CurrencyId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<Currency>("[dbo].[CurrencyView]", parameters);
		}

		#endregion

		#region DailyCurrenciesUddate

		public static int DailyCurrenciesUddate(this ComparerDataContext dataConnection, string @CharCode, DateTime? @CBRDate, DateTime? @ReadDate, decimal? @RateValue)
		{
			var parameters = new []
			{
				new DataParameter("@CharCode",  @CharCode,  LinqToDB.DataType.NVarChar)
				{
					Size = 5
				},
				new DataParameter("@CBRDate",   @CBRDate,   LinqToDB.DataType.DateTime),
				new DataParameter("@ReadDate",  @ReadDate,  LinqToDB.DataType.DateTime),
				new DataParameter("@RateValue", @RateValue, LinqToDB.DataType.Decimal)
			};

			return dataConnection.ExecuteProc("[dbo].[DailyCurrenciesUddate]", parameters);
		}

		#endregion

		#region DailyCurrenciesView

		public static IEnumerable<DailyCurrency> DailyCurrenciesView(this ComparerDataContext dataConnection, int? @Mode, string @CharCode)
		{
			var parameters = new []
			{
				new DataParameter("@Mode",     @Mode,     LinqToDB.DataType.Int32),
				new DataParameter("@CharCode", @CharCode, LinqToDB.DataType.NVarChar)
				{
					Size = 5
				}
			};

			return dataConnection.QueryProc<DailyCurrency>("[dbo].[DailyCurrenciesView]", parameters);
		}

		#endregion

		#region DataMatrixCRPTPuttingDocumentRegDataEdit

		public static int DataMatrixCRPTPuttingDocumentRegDataEdit(this ComparerDataContext dataConnection, int? @Id, string @PublicId, DateTime? @ActionDate, string @CRPTStatus, int? @StatusId, string @Comments, Guid? @AuthorId, string @Error, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@ActionDate", @ActionDate, LinqToDB.DataType.DateTime),
				new DataParameter("@CRPTStatus", @CRPTStatus, LinqToDB.DataType.VarChar)
				{
					Size = 128
				},
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@Comments", @Comments, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 1000
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DataMatrixCRPTPuttingDocumentRegDataEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[8].Value);

			return ret;
		}

		#endregion

		#region DataMatrixCRPTPuttingDocumentStatusEdit

		public static int DataMatrixCRPTPuttingDocumentStatusEdit(this ComparerDataContext dataConnection, int? @Id, string @CRPTStatus, int? @StatusId, Guid? @AuthorId, string @Error, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@CRPTStatus", @CRPTStatus, LinqToDB.DataType.VarChar)
				{
					Size = 128
				},
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 1000
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DataMatrixCRPTPuttingDocumentStatusEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[5].Value);

			return ret;
		}

		#endregion

		#region DataMatrixCRPTWithdrawalDocumentEdit

		public static int DataMatrixCRPTWithdrawalDocumentEdit(this ComparerDataContext dataConnection, int? @Id, string @PublicId, int? @CRPTStatusId, int? @RegTryCount, string @Comments, Guid? @AuthorId, DateTime? @ActionDate, string @Error, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@CRPTStatusId", @CRPTStatusId, LinqToDB.DataType.Int32),
				new DataParameter("@RegTryCount", @RegTryCount, LinqToDB.DataType.Int32),
				new DataParameter("@Comments", @Comments, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ActionDate", @ActionDate, LinqToDB.DataType.DateTime),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 1000
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DataMatrixCRPTWithdrawalDocumentEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[8].Value);

			return ret;
		}

		#endregion

		#region DataMatrixCRPTWithdrawalDocumentRegDataEdit

		public static int DataMatrixCRPTWithdrawalDocumentRegDataEdit(this ComparerDataContext dataConnection, int? @Id, string @PublicId, DateTime? @ActionDate, string @CRPTStatus, int? @StatusId, string @Comments, Guid? @AuthorId, string @Error, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@ActionDate", @ActionDate, LinqToDB.DataType.DateTime),
				new DataParameter("@CRPTStatus", @CRPTStatus, LinqToDB.DataType.VarChar)
				{
					Size = 128
				},
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@Comments", @Comments, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 1000
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DataMatrixCRPTWithdrawalDocumentRegDataEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[8].Value);

			return ret;
		}

		#endregion

		#region DataMatrixCRPTWithdrawalDocumentStatusEdit

		public static int DataMatrixCRPTWithdrawalDocumentStatusEdit(this ComparerDataContext dataConnection, int? @Id, string @CRPTStatus, int? @StatusId, Guid? @AuthorId, string @Error, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@CRPTStatus", @CRPTStatus, LinqToDB.DataType.VarChar)
				{
					Size = 128
				},
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 1000
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DataMatrixCRPTWithdrawalDocumentStatusEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[5].Value);

			return ret;
		}

		#endregion

		#region DataMatrixesPuttingQueueView

		public static IEnumerable<DataMatrixesPuttingQueueViewResult> DataMatrixesPuttingQueueView(this ComparerDataContext dataConnection, int? @Limit)
		{
			var parameters = new []
			{
				new DataParameter("@Limit", @Limit, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<DataMatrixesPuttingQueueViewResult>("[dbo].[DataMatrixesPuttingQueueView]", parameters);
		}

		public partial class DataMatrixesPuttingQueueViewResult
		{
			public string DataMatrix { get; set; }
		}

		#endregion

		#region DebugInfoAdd

		public static int DebugInfoAdd(this ComparerDataContext dataConnection, int? @sessionID, string @xmlParameters)
		{
			var parameters = new []
			{
				new DataParameter("@sessionID",     @sessionID,     LinqToDB.DataType.Int32),
				new DataParameter("@xmlParameters", @xmlParameters, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[DebugInfoAdd]", parameters);
		}

		#endregion

		#region DebugInfoFind

		public static IEnumerable<DebugInfoFindResult> DebugInfoFind(this ComparerDataContext dataConnection, DateTime? @dateFrom, DateTime? @dateTo, string @xmlParameters, string @outPath)
		{
			var parameters = new []
			{
				new DataParameter("@dateFrom",      @dateFrom,      LinqToDB.DataType.DateTime),
				new DataParameter("@dateTo",        @dateTo,        LinqToDB.DataType.DateTime),
				new DataParameter("@xmlParameters", @xmlParameters, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@outPath",       @outPath,       LinqToDB.DataType.NVarChar)
				{
					Size = 255
				}
			};

			return dataConnection.QueryProc<DebugInfoFindResult>("[dbo].[DebugInfoFind]", parameters);
		}

		public partial class DebugInfoFindResult
		{
			public int      SessionID      { get; set; }
			public DateTime SessionDate    { get; set; }
			public int      ParameterID    { get; set; }
			public string   ParameterName  { get; set; }
			public string   ParameterValue { get; set; }
		}

		#endregion

		#region DebugInfoStore

		public static int DebugInfoStore(this ComparerDataContext dataConnection, string @xmlParameters, string @xmlFiles, ref int? @sessionID)
		{
			var parameters = new []
			{
				new DataParameter("@xmlParameters", @xmlParameters, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@xmlFiles",  @xmlFiles,  LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@sessionID", @sessionID, LinqToDB.DataType.Int32)
				{
					Direction = ParameterDirection.InputOutput
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DebugInfoStore]", parameters);

			@sessionID = Converter.ChangeTypeTo<int?>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region DeliveryHolydaysView

		public static IEnumerable<DeliveryHolydaysViewResult> DeliveryHolydaysView(this ComparerDataContext dataConnection, DateTime? @StartDate, DateTime? @EndDate)
		{
			var parameters = new []
			{
				new DataParameter("@StartDate", @StartDate, LinqToDB.DataType.Date),
				new DataParameter("@EndDate",   @EndDate,   LinqToDB.DataType.Date)
			};

			return dataConnection.QueryProc<DeliveryHolydaysViewResult>("[dbo].[DeliveryHolydaysView]", parameters);
		}

		public partial class DeliveryHolydaysViewResult
		{
			public DateTime Date { get; set; }
		}

		#endregion

		#region DeliveryServiceAccountEdit

		public static int DeliveryServiceAccountEdit(this ComparerDataContext dataConnection, int? @Id, string @Name, string @Host, string @AuthUser, string @AuthPassword, int? @AuthType, bool? @IsDefault)
		{
			var parameters = new []
			{
				new DataParameter("@Id",           @Id,           LinqToDB.DataType.Int32),
				new DataParameter("@Name",         @Name,         LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Host",         @Host,         LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@AuthUser",     @AuthUser,     LinqToDB.DataType.NVarChar)
				{
					Size = 100
				},
				new DataParameter("@AuthPassword", @AuthPassword, LinqToDB.DataType.NVarChar)
				{
					Size = 100
				},
				new DataParameter("@AuthType",     @AuthType,     LinqToDB.DataType.Int32),
				new DataParameter("@IsDefault",    @IsDefault,    LinqToDB.DataType.Boolean)
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServiceAccountEdit]", parameters);
		}

		#endregion

		#region DeliveryServiceAccountSSDUpdate

		public static int DeliveryServiceAccountSSDUpdate(this ComparerDataContext dataConnection, int? @Id, DateTime? @StatusSyncDate)
		{
			var parameters = new []
			{
				new DataParameter("@Id",             @Id,             LinqToDB.DataType.Int32),
				new DataParameter("@StatusSyncDate", @StatusSyncDate, LinqToDB.DataType.DateTime)
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServiceAccountSSDUpdate]", parameters);
		}

		#endregion

		#region DeliveryServiceAccountSSDView

		public static IEnumerable<DeliveryServiceAccountSSDViewResult> DeliveryServiceAccountSSDView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<DeliveryServiceAccountSSDViewResult>("[dbo].[DeliveryServiceAccountSSDView]", parameters);
		}

		public partial class DeliveryServiceAccountSSDViewResult
		{
			public DateTime? StatusSyncDate { get; set; }
		}

		#endregion

		#region DeliveryServiceAccountTokenEdit

		public static int DeliveryServiceAccountTokenEdit(this ComparerDataContext dataConnection, int? @Id, string @Token, DateTime? @TokenExpiry)
		{
			var parameters = new []
			{
				new DataParameter("@Id",          @Id,          LinqToDB.DataType.Int32),
				new DataParameter("@Token",       @Token,       LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@TokenExpiry", @TokenExpiry, LinqToDB.DataType.DateTime)
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServiceAccountTokenEdit]", parameters);
		}

		#endregion

		#region DeliveryServiceActionCreate

		public static int DeliveryServiceActionCreate(this ComparerDataContext dataConnection, int? @ServiceId, int? @ActionsTypeId, string @ObjectId, bool? @Success, string @Comments, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ServiceId", @ServiceId, LinqToDB.DataType.Int32),
				new DataParameter("@ActionsTypeId", @ActionsTypeId, LinqToDB.DataType.Int32),
				new DataParameter("@ObjectId", @ObjectId, LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@Success",  @Success,  LinqToDB.DataType.Boolean),
				new DataParameter("@Comments", @Comments, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceActionCreate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[6].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceActionView

		public static IEnumerable<DeliveryServiceActionViewResult> DeliveryServiceActionView(this ComparerDataContext dataConnection, string @ObjectId, int? @ServiceId, int? @ActionsTypeId, bool? @Success, Guid? @AuthorId)
		{
			var parameters = new []
			{
				new DataParameter("@ObjectId",      @ObjectId,      LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@ServiceId",     @ServiceId,     LinqToDB.DataType.Int32),
				new DataParameter("@ActionsTypeId", @ActionsTypeId, LinqToDB.DataType.Int32),
				new DataParameter("@Success",       @Success,       LinqToDB.DataType.Boolean),
				new DataParameter("@AuthorId",      @AuthorId,      LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<DeliveryServiceActionViewResult>("[dbo].[DeliveryServiceActionView]", parameters);
		}

		public partial class DeliveryServiceActionViewResult
		{
			public int       ServiceId     { get; set; }
			public int       ActionsTypeId { get; set; }
			public string    ObjectId      { get; set; }
			public bool      Success       { get; set; }
			public string    Comments      { get; set; }
			public Guid      AuthorId      { get; set; }
			public DateTime? CreatedDate   { get; set; }
		}

		#endregion

		#region DeliveryServiceGroupDelete

		public static int DeliveryServiceGroupDelete(this ComparerDataContext dataConnection, int? @InnerId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@InnerId",  @InnerId,  LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceGroupDelete]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceGroupEdit

		public static int DeliveryServiceGroupEdit(this ComparerDataContext dataConnection, int? @GroupId, DateTime? @ExpectedDate, bool? @DocsLoaded, bool? @IsSent, int? @StatusId, DateTime? @SentDate, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@GroupId",  @GroupId,  LinqToDB.DataType.Int32),
				new DataParameter("@ExpectedDate", @ExpectedDate, LinqToDB.DataType.Date),
				new DataParameter("@DocsLoaded", @DocsLoaded, LinqToDB.DataType.Boolean),
				new DataParameter("@IsSent",   @IsSent,   LinqToDB.DataType.Boolean),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@SentDate", @SentDate, LinqToDB.DataType.DateTime),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceGroupEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[7].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceGroupsViewV2

		public static IEnumerable<DeliveryServiceGroupsViewV2Result> DeliveryServiceGroupsViewV2(this ComparerDataContext dataConnection, int? @InnerId, string @OuterId, string @Name, DateTime? @CreatedDateFrom, DateTime? @CreatedDateTo, DateTime? @SentDateFrom, DateTime? @SentDateTo, int? @ServiceId, int? @TypeId, int? @CategoryId, bool? @DocsLoaded, string @OrderPublicNumber, string @OrderDispatchNumber, int? @StatusId)
		{
			var parameters = new []
			{
				new DataParameter("@InnerId",             @InnerId,             LinqToDB.DataType.Int32),
				new DataParameter("@OuterId",             @OuterId,             LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@Name",                @Name,                LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@CreatedDateFrom",     @CreatedDateFrom,     LinqToDB.DataType.Date),
				new DataParameter("@CreatedDateTo",       @CreatedDateTo,       LinqToDB.DataType.Date),
				new DataParameter("@SentDateFrom",        @SentDateFrom,        LinqToDB.DataType.Date),
				new DataParameter("@SentDateTo",          @SentDateTo,          LinqToDB.DataType.Date),
				new DataParameter("@ServiceId",           @ServiceId,           LinqToDB.DataType.Int32),
				new DataParameter("@TypeId",              @TypeId,              LinqToDB.DataType.Int32),
				new DataParameter("@CategoryId",          @CategoryId,          LinqToDB.DataType.Int32),
				new DataParameter("@DocsLoaded",          @DocsLoaded,          LinqToDB.DataType.Boolean),
				new DataParameter("@OrderPublicNumber",   @OrderPublicNumber,   LinqToDB.DataType.VarChar)
				{
					Size = 20
				},
				new DataParameter("@OrderDispatchNumber", @OrderDispatchNumber, LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@StatusId",            @StatusId,            LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<DeliveryServiceGroupsViewV2Result>("[dbo].[DeliveryServiceGroupsView_v2]", parameters);
		}

		public partial class DeliveryServiceGroupsViewV2Result
		{
			public int       InnerId      { get; set; }
			public string    OuterId      { get; set; }
			public string    GroupName    { get; set; }
			public string    AccountName  { get; set; }
			public DateTime  CreatedDate  { get; set; }
			public int       ServiceId    { get; set; }
			public int?      StatusId     { get; set; }
			public int?      TypeId       { get; set; }
			public int?      CategoryId   { get; set; }
			public DateTime? ExpectedDate { get; set; }
			public int?      DocsLoaded   { get; set; }
			public bool?     IsSent       { get; set; }
			public DateTime? SentDate     { get; set; }
			public string    ServiceName  { get; set; }
			public string    TypeName     { get; set; }
			public string    CategoryName { get; set; }
			public int?      OrdersCount  { get; set; }
		}

		#endregion

		#region DeliveryServiceIKNConditionCreate

		public static int DeliveryServiceIKNConditionCreate(this ComparerDataContext dataConnection, int? @IKNId, string @Name, string @Conditions, int? @OrderNum, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@IKNId",    @IKNId,    LinqToDB.DataType.Int32),
				new DataParameter("@Name",     @Name,     LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Conditions", @Conditions, LinqToDB.DataType.NVarChar)
				{
					Size = -1
				},
				new DataParameter("@OrderNum", @OrderNum, LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceIKNConditionCreate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[4].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceIKNConditionEdit

		public static int DeliveryServiceIKNConditionEdit(this ComparerDataContext dataConnection, int? @IKNId, string @Name, string @Conditions, int? @OrderNum)
		{
			var parameters = new []
			{
				new DataParameter("@IKNId",      @IKNId,      LinqToDB.DataType.Int32),
				new DataParameter("@Name",       @Name,       LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Conditions", @Conditions, LinqToDB.DataType.NVarChar)
				{
					Size = -1
				},
				new DataParameter("@OrderNum",   @OrderNum,   LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServiceIKNConditionEdit]", parameters);
		}

		#endregion

		#region DeliveryServiceIKNCreate

		public static int DeliveryServiceIKNCreate(this ComparerDataContext dataConnection, int? @AccountId, string @Name, ref int? @NewId)
		{
			var parameters = new []
			{
				new DataParameter("@AccountId", @AccountId, LinqToDB.DataType.Int32),
				new DataParameter("@Name",  @Name,  LinqToDB.DataType.NVarChar)
				{
					Size = 50
				},
				new DataParameter("@NewId", @NewId, LinqToDB.DataType.Int32)
				{
					Direction = ParameterDirection.InputOutput
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceIKNCreate]", parameters);

			@NewId = Converter.ChangeTypeTo<int?>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceIKNDelete

		public static int DeliveryServiceIKNDelete(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServiceIKNDelete]", parameters);
		}

		#endregion

		#region DeliveryServiceIKNEdit

		public static int DeliveryServiceIKNEdit(this ComparerDataContext dataConnection, int? @Id, string @Name)
		{
			var parameters = new []
			{
				new DataParameter("@Id",   @Id,   LinqToDB.DataType.Int32),
				new DataParameter("@Name", @Name, LinqToDB.DataType.NVarChar)
				{
					Size = 50
				}
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServiceIKNEdit]", parameters);
		}

		#endregion

		#region DeliveryServiceIKNRuleDelete

		public static int DeliveryServiceIKNRuleDelete(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServiceIKNRuleDelete]", parameters);
		}

		#endregion

		#region DeliveryServiceIKNRulesFullView

		public static IEnumerable<DeliveryServiceIKNRulesFullViewResult> DeliveryServiceIKNRulesFullView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<DeliveryServiceIKNRulesFullViewResult>("[dbo].[DeliveryServiceIKNRulesFullView]");
		}

		public partial class DeliveryServiceIKNRulesFullViewResult
		{
			public int    Id       { get; set; }
			public int    IknId    { get; set; }
			public string IknValue { get; set; }
			public string Name     { get; set; }
			public int    OrderNum { get; set; }
		}

		#endregion

		#region DeliveryServiceIKNRulesShortView

		public static IEnumerable<DeliveryServiceIKNRulesShortViewResult> DeliveryServiceIKNRulesShortView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<DeliveryServiceIKNRulesShortViewResult>("[dbo].[DeliveryServiceIKNRulesShortView]");
		}

		public partial class DeliveryServiceIKNRulesShortViewResult
		{
			public int    Id       { get; set; }
			public int    IknId    { get; set; }
			public string IknValue { get; set; }
			public string Name     { get; set; }
			public int    OrderNum { get; set; }
		}

		#endregion

		#region DeliveryServiceIKNsView

		public static IEnumerable<ApiDeliveryServicesIKN> DeliveryServiceIKNsView(this ComparerDataContext dataConnection, int? @AccountId, int? @ServiceId)
		{
			var parameters = new []
			{
				new DataParameter("@AccountId", @AccountId, LinqToDB.DataType.Int32),
				new DataParameter("@ServiceId", @ServiceId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<ApiDeliveryServicesIKN>("[dbo].[DeliveryServiceIKNsView]", parameters);
		}

		#endregion

		#region DeliveryServiceOrder

		public static IEnumerable<DeliveryServiceOrderResult> DeliveryServiceOrder(this ComparerDataContext dataConnection, Guid? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<DeliveryServiceOrderResult>("[dbo].[DeliveryServiceOrder]", parameters);
		}

		public partial class DeliveryServiceOrderResult
		{
			public Guid   InnerId   { get; set; }
			public string OuterId   { get; set; }
			public int    ServiceId { get; set; }
			public int    AccountId { get; set; }
			public int    IKNId     { get; set; }
		}

		#endregion

		#region DeliveryServiceOrderCompensationSave

		public static int DeliveryServiceOrderCompensationSave(this ComparerDataContext dataConnection, Guid? @InnerId, string @CompensationNumber, DateTime? @CompensationDate, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@InnerId",  @InnerId,  LinqToDB.DataType.Guid),
				new DataParameter("@CompensationNumber", @CompensationNumber, LinqToDB.DataType.NVarChar)
				{
					Size = 20
				},
				new DataParameter("@CompensationDate", @CompensationDate, LinqToDB.DataType.DateTime),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceOrderCompensationSave]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceOrderCompensationSaveV2

		public static int DeliveryServiceOrderCompensationSaveV2(this ComparerDataContext dataConnection, Guid? @InnerId, string @CompensationNumber, DateTime? @CompensationDate, double? @CompensationSum, bool? @CompensationFail, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@InnerId",  @InnerId,  LinqToDB.DataType.Guid),
				new DataParameter("@CompensationNumber", @CompensationNumber, LinqToDB.DataType.NVarChar)
				{
					Size = 20
				},
				new DataParameter("@CompensationDate", @CompensationDate, LinqToDB.DataType.DateTime),
				new DataParameter("@CompensationSum", @CompensationSum, LinqToDB.DataType.Double),
				new DataParameter("@CompensationFail", @CompensationFail, LinqToDB.DataType.Boolean),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceOrderCompensationSave_v2]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[5].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceOrderDeleteFromGroup

		public static int DeliveryServiceOrderDeleteFromGroup(this ComparerDataContext dataConnection, Guid? @InnerId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@InnerId",  @InnerId,  LinqToDB.DataType.Guid),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceOrderDeleteFromGroup]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceOrderEdit

		public static int DeliveryServiceOrderEdit(this ComparerDataContext dataConnection, Guid? @InnerId, int? @StatusId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@InnerId",  @InnerId,  LinqToDB.DataType.Guid),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceOrderEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceOrdersCntByStatus

		public static IEnumerable<DeliveryServiceOrdersCntByStatusResult> DeliveryServiceOrdersCntByStatus(this ComparerDataContext dataConnection, int? @ServiceId, DateTime? @DateFrom, DateTime? @DateTo)
		{
			var parameters = new []
			{
				new DataParameter("@ServiceId", @ServiceId, LinqToDB.DataType.Int32),
				new DataParameter("@DateFrom",  @DateFrom,  LinqToDB.DataType.DateTime),
				new DataParameter("@DateTo",    @DateTo,    LinqToDB.DataType.DateTime)
			};

			return dataConnection.QueryProc<DeliveryServiceOrdersCntByStatusResult>("[dbo].[DeliveryServiceOrdersCntByStatus]", parameters);
		}

		public partial class DeliveryServiceOrdersCntByStatusResult
		{
			public int?   StatusId { get; set; }
			public string Name     { get; set; }
			public int?   Cnt      { get; set; }
		}

		#endregion

		#region DeliveryServicePrinterConfigurationCreate

		public static int DeliveryServicePrinterConfigurationCreate(this ComparerDataContext dataConnection, string @WorkplaceName, string @A4Printer, string @LabelPrinters, ref int? @NewId)
		{
			var parameters = new []
			{
				new DataParameter("@WorkplaceName", @WorkplaceName, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@A4Printer", @A4Printer, LinqToDB.DataType.NVarChar)
				{
					Size = 500
				},
				new DataParameter("@LabelPrinters", @LabelPrinters, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@NewId", @NewId, LinqToDB.DataType.Int32)
				{
					Direction = ParameterDirection.InputOutput
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServicePrinterConfigurationCreate]", parameters);

			@NewId = Converter.ChangeTypeTo<int?>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region DeliveryServicePrinterConfigurationDelete

		public static int DeliveryServicePrinterConfigurationDelete(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServicePrinterConfigurationDelete]", parameters);
		}

		#endregion

		#region DeliveryServicePrinterConfigurationEdit

		public static int DeliveryServicePrinterConfigurationEdit(this ComparerDataContext dataConnection, int? @Id, string @WorkplaceName, string @A4Printer, string @LabelPrinters)
		{
			var parameters = new []
			{
				new DataParameter("@Id",            @Id,            LinqToDB.DataType.Int32),
				new DataParameter("@WorkplaceName", @WorkplaceName, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@A4Printer",     @A4Printer,     LinqToDB.DataType.NVarChar)
				{
					Size = 500
				},
				new DataParameter("@LabelPrinters", @LabelPrinters, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[DeliveryServicePrinterConfigurationEdit]", parameters);
		}

		#endregion

		#region DeliveryServicePrinterConfigurationsView

		public static IEnumerable<DeliveryServicePrinterConfiguration> DeliveryServicePrinterConfigurationsView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<DeliveryServicePrinterConfiguration>("[dbo].[DeliveryServicePrinterConfigurationsView]");
		}

		#endregion

		#region DeliveryServicePutOrderToQueue

		public static int DeliveryServicePutOrderToQueue(this ComparerDataContext dataConnection, Guid? @OrderId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Guid),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServicePutOrderToQueue]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceQueueOrderDelete

		public static int DeliveryServiceQueueOrderDelete(this ComparerDataContext dataConnection, Guid? @OrderId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Guid),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceQueueOrderDelete]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region DeliveryServiceQueueOrderEdit

		public static int DeliveryServiceQueueOrderEdit(this ComparerDataContext dataConnection, Guid? @OrderId, bool? @HasAttempt, string @AttemptError, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Guid),
				new DataParameter("@HasAttempt", @HasAttempt, LinqToDB.DataType.Boolean),
				new DataParameter("@AttemptError", @AttemptError, LinqToDB.DataType.VarChar)
				{
					Size = 4000
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DeliveryServiceQueueOrderEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[4].Value);

			return ret;
		}

		#endregion

		#region DeliveryServicesView

		public static IEnumerable<DeliveryServicesViewResult> DeliveryServicesView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<DeliveryServicesViewResult>("[dbo].[DeliveryServicesView]", parameters);
		}

		public partial class DeliveryServicesViewResult
		{
			public int    Id            { get; set; }
			public string Name          { get; set; }
			public bool   IsActive      { get; set; }
			public bool?  IsMarketPlace { get; set; }
		}

		#endregion

		#region DepartmentsView

		public static IEnumerable<DepartmentsViewResult> DepartmentsView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<DepartmentsViewResult>("[dbo].[DepartmentsView]", parameters);
		}

		public partial class DepartmentsViewResult
		{
			public int    Id        { get; set; }
			public string Name      { get; set; }
			public string ShortName { get; set; }
		}

		#endregion

		#region DiscountGroupDelete

		public static int DiscountGroupDelete(this ComparerDataContext dataConnection, int? @GroupId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@GroupId",  @GroupId,  LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[DiscountGroupDelete]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region DistributorApiOrdersContentEdit

		public static IEnumerable<DistributorApiOrdersContentEditResult> DistributorApiOrdersContentEdit(this ComparerDataContext dataConnection, int? @Operation, int? @OrderId, Guid? @ProductId, bool? @Done)
		{
			var parameters = new []
			{
				new DataParameter("@Operation", @Operation, LinqToDB.DataType.Int32),
				new DataParameter("@OrderId",   @OrderId,   LinqToDB.DataType.Int32),
				new DataParameter("@ProductId", @ProductId, LinqToDB.DataType.Guid),
				new DataParameter("@Done",      @Done,      LinqToDB.DataType.Boolean)
			};

			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new DistributorApiOrdersContentEditResult
				{
					Column1 = Converter.ChangeTypeTo<int>(dataReader.GetValue(0), ms),
				},
				"[dbo].[DistributorApiOrdersContentEdit]", parameters);
		}

		public partial class DistributorApiOrdersContentEditResult
		{
			[Column("")] public int Column1 { get; set; }
		}

		#endregion

		#region DistributorApiOrdersContentView

		public static IEnumerable<DistributorApiOrdersContentViewResult> DistributorApiOrdersContentView(this ComparerDataContext dataConnection, int? @OrderId, int? @ProductSku, int? @ProductOutSku, bool? @Archived)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",       @OrderId,       LinqToDB.DataType.Int32),
				new DataParameter("@ProductSku",    @ProductSku,    LinqToDB.DataType.Int32),
				new DataParameter("@ProductOutSku", @ProductOutSku, LinqToDB.DataType.Int32),
				new DataParameter("@Archived",      @Archived,      LinqToDB.DataType.Boolean)
			};

			return dataConnection.QueryProc<DistributorApiOrdersContentViewResult>("[dbo].[DistributorApiOrdersContentView]", parameters);
		}

		public partial class DistributorApiOrdersContentViewResult
		{
			public int      OrderId          { get; set; }
			public Guid     PriceListId      { get; set; }
			public Guid     ProductId        { get; set; }
			public string   OutSku           { get; set; }
			public int      Quantity         { get; set; }
			public DateTime ReportDate       { get; set; }
			public string   Comment          { get; set; }
			public string   PriceListName    { get; set; }
			public string   ProductName      { get; set; }
			public string   ProductChildName { get; set; }
			public int      SKU              { get; set; }
			public int      VIEWSTYLEID      { get; set; }
			public Guid     BrendId          { get; set; }
			public string   BrendName        { get; set; }
		}

		#endregion

		#region DistributorApiSettingsView

		public static IEnumerable<DistributorsApiSetting> DistributorApiSettingsView(this ComparerDataContext dataConnection, Guid? @DistId)
		{
			var parameters = new []
			{
				new DataParameter("@DistId", @DistId, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<DistributorsApiSetting>("[dbo].[DistributorApiSettingsView]", parameters);
		}

		#endregion

		#region DistributorNamesView

		public static IEnumerable<DistributorNamesViewResult> DistributorNamesView(this ComparerDataContext dataConnection, bool? @IsActive)
		{
			var parameters = new []
			{
				new DataParameter("@IsActive", @IsActive, LinqToDB.DataType.Boolean)
			};

			return dataConnection.QueryProc<DistributorNamesViewResult>("[dbo].[DistributorNamesView]", parameters);
		}

		public partial class DistributorNamesViewResult
		{
			public Guid   Id   { get; set; }
			public string Name { get; set; }
		}

		#endregion

		#region DistributorsShortInfo

		public static IEnumerable<DistributorsShortInfoResult> DistributorsShortInfo(this ComparerDataContext dataConnection, bool? @IsActive)
		{
			var parameters = new []
			{
				new DataParameter("@IsActive", @IsActive, LinqToDB.DataType.Boolean)
			};

			return dataConnection.QueryProc<DistributorsShortInfoResult>("[dbo].[DistributorsShortInfo]", parameters);
		}

		public partial class DistributorsShortInfoResult
		{
			public Guid   Id         { get; set; }
			public string Name       { get; set; }
			public int    NewRecords { get; set; }
		}

		#endregion

		#region DistributorsView

		public static IEnumerable<DistributorsViewResult> DistributorsView(this ComparerDataContext dataConnection, Guid? @DistId, bool? @IsActive, int? @SendRequestMode)
		{
			var parameters = new []
			{
				new DataParameter("@DistId",          @DistId,          LinqToDB.DataType.Guid),
				new DataParameter("@IsActive",        @IsActive,        LinqToDB.DataType.Boolean),
				new DataParameter("@SendRequestMode", @SendRequestMode, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<DistributorsViewResult>("[dbo].[DistributorsView]", parameters);
		}

		public partial class DistributorsViewResult
		{
			public Guid   Id          { get; set; }
			public string Name        { get; set; }
			public bool   Active      { get; set; }
			public string Email       { get; set; }
			public string Phone       { get; set; }
			public string Address     { get; set; }
			public bool?  FirstAlways { get; set; }
			public int?   DealerOrder { get; set; }
		}

		#endregion

		#region EditDistributorComment

		public static int EditDistributorComment(this ComparerDataContext dataConnection, Guid? @DistId, string @Comment)
		{
			var parameters = new []
			{
				new DataParameter("@DistId",  @DistId,  LinqToDB.DataType.Guid),
				new DataParameter("@Comment", @Comment, LinqToDB.DataType.VarChar)
				{
					Size = 255
				}
			};

			return dataConnection.ExecuteProc("[dbo].[EditDistributorComment]", parameters);
		}

		#endregion

		#region EditDistributorState

		public static int EditDistributorState(this ComparerDataContext dataConnection, Guid? @DistId, bool? @State, string @FieldName)
		{
			var parameters = new []
			{
				new DataParameter("@DistId",    @DistId,    LinqToDB.DataType.Guid),
				new DataParameter("@State",     @State,     LinqToDB.DataType.Boolean),
				new DataParameter("@FieldName", @FieldName, LinqToDB.DataType.VarChar)
				{
					Size = 30
				}
			};

			return dataConnection.ExecuteProc("[dbo].[EditDistributorState]", parameters);
		}

		#endregion

		#region ExportRefundTasksCreate

		public static int ExportRefundTasksCreate(this ComparerDataContext dataConnection, Guid? @ReceiptPublicId)
		{
			var parameters = new []
			{
				new DataParameter("@ReceiptPublicId", @ReceiptPublicId, LinqToDB.DataType.Guid)
			};

			return dataConnection.ExecuteProc("[dbo].[ExportRefundTasksCreate]", parameters);
		}

		#endregion

		#region GetDistributorsWithNewProducts

		public static IEnumerable<GetDistributorsWithNewProductsResult> GetDistributorsWithNewProducts(this ComparerDataContext dataConnection, bool? @IsActive)
		{
			var parameters = new []
			{
				new DataParameter("@IsActive", @IsActive, LinqToDB.DataType.Boolean)
			};

			return dataConnection.QueryProc<GetDistributorsWithNewProductsResult>("[dbo].[GetDistributorsWithNewProducts]", parameters);
		}

		public partial class GetDistributorsWithNewProductsResult
		{
			public Guid   Id         { get; set; }
			public string Name       { get; set; }
			public int    NewRecords { get; set; }
		}

		#endregion

		#region GetOrdersInGroup

		public static IEnumerable<GetOrdersInGroupResult> GetOrdersInGroup(this ComparerDataContext dataConnection, int? @InnerId)
		{
			var parameters = new []
			{
				new DataParameter("@InnerId", @InnerId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetOrdersInGroupResult>("[dbo].[GetOrdersInGroup]", parameters);
		}

		public partial class GetOrdersInGroupResult
		{
			public Guid   InnerId { get; set; }
			public string OuterId { get; set; }
		}

		#endregion

		#region GetReference

		public static int GetReference(this ComparerDataContext dataConnection, int? @Type)
		{
			var parameters = new []
			{
				new DataParameter("@Type", @Type, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[GetReference]", parameters);
		}

		#endregion

		#region GetUserSessionInfo

		public static IEnumerable<GetUserSessionInfoResult> GetUserSessionInfo(this ComparerDataContext dataConnection, Guid? @UserId, int? @SessionId)
		{
			var parameters = new []
			{
				new DataParameter("@UserId",    @UserId,    LinqToDB.DataType.Guid),
				new DataParameter("@SessionId", @SessionId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetUserSessionInfoResult>("[dbo].[GetUserSessionInfo]", parameters);
		}

		public partial class GetUserSessionInfoResult
		{
			public Guid      UserId      { get; set; }
			public string    UserName    { get; set; }
			public int?      SessionId   { get; set; }
			public DateTime? DateSession { get; set; }
		}

		#endregion

		#region HolidaysView

		public static IEnumerable<HolidaysViewResult> HolidaysView(this ComparerDataContext dataConnection, DateTime? @StartDate, DateTime? @EndDate)
		{
			var parameters = new []
			{
				new DataParameter("@StartDate", @StartDate, LinqToDB.DataType.Date),
				new DataParameter("@EndDate",   @EndDate,   LinqToDB.DataType.Date)
			};

			return dataConnection.QueryProc<HolidaysViewResult>("[dbo].[HolidaysView]", parameters);
		}

		public partial class HolidaysViewResult
		{
			public DateTime Date { get; set; }
		}

		#endregion

		#region ISOCodeForCountryView

		public static IEnumerable<ISOCodeForCountryViewResult> ISOCodeForCountryView(this ComparerDataContext dataConnection, string @CountryName)
		{
			var parameters = new []
			{
				new DataParameter("@CountryName", @CountryName, LinqToDB.DataType.VarChar)
				{
					Size = 100
				}
			};

			return dataConnection.QueryProc<ISOCodeForCountryViewResult>("[dbo].[ISOCodeForCountryView]", parameters);
		}

		public partial class ISOCodeForCountryViewResult
		{
			public int    Id          { get; set; }
			public string Name        { get; set; }
			public string Description { get; set; }
			public int?   CodeIso     { get; set; }
			public string Alfa2       { get; set; }
		}

		#endregion

		#region ManufacturersView

		public static IEnumerable<MANUFACTURER> ManufacturersView(this ComparerDataContext dataConnection, Guid? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<MANUFACTURER>("[dbo].[ManufacturersView]", parameters);
		}

		#endregion

		#region MpRuleOrderNumEdit

		public static IEnumerable<MpRuleOrderNumEditResult> MpRuleOrderNumEdit(this ComparerDataContext dataConnection, int? @RuleId, Guid? @SiteId, int? @ChangeType, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@RuleId",   @RuleId,   LinqToDB.DataType.Int32),
				new DataParameter("@SiteId",   @SiteId,   LinqToDB.DataType.Guid),
				new DataParameter("@ChangeType", @ChangeType, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ms = dataConnection.MappingSchema;

			var ret = dataConnection.QueryProc(dataReader =>
				new MpRuleOrderNumEditResult
				{
					Column1 = Converter.ChangeTypeTo<int?>(dataReader.GetValue(0), ms),
					Column2 = Converter.ChangeTypeTo<int?>(dataReader.GetValue(1), ms),
					Column3 = Converter.ChangeTypeTo<int?>(dataReader.GetValue(2), ms),
				},
				"[dbo].[MP_RuleOrderNumEdit]", parameters).ToList();

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[4].Value);

			return ret;
		}

		public partial class MpRuleOrderNumEditResult
		{
			[Column("")] public int? Column1 { get; set; }
			[Column("")] public int? Column2 { get; set; }
			[Column("")] public int? Column3 { get; set; }
		}

		#endregion

		#region MpRuleTypesView

		public static IEnumerable<MpRuleTypesViewResult> MpRuleTypesView(this ComparerDataContext dataConnection, string @Code, int? @ObjectTypeId)
		{
			var parameters = new []
			{
				new DataParameter("@Code",         @Code,         LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@ObjectTypeId", @ObjectTypeId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<MpRuleTypesViewResult>("[dbo].[MP_RuleTypesView]", parameters);
		}

		public partial class MpRuleTypesViewResult
		{
			public int    Id          { get; set; }
			public string Name        { get; set; }
			public string Code        { get; set; }
			public int    ObjectId    { get; set; }
			public string Description { get; set; }
			public string ObjectName  { get; set; }
		}

		#endregion

		#region ObjectsQueueMessageError

		public static int ObjectsQueueMessageError(this ComparerDataContext dataConnection, long? @Id, string @ErrorMessage)
		{
			var parameters = new []
			{
				new DataParameter("@Id",           @Id,           LinqToDB.DataType.Int64),
				new DataParameter("@ErrorMessage", @ErrorMessage, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[ObjectsQueueMessageError]", parameters);
		}

		#endregion

		#region PaymentTypesView

		public static IEnumerable<PaymentTypesViewResult> PaymentTypesView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<PaymentTypesViewResult>("[dbo].[PaymentTypesView]");
		}

		public partial class PaymentTypesViewResult
		{
			public int     ID             { get; set; }
			public string  TITLE          { get; set; }
			public string  DESCRIPTION    { get; set; }
			public string  ADAPTER        { get; set; }
			public double  PRICE          { get; set; }
			public double  PRICE_ORIGINAL { get; set; }
			public string  DISABLED       { get; set; }
			public double  MIN_ORDER_SUM  { get; set; }
			public double? Max_Order_Sum  { get; set; }
			public int     SORT_ID        { get; set; }
			public bool    IS_ACTIVE      { get; set; }
			public bool    IsDeleeted     { get; set; }
			public int     SourceID       { get; set; }
			public bool    IsOld          { get; set; }
		}

		#endregion

		#region ProductMatchSave

		public static int ProductMatchSave(this ComparerDataContext dataConnection)
		{
			return dataConnection.ExecuteProc("[dbo].[ProductMatchSave]");
		}

		#endregion

		#region QueueInMessageErrorHandled

		public static int QueueInMessageErrorHandled(this ComparerDataContext dataConnection, long? @Id, string @Error)
		{
			var parameters = new []
			{
				new DataParameter("@Id",    @Id,    LinqToDB.DataType.Int64),
				new DataParameter("@Error", @Error, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[QueueInMessageErrorHandled]", parameters);
		}

		#endregion

		#region QueueInMessageErrorHandledV2

		public static int QueueInMessageErrorHandledV2(this ComparerDataContext dataConnection, long? @Id, int? @ErrorStatus, string @Error)
		{
			var parameters = new []
			{
				new DataParameter("@Id",          @Id,          LinqToDB.DataType.Int64),
				new DataParameter("@ErrorStatus", @ErrorStatus, LinqToDB.DataType.Int32),
				new DataParameter("@Error",       @Error,       LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[QueueInMessageErrorHandled_v2]", parameters);
		}

		#endregion

		#region QueueInMessageHandled

		public static int QueueInMessageHandled(this ComparerDataContext dataConnection, long? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int64)
			};

			return dataConnection.ExecuteProc("[dbo].[QueueInMessageHandled]", parameters);
		}

		#endregion

		#region QueueInSave

		public static int QueueInSave(this ComparerDataContext dataConnection, string @PublicId, int? @ClassId, int? @TypeId, string @Sender, string @Body)
		{
			var parameters = new []
			{
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 50
				},
				new DataParameter("@ClassId",  @ClassId,  LinqToDB.DataType.Int32),
				new DataParameter("@TypeId",   @TypeId,   LinqToDB.DataType.Int32),
				new DataParameter("@Sender",   @Sender,   LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@Body",     @Body,     LinqToDB.DataType.NVarChar)
				{
					Size = -1
				}
			};

			return dataConnection.ExecuteProc("[dbo].[QueueInSave]", parameters);
		}

		#endregion

		#region QueueInView

		public static IEnumerable<QueueInViewResult> QueueInView(this ComparerDataContext dataConnection, string @PublicId, int? @Limit)
		{
			var parameters = new []
			{
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 50
				},
				new DataParameter("@Limit",    @Limit,    LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<QueueInViewResult>("[dbo].[QueueInView]", parameters);
		}

		public partial class QueueInViewResult
		{
			public long     Id          { get; set; }
			public string   PublicId    { get; set; }
			public int      ClassId     { get; set; }
			public int      TypeId      { get; set; }
			public string   Sender      { get; set; }
			public string   Body        { get; set; }
			public DateTime CreatedDate { get; set; }
			public string   Error       { get; set; }
		}

		#endregion

		#region QueueOutMessageError

		public static int QueueOutMessageError(this ComparerDataContext dataConnection, long? @Id, string @ErrorMessage)
		{
			var parameters = new []
			{
				new DataParameter("@Id",           @Id,           LinqToDB.DataType.Int64),
				new DataParameter("@ErrorMessage", @ErrorMessage, LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[QueueOutMessageError]", parameters);
		}

		#endregion

		#region QueueOutMessageHandled

		public static int QueueOutMessageHandled(this ComparerDataContext dataConnection, long? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int64)
			};

			return dataConnection.ExecuteProc("[dbo].[QueueOutMessageHandled]", parameters);
		}

		#endregion

		#region QueueOutSave

		public static int QueueOutSave(this ComparerDataContext dataConnection, int? @ClassId, string @Receivers, string @Body)
		{
			var parameters = new []
			{
				new DataParameter("@ClassId",   @ClassId,   LinqToDB.DataType.Int32),
				new DataParameter("@Receivers", @Receivers, LinqToDB.DataType.VarChar)
				{
					Size = 500
				},
				new DataParameter("@Body",      @Body,      LinqToDB.DataType.NVarChar)
				{
					Size = -1
				}
			};

			return dataConnection.ExecuteProc("[dbo].[QueueOutSave]", parameters);
		}

		#endregion

		#region QueueOutSaveV2

		public static int QueueOutSaveV2(this ComparerDataContext dataConnection, string @PublicId, int? @ClassId, string @Receivers, string @Body)
		{
			var parameters = new []
			{
				new DataParameter("@PublicId",  @PublicId,  LinqToDB.DataType.NVarChar)
				{
					Size = 50
				},
				new DataParameter("@ClassId",   @ClassId,   LinqToDB.DataType.Int32),
				new DataParameter("@Receivers", @Receivers, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Body",      @Body,      LinqToDB.DataType.NVarChar)
				{
					Size = -1
				}
			};

			return dataConnection.ExecuteProc("[dbo].[QueueOutSave_v2]", parameters);
		}

		#endregion

		#region QueueOutView

		public static IEnumerable<QueueOutViewResult> QueueOutView(this ComparerDataContext dataConnection, string @PublicId)
		{
			var parameters = new []
			{
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 50
				}
			};

			return dataConnection.QueryProc<QueueOutViewResult>("[dbo].[QueueOutView]", parameters);
		}

		public partial class QueueOutViewResult
		{
			public long     Id          { get; set; }
			public string   PublicId    { get; set; }
			public int      ClassId     { get; set; }
			public string   Receivers   { get; set; }
			public string   Body        { get; set; }
			public DateTime CreatedDate { get; set; }
			public string   Error       { get; set; }
			public int      ErrorStatus { get; set; }
		}

		#endregion

		#region QueueOutViewV2

		public static IEnumerable<QueueOutViewV2Result> QueueOutViewV2(this ComparerDataContext dataConnection, string @PublicId, string @Receiver, int? @Limit)
		{
			var parameters = new []
			{
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 50
				},
				new DataParameter("@Receiver", @Receiver, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Limit",    @Limit,    LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<QueueOutViewV2Result>("[dbo].[QueueOutView_v2]", parameters);
		}

		public partial class QueueOutViewV2Result
		{
			public long     Id          { get; set; }
			public string   PublicId    { get; set; }
			public int      ClassId     { get; set; }
			public string   Receivers   { get; set; }
			public string   Body        { get; set; }
			public DateTime CreatedDate { get; set; }
			public string   Error       { get; set; }
		}

		#endregion

		#region RemoveUserKit

		public static int RemoveUserKit(this ComparerDataContext dataConnection, int? @kitId, Guid? @userId)
		{
			var parameters = new []
			{
				new DataParameter("@kitId",  @kitId,  LinqToDB.DataType.Int32),
				new DataParameter("@userId", @userId, LinqToDB.DataType.Guid)
			};

			return dataConnection.ExecuteProc("[dbo].[RemoveUserKit]", parameters);
		}

		#endregion

		#region RolesView

		public static IEnumerable<RolesViewResult> RolesView(this ComparerDataContext dataConnection, int? @Id, int? @DepartmentId)
		{
			var parameters = new []
			{
				new DataParameter("@Id",           @Id,           LinqToDB.DataType.Int32),
				new DataParameter("@DepartmentId", @DepartmentId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<RolesViewResult>("[dbo].[RolesView]", parameters);
		}

		public partial class RolesViewResult
		{
			public int    Id                  { get; set; }
			public string Name                { get; set; }
			public int    DepartmentId        { get; set; }
			public int?   TypeId              { get; set; }
			public string DefaultAccessGroups { get; set; }
		}

		#endregion

		#region RozlivUtDocumentView

		public static IEnumerable<RozlivUtDocument> RozlivUtDocumentView(this ComparerDataContext dataConnection, int? @DocId)
		{
			var parameters = new []
			{
				new DataParameter("@DocId", @DocId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<RozlivUtDocument>("[dbo].[RozlivUtDocumentView]", parameters);
		}

		#endregion

		#region SmsSiteStatusTemplateView

		public static IEnumerable<SmsSiteStatusTemplateViewResult> SmsSiteStatusTemplateView(this ComparerDataContext dataConnection, Guid? @SiteId, byte? @StatusId)
		{
			var parameters = new []
			{
				new DataParameter("@SiteId",   @SiteId,   LinqToDB.DataType.Guid),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Byte)
			};

			return dataConnection.QueryProc<SmsSiteStatusTemplateViewResult>("[dbo].[SmsSiteStatusTemplateView]", parameters);
		}

		public partial class SmsSiteStatusTemplateViewResult
		{
			public string SmsTemplate { get; set; }
		}

		#endregion

		#region StoredBarcodesView

		public static IEnumerable<StoredBarcodesViewResult> StoredBarcodesView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<StoredBarcodesViewResult>("[dbo].[StoredBarcodesView]");
		}

		public partial class StoredBarcodesViewResult
		{
			public int    SKU     { get; set; }
			public string Barcode { get; set; }
		}

		#endregion

		#region SUZOrderClose

		public static int SUZOrderClose(this ComparerDataContext dataConnection, int? @OrderId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[SUZOrderClose]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region SUZOrderForLabelPrintView

		public static IEnumerable<SUZOrderForLabelPrintViewResult> SUZOrderForLabelPrintView(this ComparerDataContext dataConnection, string @GTIN, Guid? @ProductId, int? @Sku)
		{
			var parameters = new []
			{
				new DataParameter("@GTIN",      @GTIN,      LinqToDB.DataType.NVarChar)
				{
					Size = 14
				},
				new DataParameter("@ProductId", @ProductId, LinqToDB.DataType.Guid),
				new DataParameter("@Sku",       @Sku,       LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SUZOrderForLabelPrintViewResult>("[dbo].[SUZOrderForLabelPrintView]", parameters);
		}

		public partial class SUZOrderForLabelPrintViewResult
		{
			public int      Id          { get; set; }
			public string   PublicId    { get; set; }
			public bool     IsActive    { get; set; }
			public int      StatusId    { get; set; }
			public DateTime CreatedDate { get; set; }
			public int      ItemId      { get; set; }
			public string   GTIN        { get; set; }
			public int      Quantity    { get; set; }
			public int?     Rest        { get; set; }
		}

		#endregion

		#region SUZOrderForLabelPrintViewV2

		public static IEnumerable<SUZOrderForLabelPrintViewV2Result> SUZOrderForLabelPrintViewV2(this ComparerDataContext dataConnection, string @GTIN, Guid? @ProductId, int? @Sku)
		{
			var parameters = new []
			{
				new DataParameter("@GTIN",      @GTIN,      LinqToDB.DataType.NVarChar)
				{
					Size = 14
				},
				new DataParameter("@ProductId", @ProductId, LinqToDB.DataType.Guid),
				new DataParameter("@Sku",       @Sku,       LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SUZOrderForLabelPrintViewV2Result>("[dbo].[SUZOrderForLabelPrintView_v2]", parameters);
		}

		public partial class SUZOrderForLabelPrintViewV2Result
		{
			public int      Id          { get; set; }
			public string   PublicId    { get; set; }
			public bool     IsActive    { get; set; }
			public int      StatusId    { get; set; }
			public DateTime CreatedDate { get; set; }
			public int      ItemId      { get; set; }
			public string   GTIN        { get; set; }
			public int      Quantity    { get; set; }
			public int      Rest        { get; set; }
		}

		#endregion

		#region SUZOrdersForCloseView

		public static IEnumerable<SUZOrdersForCloseViewResult> SUZOrdersForCloseView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<SUZOrdersForCloseViewResult>("[dbo].[SUZOrdersForCloseView]");
		}

		public partial class SUZOrdersForCloseViewResult
		{
			public int       Id           { get; set; }
			public string    PublicId     { get; set; }
			public bool      IsActive     { get; set; }
			public int       StatusId     { get; set; }
			public DateTime? ClosedDate   { get; set; }
			public DateTime  CreatedDate  { get; set; }
			public int       SourceId     { get; set; }
			public bool      MustBeClosed { get; set; }
			public string    Error        { get; set; }
		}

		#endregion

		#region SUZOrderStatusUpdate

		public static int SUZOrderStatusUpdate(this ComparerDataContext dataConnection, int? @Id, string @PublicId, int? @StatusId, string @Error, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 64
				},
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[SUZOrderStatusUpdate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[5].Value);

			return ret;
		}

		#endregion

		#region SUZOrdersView

		public static IEnumerable<SUZOrdersViewResult> SUZOrdersView(this ComparerDataContext dataConnection, int? @Id, string @PublicId, string @GTIN, bool? @IsActive, int? @StatusId)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@GTIN",     @GTIN,     LinqToDB.DataType.NVarChar)
				{
					Size = 14
				},
				new DataParameter("@IsActive", @IsActive, LinqToDB.DataType.Boolean),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SUZOrdersViewResult>("[dbo].[SUZOrdersView]", parameters);
		}

		public partial class SUZOrdersViewResult
		{
			public int       Id          { get; set; }
			public string    PublicId    { get; set; }
			public bool      IsActive    { get; set; }
			public int       StatusId    { get; set; }
			public DateTime? ClosedDate  { get; set; }
			public DateTime  CreatedDate { get; set; }
		}

		#endregion

		#region SUZOrdersViewV2

		public static IEnumerable<SUZOrdersViewV2Result> SUZOrdersViewV2(this ComparerDataContext dataConnection, int? @Id, string @PublicId, string @GTIN, bool? @IsActive, int? @StatusId, int? @Sku)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@GTIN",     @GTIN,     LinqToDB.DataType.NVarChar)
				{
					Size = 14
				},
				new DataParameter("@IsActive", @IsActive, LinqToDB.DataType.Boolean),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@Sku",      @Sku,      LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SUZOrdersViewV2Result>("[dbo].[SUZOrdersView_v2]", parameters);
		}

		public partial class SUZOrdersViewV2Result
		{
			public int       Id           { get; set; }
			public string    PublicId     { get; set; }
			public bool      IsActive     { get; set; }
			public int       StatusId     { get; set; }
			public int       SourceId     { get; set; }
			public DateTime? ClosedDate   { get; set; }
			public DateTime  CreatedDate  { get; set; }
			public bool      MustBeClosed { get; set; }
			public string    Error        { get; set; }
		}

		#endregion

		#region SUZOrderView

		public static IEnumerable<SUZOrderViewResult> SUZOrderView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SUZOrderViewResult>("[dbo].[SUZOrderView]", parameters);
		}

		public partial class SUZOrderViewResult
		{
			public int       Id          { get; set; }
			public string    PublicId    { get; set; }
			public bool      IsActive    { get; set; }
			public int       StatusId    { get; set; }
			public DateTime? ClosedDate  { get; set; }
			public DateTime  CreatedDate { get; set; }
		}

		#endregion

		#region SUZPurchaseTaskClose

		public static int SUZPurchaseTaskClose(this ComparerDataContext dataConnection, int? @TaskId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@TaskId",   @TaskId,   LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[SUZPurchaseTaskClose]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region SUZPurchaseTaskOrderNumChange

		public static int SUZPurchaseTaskOrderNumChange(this ComparerDataContext dataConnection, int? @TaskId, int? @NewOrderNum, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@TaskId",   @TaskId,   LinqToDB.DataType.Int32),
				new DataParameter("@NewOrderNum", @NewOrderNum, LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[SUZPurchaseTaskOrderNumChange]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region SUZPurchaseTaskOrdersView

		public static IEnumerable<SUZPurchaseTaskOrdersViewResult> SUZPurchaseTaskOrdersView(this ComparerDataContext dataConnection, int? @TaskId, int? @OrderId)
		{
			var parameters = new []
			{
				new DataParameter("@TaskId",  @TaskId,  LinqToDB.DataType.Int32),
				new DataParameter("@OrderId", @OrderId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SUZPurchaseTaskOrdersViewResult>("[dbo].[SUZPurchaseTaskOrdersView]", parameters);
		}

		public partial class SUZPurchaseTaskOrdersViewResult
		{
			public int      TaskId           { get; set; }
			public DateTime TaskExpectedDate { get; set; }
			public int      OrderId          { get; set; }
			public bool     OrderIsActive    { get; set; }
			public int      OrderStatusId    { get; set; }
		}

		#endregion

		#region SyncBrandView

		public static IEnumerable<SyncBrandViewResult> SyncBrandView(this ComparerDataContext dataConnection, Guid? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<SyncBrandViewResult>("[dbo].[SyncBrandView]", parameters);
		}

		public partial class SyncBrandViewResult
		{
			public Guid   Id       { get; set; }
			public bool   IsActive { get; set; }
			public string Name     { get; set; }
		}

		#endregion

		#region SyncObjectsQueueDelete

		public static int SyncObjectsQueueDelete(this ComparerDataContext dataConnection, long? @QueueId)
		{
			var parameters = new []
			{
				new DataParameter("@QueueId", @QueueId, LinqToDB.DataType.Int64)
			};

			return dataConnection.ExecuteProc("[dbo].[SyncObjectsQueueDelete]", parameters);
		}

		#endregion

		#region SyncObjectsQueueSave

		public static int SyncObjectsQueueSave(this ComparerDataContext dataConnection, int? @ClassId, string @ObjectId, int? @Method)
		{
			var parameters = new []
			{
				new DataParameter("@ClassId",  @ClassId,  LinqToDB.DataType.Int32),
				new DataParameter("@ObjectId", @ObjectId, LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@Method",   @Method,   LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[SyncObjectsQueueSave]", parameters);
		}

		#endregion

		#region SyncObjectsQueueSaveV2

		public static int SyncObjectsQueueSaveV2(this ComparerDataContext dataConnection, int? @ClassId, string @ObjectId, int? @Method, string @Data)
		{
			var parameters = new []
			{
				new DataParameter("@ClassId",  @ClassId,  LinqToDB.DataType.Int32),
				new DataParameter("@ObjectId", @ObjectId, LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@Method",   @Method,   LinqToDB.DataType.Int32),
				new DataParameter("@Data",     @Data,     LinqToDB.DataType.NVarChar)
				{
					Size = -1
				}
			};

			return dataConnection.ExecuteProc("[dbo].[SyncObjectsQueueSave_v2]", parameters);
		}

		#endregion

		#region SyncObjectsQueueView

		public static IEnumerable<SyncObjectsQueueViewResult> SyncObjectsQueueView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<SyncObjectsQueueViewResult>("[dbo].[SyncObjectsQueueView]");
		}

		public partial class SyncObjectsQueueViewResult
		{
			public long   QueueId  { get; set; }
			public int    ClassId  { get; set; }
			public string ObjectId { get; set; }
			public int    Method   { get; set; }
		}

		#endregion

		#region SyncObjectsQueueViewV2

		public static IEnumerable<SyncObjectsQueueViewV2Result> SyncObjectsQueueViewV2(this ComparerDataContext dataConnection, int? @Limit)
		{
			var parameters = new []
			{
				new DataParameter("@Limit", @Limit, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SyncObjectsQueueViewV2Result>("[dbo].[SyncObjectsQueueView_v2]", parameters);
		}

		public partial class SyncObjectsQueueViewV2Result
		{
			public long     Id          { get; set; }
			public int      ClassId     { get; set; }
			public string   ObjectId    { get; set; }
			public int      Method      { get; set; }
			public DateTime CreatedDate { get; set; }
			public string   Data        { get; set; }
		}

		#endregion

		#region SyncProductView

		public static IEnumerable<SyncProductViewResult> SyncProductView(this ComparerDataContext dataConnection, Guid? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<SyncProductViewResult>("[dbo].[SyncProductView]", parameters);
		}

		public partial class SyncProductViewResult
		{
			public Guid     Id          { get; set; }
			public int      Sku         { get; set; }
			public string   Name        { get; set; }
			public string   ChildName   { get; set; }
			public bool     IsActive    { get; set; }
			public Guid     BrandId     { get; set; }
			public string   BrandName   { get; set; }
			public DateTime ChangedDate { get; set; }
			public int      InStock     { get; set; }
		}

		#endregion

		#region SyncProtocolCellView

		public static IEnumerable<SyncProtocolCellViewResult> SyncProtocolCellView(this ComparerDataContext dataConnection, long? @Id, string @CellName)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@CellName", @CellName, LinqToDB.DataType.NVarChar)
				{
					Size = 50
				}
			};

			return dataConnection.QueryProc<SyncProtocolCellViewResult>("[dbo].[SyncProtocolCellView]", parameters);
		}

		public partial class SyncProtocolCellViewResult
		{
			public string CellValue { get; set; }
		}

		#endregion

		#region SyncProtocolDelete

		public static int SyncProtocolDelete(this ComparerDataContext dataConnection, long? @Id, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[SyncProtocolDelete]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region SyncProtocolRead

		public static int SyncProtocolRead(this ComparerDataContext dataConnection, Guid? @SiteId, string @ApiPoint, int? @ObjectType, string @ObjectId, int? @Method, string @Content, string @ResponseAnswer, int? @ResponseCode, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@SiteId",   @SiteId,   LinqToDB.DataType.Guid),
				new DataParameter("@ApiPoint", @ApiPoint, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@ObjectType", @ObjectType, LinqToDB.DataType.Int32),
				new DataParameter("@ObjectId", @ObjectId, LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@Method",   @Method,   LinqToDB.DataType.Int32),
				new DataParameter("@Content",  @Content,  LinqToDB.DataType.Text)
				{
					Size = 2147483647
				},
				new DataParameter("@ResponseAnswer", @ResponseAnswer, LinqToDB.DataType.Text)
				{
					Size = 2147483647
				},
				new DataParameter("@ResponseCode", @ResponseCode, LinqToDB.DataType.Int32),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[SyncProtocolRead]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[9].Value);

			return ret;
		}

		#endregion

		#region SyncProtocolTryCountInc

		public static int SyncProtocolTryCountInc(this ComparerDataContext dataConnection, long? @Id, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[SyncProtocolTryCountInc]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region TaskSchedulerDone

		public static int TaskSchedulerDone(this ComparerDataContext dataConnection, int? @ID)
		{
			var parameters = new []
			{
				new DataParameter("@ID", @ID, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[TaskSchedulerDone]", parameters);
		}

		#endregion

		#region TaskSchedulerToRun

		public static IEnumerable<TaskSchedulerToRunResult> TaskSchedulerToRun(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<TaskSchedulerToRunResult>("[dbo].[TaskSchedulerToRun]");
		}

		public partial class TaskSchedulerToRunResult
		{
			public int      ID         { get; set; }
			public DateTime RunTime    { get; set; }
			public string   Path       { get; set; }
			public string   Commentary { get; set; }
			public int      Done       { get; set; }
			public string   Action     { get; set; }
			public string   Params     { get; set; }
			public int      TaskType   { get; set; }
			public int      Counter    { get; set; }
		}

		#endregion

		#region TaskSchedulerView

		public static IEnumerable<TaskSchedulerViewResult> TaskSchedulerView(this ComparerDataContext dataConnection, int? @ID)
		{
			var parameters = new []
			{
				new DataParameter("@ID", @ID, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<TaskSchedulerViewResult>("[dbo].[TaskSchedulerView]", parameters);
		}

		public partial class TaskSchedulerViewResult
		{
			public int      ID         { get; set; }
			public DateTime RunTime    { get; set; }
			public string   Path       { get; set; }
			public string   Commentary { get; set; }
			public int      Done       { get; set; }
			public string   Action     { get; set; }
			public string   Params     { get; set; }
			public int      TaskType   { get; set; }
			public int      Counter    { get; set; }
		}

		#endregion

		#region TemplateEdit

		public static int TemplateEdit(this ComparerDataContext dataConnection, int? @mode, int? @Id, int? @TypeId, string @Name, string @Theme, string @Body, Guid? @AuthorId, ref int? @newId)
		{
			var parameters = new []
			{
				new DataParameter("@mode",  @mode,  LinqToDB.DataType.Int32),
				new DataParameter("@Id",    @Id,    LinqToDB.DataType.Int32),
				new DataParameter("@TypeId", @TypeId, LinqToDB.DataType.Int32),
				new DataParameter("@Name",  @Name,  LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Theme", @Theme, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@Body",  @Body,  LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@newId", @newId, LinqToDB.DataType.Int32)
				{
					Direction = ParameterDirection.InputOutput
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[TemplateEdit]", parameters);

			@newId = Converter.ChangeTypeTo<int?>(parameters[7].Value);

			return ret;
		}

		#endregion

		#region TemplatesView

		public static IEnumerable<TemplatesViewResult> TemplatesView(this ComparerDataContext dataConnection, int? @TypeId)
		{
			var parameters = new []
			{
				new DataParameter("@TypeId", @TypeId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<TemplatesViewResult>("[dbo].[TemplatesView]", parameters);
		}

		public partial class TemplatesViewResult
		{
			public int      Id            { get; set; }
			public int      TypeId        { get; set; }
			public string   Theme         { get; set; }
			public string   Name          { get; set; }
			public string   Body          { get; set; }
			public DateTime OperationDate { get; set; }
			public Guid     AuthorId      { get; set; }
			public string   AuthorName    { get; set; }
		}

		#endregion

		#region TemplateTextView

		public static IEnumerable<TemplateTextViewResult> TemplateTextView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<TemplateTextViewResult>("[dbo].[TemplateTextView]", parameters);
		}

		public partial class TemplateTextViewResult
		{
			public string Theme { get; set; }
			public string Body  { get; set; }
		}

		#endregion

		#region TemplateTypesView

		public static IEnumerable<TemplateTypesViewResult> TemplateTypesView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<TemplateTypesViewResult>("[dbo].[TemplateTypesView]");
		}

		public partial class TemplateTypesViewResult
		{
			public int    Id   { get; set; }
			public string Name { get; set; }
		}

		#endregion

		#region TemplateView

		public static IEnumerable<TemplateViewResult> TemplateView(this ComparerDataContext dataConnection, int? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<TemplateViewResult>("[dbo].[TemplateView]", parameters);
		}

		public partial class TemplateViewResult
		{
			public int      Id            { get; set; }
			public int      TypeId        { get; set; }
			public string   Theme         { get; set; }
			public string   Name          { get; set; }
			public string   Body          { get; set; }
			public DateTime OperationDate { get; set; }
			public Guid     AuthorId      { get; set; }
			public string   AuthorName    { get; set; }
		}

		#endregion

		#region TrackerProcessEdit

		public static int TrackerProcessEdit(this ComparerDataContext dataConnection, int? @AccountId, int? @StateId, DateTime? @StartTrackingDate, string @Errors, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@AccountId", @AccountId, LinqToDB.DataType.Int32),
				new DataParameter("@StateId",  @StateId,  LinqToDB.DataType.Int32),
				new DataParameter("@StartTrackingDate", @StartTrackingDate, LinqToDB.DataType.DateTime),
				new DataParameter("@Errors",   @Errors,   LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[TrackerProcessEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[4].Value);

			return ret;
		}

		#endregion

		#region TrackerProcessesView

		public static IEnumerable<ApiDeliveryServiceTracker> TrackerProcessesView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<ApiDeliveryServiceTracker>("[dbo].[TrackerProcessesView]");
		}

		#endregion

		#region UpdateOrderLabelInfo

		public static int UpdateOrderLabelInfo(this ComparerDataContext dataConnection, Guid? @OrderId, string @LabelId)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId", @OrderId, LinqToDB.DataType.Guid),
				new DataParameter("@LabelId", @LabelId, LinqToDB.DataType.NVarChar)
				{
					Size = 100
				}
			};

			return dataConnection.ExecuteProc("[dbo].[UpdateOrderLabelInfo]", parameters);
		}

		#endregion

		#region UserActionStatistic

		public static IEnumerable<UserActionStatisticResult> UserActionStatistic(this ComparerDataContext dataConnection, int? @ObjType, DateTime? @dBegin, DateTime? @dEnd)
		{
			var parameters = new []
			{
				new DataParameter("@ObjType", @ObjType, LinqToDB.DataType.Int32),
				new DataParameter("@dBegin",  @dBegin,  LinqToDB.DataType.DateTime),
				new DataParameter("@dEnd",    @dEnd,    LinqToDB.DataType.DateTime)
			};

			return dataConnection.QueryProc<UserActionStatisticResult>("[dbo].[UserActionStatistic]", parameters);
		}

		public partial class UserActionStatisticResult
		{
			public string    NAME        { get; set; }
			public DateTime? CREATEDDATE { get; set; }
			public int       OBJECTTYPE  { get; set; }
			public int       ACTIONTYPE  { get; set; }
			public int?      Quantity    { get; set; }
		}

		#endregion

		#region UserActivityBatchItemsView

		public static IEnumerable<ActivityBatchItem> UserActivityBatchItemsView(this ComparerDataContext dataConnection, long? @BatchId)
		{
			var parameters = new []
			{
				new DataParameter("@BatchId", @BatchId, LinqToDB.DataType.Int64)
			};

			return dataConnection.QueryProc<ActivityBatchItem>("[dbo].[UserActivityBatchItemsView]", parameters);
		}

		#endregion

		#region UserAuth

		public static IEnumerable<UserAuthResult> UserAuth(this ComparerDataContext dataConnection, string @Login, string @Password)
		{
			var parameters = new []
			{
				new DataParameter("@Login",    @Login,    LinqToDB.DataType.VarChar)
				{
					Size = 64
				},
				new DataParameter("@Password", @Password, LinqToDB.DataType.VarChar)
				{
					Size = 255
				}
			};

			return dataConnection.QueryProc<UserAuthResult>("[dbo].[UserAuth]", parameters);
		}

		public partial class UserAuthResult
		{
			public Guid   ID             { get; set; }
			public string NAME           { get; set; }
			public byte?  USERSGROUP     { get; set; }
			public string Email          { get; set; }
			public int?   DepartmentId   { get; set; }
			public string DepartmentName { get; set; }
			public int?   RoleId         { get; set; }
			public string RoleName       { get; set; }
			public bool?  IsLeader       { get; set; }
		}

		#endregion

		#region UserAuthView

		public static IEnumerable<UserAuthViewResult> UserAuthView(this ComparerDataContext dataConnection, string @Login, string @Password, ref int? @AuthStatus)
		{
			var parameters = new []
			{
				new DataParameter("@Login",      @Login,      LinqToDB.DataType.NVarChar)
				{
					Size = 50
				},
				new DataParameter("@Password",   @Password,   LinqToDB.DataType.NVarChar)
				{
					Size = 1000
				},
				new DataParameter("@AuthStatus", @AuthStatus, LinqToDB.DataType.Int32)
				{
					Direction = ParameterDirection.InputOutput
				}
			};

			var ret = dataConnection.QueryProc<UserAuthViewResult>("[dbo].[UserAuthView]", parameters).ToList();

			@AuthStatus = Converter.ChangeTypeTo<int?>(parameters[2].Value);

			return ret;
		}

		public partial class UserAuthViewResult
		{
			public Guid? UserId { get; set; }
		}

		#endregion

		#region UserBoundEdit

		public static int UserBoundEdit(this ComparerDataContext dataConnection, Guid? @UserId, Guid? @ParentId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@UserId",   @UserId,   LinqToDB.DataType.Guid),
				new DataParameter("@ParentId", @ParentId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UserBoundEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region UserByIdView

		public static IEnumerable<UserByIdViewResult> UserByIdView(this ComparerDataContext dataConnection, Guid? @Id)
		{
			var parameters = new []
			{
				new DataParameter("@Id", @Id, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<UserByIdViewResult>("[dbo].[UserByIdView]", parameters);
		}

		public partial class UserByIdViewResult
		{
			public Guid   ID             { get; set; }
			public string NAME           { get; set; }
			public byte?  USERSGROUP     { get; set; }
			public string FirstName      { get; set; }
			public string Patronymic     { get; set; }
			public string LastName       { get; set; }
			public string Email          { get; set; }
			public string Status         { get; set; }
			public string StatusName     { get; set; }
			public int?   DepartmentId   { get; set; }
			public int?   RoleId         { get; set; }
			public string DepartmentName { get; set; }
			public string RoleName       { get; set; }
		}

		#endregion

		#region UserPasswordsEdit

		public static int UserPasswordsEdit(this ComparerDataContext dataConnection, Guid? @UserId, string @HashedPassword, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@UserId",   @UserId,   LinqToDB.DataType.Guid),
				new DataParameter("@HashedPassword", @HashedPassword, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UserPasswordsEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region UsersBoundsKCView

		public static IEnumerable<UsersBoundsKCViewResult> UsersBoundsKCView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<UsersBoundsKCViewResult>("[dbo].[UsersBoundsKCView]");
		}

		public partial class UsersBoundsKCViewResult
		{
			public Guid   SupervisorId  { get; set; }
			public string SupervisorFIO { get; set; }
			public Guid   UserId        { get; set; }
		}

		#endregion

		#region UsersBoundsView

		public static IEnumerable<UsersBoundsViewResult> UsersBoundsView(this ComparerDataContext dataConnection, int? @DepartmentId)
		{
			var parameters = new []
			{
				new DataParameter("@DepartmentId", @DepartmentId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<UsersBoundsViewResult>("[dbo].[UsersBoundsView]", parameters);
		}

		public partial class UsersBoundsViewResult
		{
			public Guid   UserId   { get; set; }
			public string Name     { get; set; }
			public string FIO      { get; set; }
			public string Role     { get; set; }
			public int?   TypeId   { get; set; }
			public Guid?  ParentId { get; set; }
		}

		#endregion

		#region UserSessionClear

		public static int UserSessionClear(this ComparerDataContext dataConnection, Guid? @UserId, int? @SessionId)
		{
			var parameters = new []
			{
				new DataParameter("@UserId",    @UserId,    LinqToDB.DataType.Guid),
				new DataParameter("@SessionId", @SessionId, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[UserSessionClear]", parameters);
		}

		#endregion

		#region UserSessionSave

		public static int UserSessionSave(this ComparerDataContext dataConnection, Guid? @UserId, int? @SessionId)
		{
			var parameters = new []
			{
				new DataParameter("@UserId",    @UserId,    LinqToDB.DataType.Guid),
				new DataParameter("@SessionId", @SessionId, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[UserSessionSave]", parameters);
		}

		#endregion

		#region UsersPlanReportParamsEdit

		public static int UsersPlanReportParamsEdit(this ComparerDataContext dataConnection, int? @CallCount, int? @CallServicePercent, int? @CallPercent, int? @Confirmed, int? @CancellPercent, int? @TaskPercent, int? @AwardPrice, int? @BonusPercent, int? @CallAnswerTime, DateTime? @Date)
		{
			var parameters = new []
			{
				new DataParameter("@CallCount",          @CallCount,          LinqToDB.DataType.Int32),
				new DataParameter("@CallServicePercent", @CallServicePercent, LinqToDB.DataType.Int32),
				new DataParameter("@CallPercent",        @CallPercent,        LinqToDB.DataType.Int32),
				new DataParameter("@Confirmed",          @Confirmed,          LinqToDB.DataType.Int32),
				new DataParameter("@CancellPercent",     @CancellPercent,     LinqToDB.DataType.Int32),
				new DataParameter("@TaskPercent",        @TaskPercent,        LinqToDB.DataType.Int32),
				new DataParameter("@AwardPrice",         @AwardPrice,         LinqToDB.DataType.Int32),
				new DataParameter("@BonusPercent",       @BonusPercent,       LinqToDB.DataType.Int32),
				new DataParameter("@CallAnswerTime",     @CallAnswerTime,     LinqToDB.DataType.Int32),
				new DataParameter("@Date",               @Date,               LinqToDB.DataType.Date)
			};

			return dataConnection.ExecuteProc("[dbo].[UsersPlanReportParamsEdit]", parameters);
		}

		#endregion

		#region UsersPlanReportParamsView

		public static IEnumerable<UsersPlanReportParamsViewResult> UsersPlanReportParamsView(this ComparerDataContext dataConnection, DateTime? @Date)
		{
			var parameters = new []
			{
				new DataParameter("@Date", @Date, LinqToDB.DataType.Date)
			};

			return dataConnection.QueryProc<UsersPlanReportParamsViewResult>("[dbo].[UsersPlanReportParamsView]", parameters);
		}

		public partial class UsersPlanReportParamsViewResult
		{
			public int? CallCount          { get; set; }
			public int? CallServicePercent { get; set; }
			public int? CallPercent        { get; set; }
			public int? Confirmed          { get; set; }
			public int? CancellPercent     { get; set; }
			public int? TaskPercent        { get; set; }
			public int? AwardPrice         { get; set; }
			public int? BonusPercent       { get; set; }
			public int? CallAnswerTime     { get; set; }
		}

		#endregion

		#region UserStatusesView

		public static IEnumerable<UserStatusesViewResult> UserStatusesView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<UserStatusesViewResult>("[dbo].[UserStatusesView]");
		}

		public partial class UserStatusesViewResult
		{
			public int    Id   { get; set; }
			public string Name { get; set; }
		}

		#endregion

		#region UsersViewV2

		public static IEnumerable<UsersViewV2Result> UsersViewV2(this ComparerDataContext dataConnection, byte? @Group, int? @Status, string @Name, string @Email)
		{
			var parameters = new []
			{
				new DataParameter("@Group",  @Group,  LinqToDB.DataType.Byte),
				new DataParameter("@Status", @Status, LinqToDB.DataType.Int32),
				new DataParameter("@Name",   @Name,   LinqToDB.DataType.VarChar)
				{
					Size = 255
				},
				new DataParameter("@Email",  @Email,  LinqToDB.DataType.VarChar)
				{
					Size = 255
				}
			};

			return dataConnection.QueryProc<UsersViewV2Result>("[dbo].[UsersView_v2]", parameters);
		}

		public partial class UsersViewV2Result
		{
			public Guid   ID         { get; set; }
			public string NAME       { get; set; }
			public string FIO        { get; set; }
			public byte?  USERSGROUP { get; set; }
			public string Email      { get; set; }
			public string Status     { get; set; }
			public string StatusName { get; set; }
		}

		#endregion

		#region UsersViewV3

		public static IEnumerable<UsersViewV3Result> UsersViewV3(this ComparerDataContext dataConnection, byte? @Group, int? @Status, string @Name, string @Email, int? @DepartmentId, int? @RoleId)
		{
			var parameters = new []
			{
				new DataParameter("@Group",        @Group,        LinqToDB.DataType.Byte),
				new DataParameter("@Status",       @Status,       LinqToDB.DataType.Int32),
				new DataParameter("@Name",         @Name,         LinqToDB.DataType.VarChar)
				{
					Size = 255
				},
				new DataParameter("@Email",        @Email,        LinqToDB.DataType.VarChar)
				{
					Size = 255
				},
				new DataParameter("@DepartmentId", @DepartmentId, LinqToDB.DataType.Int32),
				new DataParameter("@RoleId",       @RoleId,       LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<UsersViewV3Result>("[dbo].[UsersView_v3]", parameters);
		}

		public partial class UsersViewV3Result
		{
			public Guid   ID             { get; set; }
			public string NAME           { get; set; }
			public string FIO            { get; set; }
			public byte?  USERSGROUP     { get; set; }
			public string Email          { get; set; }
			public string Status         { get; set; }
			public string StatusName     { get; set; }
			public int?   DepartmentId   { get; set; }
			public int?   RoleId         { get; set; }
			public string DepartmentName { get; set; }
			public string RoleName       { get; set; }
		}

		#endregion

		#region UsersViewV4

		public static IEnumerable<UsersViewV4Result> UsersViewV4(this ComparerDataContext dataConnection, byte? @Group, int? @Status, string @Name, string @Email, int? @DepartmentId, int? @RoleId, string @FIO)
		{
			var parameters = new []
			{
				new DataParameter("@Group",        @Group,        LinqToDB.DataType.Byte),
				new DataParameter("@Status",       @Status,       LinqToDB.DataType.Int32),
				new DataParameter("@Name",         @Name,         LinqToDB.DataType.VarChar)
				{
					Size = 255
				},
				new DataParameter("@Email",        @Email,        LinqToDB.DataType.VarChar)
				{
					Size = 255
				},
				new DataParameter("@DepartmentId", @DepartmentId, LinqToDB.DataType.Int32),
				new DataParameter("@RoleId",       @RoleId,       LinqToDB.DataType.Int32),
				new DataParameter("@FIO",          @FIO,          LinqToDB.DataType.VarChar)
				{
					Size = 255
				}
			};

			return dataConnection.QueryProc<UsersViewV4Result>("[dbo].[UsersView_v4]", parameters);
		}

		public partial class UsersViewV4Result
		{
			public Guid   ID             { get; set; }
			public string NAME           { get; set; }
			public string FIO            { get; set; }
			public byte?  USERSGROUP     { get; set; }
			public string Email          { get; set; }
			public string Status         { get; set; }
			public string StatusName     { get; set; }
			public int?   DepartmentId   { get; set; }
			public int?   RoleId         { get; set; }
			public string DepartmentName { get; set; }
			public string RoleName       { get; set; }
		}

		#endregion

		#region UtCurrencyExchangeRateCreate

		public static int UtCurrencyExchangeRateCreate(this ComparerDataContext dataConnection, int? @CurrencyId, DateTime? @UtDate, decimal? @Rate, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@CurrencyId", @CurrencyId, LinqToDB.DataType.Int32),
				new DataParameter("@UtDate",   @UtDate,   LinqToDB.DataType.Date),
				new DataParameter("@Rate",     @Rate,     LinqToDB.DataType.Decimal),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UtCurrencyExchangeRateCreate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region UtCurrencyExchangeRateEdit

		public static int UtCurrencyExchangeRateEdit(this ComparerDataContext dataConnection, int? @Id, decimal? @Rate, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@Rate",     @Rate,     LinqToDB.DataType.Decimal),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UtCurrencyExchangeRateEdit]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region UtCurrencyExchangeRateHistoryView

		public static IEnumerable<UtCurrencyExchangeRateHistoryViewResult> UtCurrencyExchangeRateHistoryView(this ComparerDataContext dataConnection, DateTime? @DateFrom, DateTime? @DateTo, int? @CurrencyId)
		{
			var parameters = new []
			{
				new DataParameter("@DateFrom",   @DateFrom,   LinqToDB.DataType.Date),
				new DataParameter("@DateTo",     @DateTo,     LinqToDB.DataType.Date),
				new DataParameter("@CurrencyId", @CurrencyId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<UtCurrencyExchangeRateHistoryViewResult>("[dbo].[UtCurrencyExchangeRateHistoryView]", parameters);
		}

		public partial class UtCurrencyExchangeRateHistoryViewResult
		{
			public int      Id                    { get; set; }
			public DateTime UtDate                { get; set; }
			public DateTime CreatedDate           { get; set; }
			public decimal  CurrencyExchangeRates { get; set; }
			public string   CurrencyName          { get; set; }
			public int      CurrencyId            { get; set; }
		}

		#endregion

		#region UtDoubtfulPriceDocumentsView

		public static IEnumerable<UtDoubtfulPriceDocumentsViewResult> UtDoubtfulPriceDocumentsView(this ComparerDataContext dataConnection, string @DocNumber, DateTime? @DateFrom, DateTime? @DateTo, int? @ReasonId, int? @DocTypeId, int? @PriceTypeId, int? @Sku)
		{
			var parameters = new []
			{
				new DataParameter("@DocNumber",   @DocNumber,   LinqToDB.DataType.VarChar)
				{
					Size = 64
				},
				new DataParameter("@DateFrom",    @DateFrom,    LinqToDB.DataType.DateTime),
				new DataParameter("@DateTo",      @DateTo,      LinqToDB.DataType.DateTime),
				new DataParameter("@ReasonId",    @ReasonId,    LinqToDB.DataType.Int32),
				new DataParameter("@DocTypeId",   @DocTypeId,   LinqToDB.DataType.Int32),
				new DataParameter("@PriceTypeId", @PriceTypeId, LinqToDB.DataType.Int32),
				new DataParameter("@Sku",         @Sku,         LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<UtDoubtfulPriceDocumentsViewResult>("[dbo].[UtDoubtfulPriceDocumentsView]", parameters);
		}

		public partial class UtDoubtfulPriceDocumentsViewResult
		{
			public int      Id          { get; set; }
			public string   Number      { get; set; }
			public DateTime Date        { get; set; }
			public DateTime CreatedDate { get; set; }
			public int      Type        { get; set; }
			public int?     ReasonId    { get; set; }
			public DateTime DoubtDate   { get; set; }
		}

		#endregion

		#region UTExportOrderInvoiceSummaryBegin

		public static IEnumerable<UTExportOrderInvoiceSummaryBeginResult> UTExportOrderInvoiceSummaryBegin(this ComparerDataContext dataConnection, ref long? @SessionId)
		{
			var parameters = new []
			{
				new DataParameter("@SessionId", @SessionId, LinqToDB.DataType.Int64)
				{
					Direction = ParameterDirection.InputOutput
				}
			};

			var ret = dataConnection.QueryProc<UTExportOrderInvoiceSummaryBeginResult>("[dbo].[UTExportOrderInvoiceSummaryBegin]", parameters).ToList();

			@SessionId = Converter.ChangeTypeTo<long?>(parameters[0].Value);

			return ret;
		}

		public partial class UTExportOrderInvoiceSummaryBeginResult
		{
			public long? SessionId { get; set; }
		}

		#endregion

		#region UTExportOrderInvoiceSummaryEnd

		public static int UTExportOrderInvoiceSummaryEnd(this ComparerDataContext dataConnection, long? @SessionId, int? @Status, string @Comment)
		{
			var parameters = new []
			{
				new DataParameter("@SessionId", @SessionId, LinqToDB.DataType.Int64),
				new DataParameter("@Status",    @Status,    LinqToDB.DataType.Int32),
				new DataParameter("@Comment",   @Comment,   LinqToDB.DataType.NVarChar)
				{
					Size = 500
				}
			};

			return dataConnection.ExecuteProc("[dbo].[UTExportOrderInvoiceSummaryEnd]", parameters);
		}

		#endregion

		#region UTExportOrdersEnd

		public static int UTExportOrdersEnd(this ComparerDataContext dataConnection, long? @SessionId, int? @Status, string @Comment)
		{
			var parameters = new []
			{
				new DataParameter("@SessionId", @SessionId, LinqToDB.DataType.Int64),
				new DataParameter("@Status",    @Status,    LinqToDB.DataType.Int32),
				new DataParameter("@Comment",   @Comment,   LinqToDB.DataType.NVarChar)
				{
					Size = 500
				}
			};

			return dataConnection.ExecuteProc("[dbo].[UTExportOrdersEnd]", parameters);
		}

		#endregion

		#region UTExportRozlivEnd

		public static int UTExportRozlivEnd(this ComparerDataContext dataConnection, long? @SessionId, int? @Status, string @Comment)
		{
			var parameters = new []
			{
				new DataParameter("@SessionId", @SessionId, LinqToDB.DataType.Int64),
				new DataParameter("@Status",    @Status,    LinqToDB.DataType.Int32),
				new DataParameter("@Comment",   @Comment,   LinqToDB.DataType.NVarChar)
				{
					Size = 500
				}
			};

			return dataConnection.ExecuteProc("[dbo].[UTExportRozlivEnd]", parameters);
		}

		#endregion

		#region UTOrderInvoiceSummaryCreate

		public static int UTOrderInvoiceSummaryCreate(this ComparerDataContext dataConnection, Guid? @InvoicePublicId, Guid? @OrderId, ref int? @NewId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@InvoicePublicId", @InvoicePublicId, LinqToDB.DataType.Guid),
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Guid),
				new DataParameter("@NewId",    @NewId,    LinqToDB.DataType.Int32)
				{
					Direction = ParameterDirection.InputOutput
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UTOrderInvoiceSummaryCreate]", parameters);

			@NewId    = Converter.ChangeTypeTo<int?>  (parameters[2].Value);
			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[3].Value);

			return ret;
		}

		#endregion

		#region UtPriceCreate

		public static int UtPriceCreate(this ComparerDataContext dataConnection, int? @Sku, double? @Price, int? @TypeId, int? @DocumentId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Sku",      @Sku,      LinqToDB.DataType.Int32),
				new DataParameter("@Price",    @Price,    LinqToDB.DataType.Double),
				new DataParameter("@TypeId",   @TypeId,   LinqToDB.DataType.Int32),
				new DataParameter("@DocumentId", @DocumentId, LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UtPriceCreate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[4].Value);

			return ret;
		}

		#endregion

		#region UtPriceDelete

		public static int UtPriceDelete(this ComparerDataContext dataConnection, int? @Id, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UtPriceDelete]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region UtPriceDocumentArchive

		public static int UtPriceDocumentArchive(this ComparerDataContext dataConnection, int? @Id, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UtPriceDocumentArchive]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region UtPriceDocumentsView

		public static IEnumerable<UtPriceDocument> UtPriceDocumentsView(this ComparerDataContext dataConnection, string @Number, DateTime? @CreatedFrom, DateTime? @CreatedTo, int? @TypeId, int? @PriceTypeId, int? @Sku)
		{
			var parameters = new []
			{
				new DataParameter("@Number",      @Number,      LinqToDB.DataType.NVarChar)
				{
					Size = 64
				},
				new DataParameter("@CreatedFrom", @CreatedFrom, LinqToDB.DataType.DateTime),
				new DataParameter("@CreatedTo",   @CreatedTo,   LinqToDB.DataType.DateTime),
				new DataParameter("@TypeId",      @TypeId,      LinqToDB.DataType.Int32),
				new DataParameter("@PriceTypeId", @PriceTypeId, LinqToDB.DataType.Int32),
				new DataParameter("@Sku",         @Sku,         LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<UtPriceDocument>("[dbo].[UtPriceDocumentsView]", parameters);
		}

		#endregion

		#region UtPriceHistoryView

		public static IEnumerable<UtPriceHistoryViewResult> UtPriceHistoryView(this ComparerDataContext dataConnection, Guid? @ProductId, DateTime? @DateFrom, DateTime? @DateTo, int? @PriceTypeId)
		{
			var parameters = new []
			{
				new DataParameter("@ProductId",   @ProductId,   LinqToDB.DataType.Guid),
				new DataParameter("@DateFrom",    @DateFrom,    LinqToDB.DataType.DateTime),
				new DataParameter("@DateTo",      @DateTo,      LinqToDB.DataType.DateTime),
				new DataParameter("@PriceTypeId", @PriceTypeId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<UtPriceHistoryViewResult>("[dbo].[UtPriceHistoryView]", parameters);
		}

		public partial class UtPriceHistoryViewResult
		{
			public int      DocId       { get; set; }
			public DateTime PriceDate   { get; set; }
			public int      Id          { get; set; }
			public Guid     ProductId   { get; set; }
			public double   Price       { get; set; }
			public int      PriceTypeId { get; set; }
			public int      CurrencyId  { get; set; }
			public string   PriceType   { get; set; }
			public string   Currency    { get; set; }
		}

		#endregion

		#region UtPriceHistoryViewV2

		public static IEnumerable<UtPriceHistoryViewV2Result> UtPriceHistoryViewV2(this ComparerDataContext dataConnection, Guid? @ProductId, int? @ProductSKU, DateTime? @DateFrom, DateTime? @DateTo, int? @PriceTypeId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ProductId", @ProductId, LinqToDB.DataType.Guid),
				new DataParameter("@ProductSKU", @ProductSKU, LinqToDB.DataType.Int32),
				new DataParameter("@DateFrom", @DateFrom, LinqToDB.DataType.DateTime),
				new DataParameter("@DateTo",   @DateTo,   LinqToDB.DataType.DateTime),
				new DataParameter("@PriceTypeId", @PriceTypeId, LinqToDB.DataType.Int32),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 2000
				}
			};

			var ret = dataConnection.QueryProc<UtPriceHistoryViewV2Result>("[dbo].[UtPriceHistoryView_v2]", parameters).ToList();

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[5].Value);

			return ret;
		}

		public partial class UtPriceHistoryViewV2Result
		{
			public int      DocumentId     { get; set; }
			public string   DocumentNumber { get; set; }
			public DateTime PriceDate      { get; set; }
			public DateTime CreatedDate    { get; set; }
			public int      Id             { get; set; }
			public Guid     ProductId      { get; set; }
			public double   Price          { get; set; }
			public int      PriceTypeId    { get; set; }
			public int      CurrencyId     { get; set; }
			public string   PriceType      { get; set; }
			public string   Currency       { get; set; }
		}

		#endregion

		#region UtPricesView

		public static IEnumerable<UtPricesViewResult> UtPricesView(this ComparerDataContext dataConnection, int? @DocumentId)
		{
			var parameters = new []
			{
				new DataParameter("@DocumentId", @DocumentId, LinqToDB.DataType.Int32)
			};

			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new UtPricesViewResult
				{
					Id          = Converter.ChangeTypeTo<int>     (dataReader.GetValue(0), ms),
					ProductId   = Converter.ChangeTypeTo<Guid>    (dataReader.GetValue(1), ms),
					Price       = Converter.ChangeTypeTo<double>  (dataReader.GetValue(2), ms),
					Column4     = Converter.ChangeTypeTo<int>     (dataReader.GetValue(3), ms),
					CreatedDate = Converter.ChangeTypeTo<DateTime>(dataReader.GetValue(4), ms),
				},
				"[dbo].[UtPricesView]", parameters);
		}

		public partial class UtPricesViewResult
		{
			             public int      Id          { get; set; }
			             public Guid     ProductId   { get; set; }
			             public double   Price       { get; set; }
			[Column("")] public int      Column4     { get; set; }
			             public DateTime CreatedDate { get; set; }
		}

		#endregion

		#region UtPriceTypeCreate

		public static int UtPriceTypeCreate(this ComparerDataContext dataConnection, int? @Id, string @Name, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int32),
				new DataParameter("@Name",     @Name,     LinqToDB.DataType.VarChar)
				{
					Size = 64
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 255
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[UtPriceTypeCreate]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region UtPriceTypesView

		public static IEnumerable<UtPriceType> UtPriceTypesView(this ComparerDataContext dataConnection)
		{
			return dataConnection.QueryProc<UtPriceType>("[dbo].[UtPriceTypesView]");
		}

		#endregion

		#region VoximplantOrderEdit

		public static int VoximplantOrderEdit(this ComparerDataContext dataConnection, Guid? @OrderId, int? @StatusId, string @Error)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Guid),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@Error",    @Error,    LinqToDB.DataType.NVarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[VoximplantOrderEdit]", parameters);
		}

		#endregion

		#region VoxplantOrderSave

		public static int VoxplantOrderSave(this ComparerDataContext dataConnection, Guid? @OrderId, int? @StatusId, DateTime? @ChangeDate)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",    @OrderId,    LinqToDB.DataType.Guid),
				new DataParameter("@StatusId",   @StatusId,   LinqToDB.DataType.Int32),
				new DataParameter("@ChangeDate", @ChangeDate, LinqToDB.DataType.DateTime)
			};

			return dataConnection.ExecuteProc("[dbo].[VoxplantOrderSave]", parameters);
		}

		#endregion

		#region VoxplantOrderSaveV2

		public static int VoxplantOrderSaveV2(this ComparerDataContext dataConnection, Guid? @OrderId, int? @StatusId, int? @Scenario)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Guid),
				new DataParameter("@StatusId", @StatusId, LinqToDB.DataType.Int32),
				new DataParameter("@Scenario", @Scenario, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[VoxplantOrderSave_v2]", parameters);
		}

		#endregion

		#region WhatsAppMessageStatusEdit

		public static int WhatsAppMessageStatusEdit(this ComparerDataContext dataConnection, string @ExternalMessageId, int? @StatusId, int? @ErrorCode, string @ErrorDescription)
		{
			var parameters = new []
			{
				new DataParameter("@ExternalMessageId", @ExternalMessageId, LinqToDB.DataType.VarChar)
				{
					Size = 36
				},
				new DataParameter("@StatusId",          @StatusId,          LinqToDB.DataType.Int32),
				new DataParameter("@ErrorCode",         @ErrorCode,         LinqToDB.DataType.Int32),
				new DataParameter("@ErrorDescription",  @ErrorDescription,  LinqToDB.DataType.VarChar)
				{
					Size = 4000
				}
			};

			return dataConnection.ExecuteProc("[dbo].[WhatsAppMessageStatusEdit]", parameters);
		}

		#endregion

		#region WhatsAppMessageToBufferSave

		public static int WhatsAppMessageToBufferSave(this ComparerDataContext dataConnection, string @ExternalMessageId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@ExternalMessageId", @ExternalMessageId, LinqToDB.DataType.VarChar)
				{
					Size = 36
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.VarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[WhatsAppMessageToBufferSave]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[1].Value);

			return ret;
		}

		#endregion

		#region WhatsAppOrderMessageSave

		public static int WhatsAppOrderMessageSave(this ComparerDataContext dataConnection, Guid? @OrderId, string @ExternalMessageId, int? @MessageStatusId, int? @MessageTemplateId, string @PhoneNumber, Guid? @AuthorId, string @Message, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",  @OrderId,  LinqToDB.DataType.Guid),
				new DataParameter("@ExternalMessageId", @ExternalMessageId, LinqToDB.DataType.VarChar)
				{
					Size = 36
				},
				new DataParameter("@MessageStatusId", @MessageStatusId, LinqToDB.DataType.Int32),
				new DataParameter("@MessageTemplateId", @MessageTemplateId, LinqToDB.DataType.Int32),
				new DataParameter("@PhoneNumber", @PhoneNumber, LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@Message",  @Message,  LinqToDB.DataType.NVarChar)
				{
					Size = -1
				},
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.VarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[WhatsAppOrderMessageSave]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[7].Value);

			return ret;
		}

		#endregion

		#region WhatsAppOrderMessagesHistoryView

		public static IEnumerable<WhatsAppOrderMessagesHistoryViewResult> WhatsAppOrderMessagesHistoryView(this ComparerDataContext dataConnection, Guid? @OrderId, int? @TemplateId)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId",    @OrderId,    LinqToDB.DataType.Guid),
				new DataParameter("@TemplateId", @TemplateId, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<WhatsAppOrderMessagesHistoryViewResult>("[dbo].[WhatsAppOrderMessagesHistoryView]", parameters);
		}

		public partial class WhatsAppOrderMessagesHistoryViewResult
		{
			public int      Id               { get; set; }
			public Guid     OrderId          { get; set; }
			public string   ExternalId       { get; set; }
			public string   PhoneNumber      { get; set; }
			public int      StatusId         { get; set; }
			public DateTime CreatedDate      { get; set; }
			public int?     ErrorCode        { get; set; }
			public string   ErrorDescription { get; set; }
			public int      TemplateId       { get; set; }
			public string   TemplateName     { get; set; }
			public Guid     AuthorId         { get; set; }
			public string   AuthorName       { get; set; }
		}

		#endregion

		#region WMSOrderContainersView

		public static IEnumerable<WMSOrderContainersViewResult> WMSOrderContainersView(this ComparerDataContext dataConnection, Guid? @OrderId)
		{
			var parameters = new []
			{
				new DataParameter("@OrderId", @OrderId, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<WMSOrderContainersViewResult>("[dbo].[WMSOrderContainersView]", parameters);
		}

		public partial class WMSOrderContainersViewResult
		{
			public string Number      { get; set; }
			public string CellAddress { get; set; }
		}

		#endregion

		#region WmsReceiptDocumentItemsView

		public static IEnumerable<WmsReceiptDocumentItemsViewResult> WmsReceiptDocumentItemsView(this ComparerDataContext dataConnection, long? @DocId)
		{
			var parameters = new []
			{
				new DataParameter("@DocId", @DocId, LinqToDB.DataType.Int64)
			};

			return dataConnection.QueryProc<WmsReceiptDocumentItemsViewResult>("[dbo].[WmsReceiptDocumentItemsView]", parameters);
		}

		public partial class WmsReceiptDocumentItemsViewResult
		{
			public long   Id          { get; set; }
			public long   DocId       { get; set; }
			public Guid   ProductId   { get; set; }
			public int    Sku         { get; set; }
			public int    Quantity    { get; set; }
			public double Price       { get; set; }
			public string BrandName   { get; set; }
			public string ProductName { get; set; }
		}

		#endregion

		#region WMSReceiptDocumentViewV3

		public static IEnumerable<WMSReceiptDocumentViewV3Result> WMSReceiptDocumentViewV3(this ComparerDataContext dataConnection, long? @Id, Guid? @PublicId)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<WMSReceiptDocumentViewV3Result>("[dbo].[WMSReceiptDocumentView_v3]", parameters);
		}

		public partial class WMSReceiptDocumentViewV3Result
		{
			public long     Id            { get; set; }
			public Guid     PublicId      { get; set; }
			public string   Number        { get; set; }
			public DateTime CreateDate    { get; set; }
			public DateTime WmsCreateDate { get; set; }
			public int      DocSource     { get; set; }
			public string   DocSourceName { get; set; }
			public string   Comments      { get; set; }
			public bool     IsDeleted     { get; set; }
		}

		#endregion

		#region WmsShipmentDocumentCancelV3

		public static int WmsShipmentDocumentCancelV3(this ComparerDataContext dataConnection, long? @DocId, Guid? @AuthorId, ref string @ErrorMes)
		{
			var parameters = new []
			{
				new DataParameter("@DocId",    @DocId,    LinqToDB.DataType.Int64),
				new DataParameter("@AuthorId", @AuthorId, LinqToDB.DataType.Guid),
				new DataParameter("@ErrorMes", @ErrorMes, LinqToDB.DataType.NVarChar)
				{
					Direction = ParameterDirection.InputOutput,
					Size      = 4000
				}
			};

			var ret = dataConnection.ExecuteProc("[dbo].[WmsShipmentDocumentCancel_v3]", parameters);

			@ErrorMes = Converter.ChangeTypeTo<string>(parameters[2].Value);

			return ret;
		}

		#endregion

		#region WmsShipmentDocumentItemsView

		public static IEnumerable<WmsShipmentDocumentItemsViewResult> WmsShipmentDocumentItemsView(this ComparerDataContext dataConnection, long? @DocId)
		{
			var parameters = new []
			{
				new DataParameter("@DocId", @DocId, LinqToDB.DataType.Int64)
			};

			return dataConnection.QueryProc<WmsShipmentDocumentItemsViewResult>("[dbo].[WmsShipmentDocumentItemsView]", parameters);
		}

		public partial class WmsShipmentDocumentItemsViewResult
		{
			public long   Id          { get; set; }
			public long   DocId       { get; set; }
			public Guid   ProductId   { get; set; }
			public int    Sku         { get; set; }
			public int    Quantity    { get; set; }
			public string BrandName   { get; set; }
			public string ProductName { get; set; }
		}

		#endregion

		#region WMSShipmentDocumentViewV3

		public static IEnumerable<WMSShipmentDocumentViewV3Result> WMSShipmentDocumentViewV3(this ComparerDataContext dataConnection, long? @Id, Guid? @PublicId)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<WMSShipmentDocumentViewV3Result>("[dbo].[WMSShipmentDocumentView_v3]", parameters);
		}

		public partial class WMSShipmentDocumentViewV3Result
		{
			public long     Id            { get; set; }
			public Guid     PublicId      { get; set; }
			public string   Number        { get; set; }
			public DateTime CreateDate    { get; set; }
			public DateTime WmsCreateDate { get; set; }
			public DateTime ShipmentDate  { get; set; }
			public int      DirectionId   { get; set; }
			public int      StatusId      { get; set; }
			public Guid?    RouteId       { get; set; }
			public string   Comments      { get; set; }
			public bool     IsDeleted     { get; set; }
			public string   StatusName    { get; set; }
			public string   DirectionName { get; set; }
		}

		#endregion

		#region WmsShipmentOrderDocumentExists

		public static IEnumerable<WmsShipmentOrderDocumentExistsResult> WmsShipmentOrderDocumentExists(this ComparerDataContext dataConnection, string @Number)
		{
			var parameters = new []
			{
				new DataParameter("@Number", @Number, LinqToDB.DataType.VarChar)
				{
					Size = 50
				}
			};

			return dataConnection.QueryProc<WmsShipmentOrderDocumentExistsResult>("[dbo].[WmsShipmentOrderDocumentExists]", parameters);
		}

		public partial class WmsShipmentOrderDocumentExistsResult
		{
			public bool? Exists { get; set; }
		}

		#endregion

		#region WmsShipmentOrderDocumentHistoryView

		public static IEnumerable<WmsShipmentOrderDocumentHistoryViewResult> WmsShipmentOrderDocumentHistoryView(this ComparerDataContext dataConnection, long? @DocId)
		{
			var parameters = new []
			{
				new DataParameter("@DocId", @DocId, LinqToDB.DataType.Int64)
			};

			return dataConnection.QueryProc<WmsShipmentOrderDocumentHistoryViewResult>("[dbo].[WmsShipmentOrderDocumentHistoryView]", parameters);
		}

		public partial class WmsShipmentOrderDocumentHistoryViewResult
		{
			public long     DocId         { get; set; }
			public string   Number        { get; set; }
			public DateTime CreateDate    { get; set; }
			public DateTime ChangedDate   { get; set; }
			public int      StatusId      { get; set; }
			public int      DirectionId   { get; set; }
			public Guid     AuthorId      { get; set; }
			public bool     IsDeleted     { get; set; }
			public bool     IsPartial     { get; set; }
			public bool     IsShipped     { get; set; }
			public string   StatusName    { get; set; }
			public string   DirectionName { get; set; }
			public string   AuthorName    { get; set; }
		}

		#endregion

		#region WmsShipmentOrderDocumentItemsView

		public static IEnumerable<WmsShipmentOrderDocumentItemsViewResult> WmsShipmentOrderDocumentItemsView(this ComparerDataContext dataConnection, long? @DocId)
		{
			var parameters = new []
			{
				new DataParameter("@DocId", @DocId, LinqToDB.DataType.Int64)
			};

			return dataConnection.QueryProc<WmsShipmentOrderDocumentItemsViewResult>("[dbo].[WmsShipmentOrderDocumentItemsView]", parameters);
		}

		public partial class WmsShipmentOrderDocumentItemsViewResult
		{
			public long   Id          { get; set; }
			public long   DocId       { get; set; }
			public Guid   ProductId   { get; set; }
			public int    Sku         { get; set; }
			public int    Quantity    { get; set; }
			public double Price       { get; set; }
			public string BrandName   { get; set; }
			public string ProductName { get; set; }
		}

		#endregion

		#region WmsShipmentOrderDocumentsView

		public static IEnumerable<WmsShipmentOrderDocumentsViewResult> WmsShipmentOrderDocumentsView(this ComparerDataContext dataConnection, string @Number, DateTime? @DateFrom, DateTime? @DateTo, int? @Direction, int? @Status)
		{
			var parameters = new []
			{
				new DataParameter("@Number",    @Number,    LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@DateFrom",  @DateFrom,  LinqToDB.DataType.Date),
				new DataParameter("@DateTo",    @DateTo,    LinqToDB.DataType.Date),
				new DataParameter("@Direction", @Direction, LinqToDB.DataType.Int32),
				new DataParameter("@Status",    @Status,    LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<WmsShipmentOrderDocumentsViewResult>("[dbo].[WmsShipmentOrderDocumentsView]", parameters);
		}

		public partial class WmsShipmentOrderDocumentsViewResult
		{
			public long      DocId           { get; set; }
			public string    Number          { get; set; }
			public DateTime  CreateDate      { get; set; }
			public DateTime  ReportDate      { get; set; }
			public int       StatusId        { get; set; }
			public int       DirectionId     { get; set; }
			public Guid      AuthorId        { get; set; }
			public string    Comments        { get; set; }
			public Guid      ClientId        { get; set; }
			public int       ImportanceLevel { get; set; }
			public bool      IsDeleted       { get; set; }
			public bool      IsPartial       { get; set; }
			public bool      IsShipped       { get; set; }
			public Guid      RouteId         { get; set; }
			public DateTime? ShipmentDate    { get; set; }
			public Guid?     OrderSource     { get; set; }
			public Guid      PublicId        { get; set; }
			public string    StatusName      { get; set; }
			public string    DirectionName   { get; set; }
			public string    AuthorName      { get; set; }
		}

		#endregion

		#region WmsShipmentOrderDocumentView

		public static IEnumerable<WmsShipmentOrderDocumentViewResult> WmsShipmentOrderDocumentView(this ComparerDataContext dataConnection, long? @DocId, Guid? @OrderId)
		{
			var parameters = new []
			{
				new DataParameter("@DocId",   @DocId,   LinqToDB.DataType.Int64),
				new DataParameter("@OrderId", @OrderId, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<WmsShipmentOrderDocumentViewResult>("[dbo].[WmsShipmentOrderDocumentView]", parameters);
		}

		public partial class WmsShipmentOrderDocumentViewResult
		{
			public long      DocId           { get; set; }
			public string    Number          { get; set; }
			public DateTime  CreateDate      { get; set; }
			public DateTime  ReportDate      { get; set; }
			public int       StatusId        { get; set; }
			public int       DirectionId     { get; set; }
			public Guid      AuthorId        { get; set; }
			public string    Comments        { get; set; }
			public Guid      ClientId        { get; set; }
			public int       ImportanceLevel { get; set; }
			public bool      IsDeleted       { get; set; }
			public bool      IsPartial       { get; set; }
			public bool      IsShipped       { get; set; }
			public Guid      RouteId         { get; set; }
			public DateTime? ShipmentDate    { get; set; }
			public Guid?     OrderSource     { get; set; }
			public Guid      PublicId        { get; set; }
			public string    StatusName      { get; set; }
			public string    DirectionName   { get; set; }
			public string    AuthorName      { get; set; }
		}

		#endregion

		#region WmsVerificationDocumentItemsView

		public static IEnumerable<WmsVerificationDocumentItemsViewResult> WmsVerificationDocumentItemsView(this ComparerDataContext dataConnection, long? @DocId)
		{
			var parameters = new []
			{
				new DataParameter("@DocId", @DocId, LinqToDB.DataType.Int64)
			};

			return dataConnection.QueryProc<WmsVerificationDocumentItemsViewResult>("[dbo].[WmsVerificationDocumentItemsView]", parameters);
		}

		public partial class WmsVerificationDocumentItemsViewResult
		{
			public long   Id          { get; set; }
			public long   DocId       { get; set; }
			public Guid   ProductId   { get; set; }
			public int    Sku         { get; set; }
			public int    Quantity    { get; set; }
			public string BrandName   { get; set; }
			public string ProductName { get; set; }
		}

		#endregion

		#region WMSVerificationDocumentViewV3

		public static IEnumerable<WMSVerificationDocumentViewV3Result> WMSVerificationDocumentViewV3(this ComparerDataContext dataConnection, long? @Id, Guid? @PublicId)
		{
			var parameters = new []
			{
				new DataParameter("@Id",       @Id,       LinqToDB.DataType.Int64),
				new DataParameter("@PublicId", @PublicId, LinqToDB.DataType.Guid)
			};

			return dataConnection.QueryProc<WMSVerificationDocumentViewV3Result>("[dbo].[WMSVerificationDocumentView_v3]", parameters);
		}

		public partial class WMSVerificationDocumentViewV3Result
		{
			public long     Id          { get; set; }
			public Guid     PublicId    { get; set; }
			public string   Number      { get; set; }
			public int      DocType     { get; set; }
			public string   DocTypeName { get; set; }
			public DateTime CreateDate  { get; set; }
			public int      Operation   { get; set; }
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region BarcodesCtrlSumm

		[Sql.Function(Name="[dbo].[BarcodesCtrlSumm]", ServerSideOnly=true)]
		public static char? BarcodesCtrlSumm(string @BarCode)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region GetSiteObjectSyncSetting

		[Sql.Function(Name="[dbo].[GetSiteObjectSyncSetting]", ServerSideOnly=true)]
		public static string GetSiteObjectSyncSetting(Guid? @SiteId, int? @ObjectTypeId, int? @SettingId)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region GetTypeCategoryOfProduct

		[Sql.Function(Name="[dbo].[GetTypeCategoryOfProduct]", ServerSideOnly=true)]
		public static string GetTypeCategoryOfProduct(Guid? @ProductId)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region PriorityForExpectedReceipt

		[Sql.Function(Name="[dbo].[PriorityForExpectedReceipt]", ServerSideOnly=true)]
		public static int? PriorityForExpectedReceipt(int? @PurchaseTasksCode)
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static ActionsProcessingHandler Find(this ITable<ActionsProcessingHandler> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActionsProcessingHandleResult Find(this ITable<ActionsProcessingHandleResult> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActionsProcessingQueue Find(this ITable<ActionsProcessingQueue> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActionsProcessingQueueArchive Find(this ITable<ActionsProcessingQueueArchive> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActivityAction Find(this ITable<ActivityAction> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActivityBatchItem Find(this ITable<ActivityBatchItem> table, long BatchId, int ActionId)
		{
			return table.FirstOrDefault(t =>
				t.BatchId  == BatchId &&
				t.ActionId == ActionId);
		}

		public static ActivityEntity Find(this ITable<ActivityEntity> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActivityProcess Find(this ITable<ActivityProcess> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActivityProcessType Find(this ITable<ActivityProcessType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActivitySource Find(this ITable<ActivitySource> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ActivityUserBatch Find(this ITable<ActivityUserBatch> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryService Find(this ITable<ApiDeliveryService> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceActionType Find(this ITable<ApiDeliveryServiceActionType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceGroup Find(this ITable<ApiDeliveryServiceGroup> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceGroupOrderLink Find(this ITable<ApiDeliveryServiceGroupOrderLink> table, Guid OrderId, int GroupId)
		{
			return table.FirstOrDefault(t =>
				t.OrderId == OrderId &&
				t.GroupId == GroupId);
		}

		public static ApiDeliveryServiceGroupsInfo Find(this ITable<ApiDeliveryServiceGroupsInfo> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceGroupStatus Find(this ITable<ApiDeliveryServiceGroupStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceOrder Find(this ITable<ApiDeliveryServiceOrder> table, Guid InnerId, string OuterId)
		{
			return table.FirstOrDefault(t =>
				t.InnerId == InnerId &&
				t.OuterId == OuterId);
		}

		public static ApiDeliveryServiceOrdersArchive Find(this ITable<ApiDeliveryServiceOrdersArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceOrdersInfo Find(this ITable<ApiDeliveryServiceOrdersInfo> table, Guid InnerId)
		{
			return table.FirstOrDefault(t =>
				t.InnerId == InnerId);
		}

		public static ApiDeliveryServiceOrderStatus Find(this ITable<ApiDeliveryServiceOrderStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceOrderStatusesHistory Find(this ITable<ApiDeliveryServiceOrderStatusesHistory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceQueue Find(this ITable<ApiDeliveryServiceQueue> table, Guid OrderId)
		{
			return table.FirstOrDefault(t =>
				t.OrderId == OrderId);
		}

		public static ApiDeliveryServiceQueueArchive Find(this ITable<ApiDeliveryServiceQueueArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceRusPostGroupCaregory Find(this ITable<ApiDeliveryServiceRusPostGroupCaregory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceRusPostGroupType Find(this ITable<ApiDeliveryServiceRusPostGroupType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServicesAccount Find(this ITable<ApiDeliveryServicesAccount> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServicesCastOrderDeliveryKind Find(this ITable<ApiDeliveryServicesCastOrderDeliveryKind> table, int ServiceId, short DeliveryKindId)
		{
			return table.FirstOrDefault(t =>
				t.ServiceId      == ServiceId &&
				t.DeliveryKindId == DeliveryKindId);
		}

		public static ApiDeliveryServicesIKN Find(this ITable<ApiDeliveryServicesIKN> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServicesIKNCondition Find(this ITable<ApiDeliveryServicesIKNCondition> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServicesIKNRule Find(this ITable<ApiDeliveryServicesIKNRule> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServicesIKNRuleCondition Find(this ITable<ApiDeliveryServicesIKNRuleCondition> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServicesIKNRuleConstraint Find(this ITable<ApiDeliveryServicesIKNRuleConstraint> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceTracker Find(this ITable<ApiDeliveryServiceTracker> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiDeliveryServiceUserAction Find(this ITable<ApiDeliveryServiceUserAction> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BarCode Find(this ITable<BarCode> table, int SKU, string BarCodeColumn)
		{
			return table.FirstOrDefault(t =>
				t.SKU           == SKU &&
				t.BarCodeColumn == BarCodeColumn);
		}

		public static BarCodesDouble Find(this ITable<BarCodesDouble> table, long SessionID, string BatchNo1РЎ, string BarCode, int SKU)
		{
			return table.FirstOrDefault(t =>
				t.SessionID  == SessionID  &&
				t.BatchNo1РЎ == BatchNo1РЎ &&
				t.BarCode    == BarCode    &&
				t.SKU        == SKU);
		}

		public static BarCodesSession Find(this ITable<BarCodesSession> table, long SessionID)
		{
			return table.FirstOrDefault(t =>
				t.SessionID == SessionID);
		}

		public static BarCodesSessionBatch Find(this ITable<BarCodesSessionBatch> table, long SessionID, string BatchNo)
		{
			return table.FirstOrDefault(t =>
				t.SessionID == SessionID &&
				t.BatchNo   == BatchNo);
		}

		public static BlackListStatus Find(this ITable<BlackListStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BQExportOrder Find(this ITable<BQExportOrder> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BQObjectType Find(this ITable<BQObjectType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BQOrderItemsLastData Find(this ITable<BQOrderItemsLastData> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BQOrdersLastData Find(this ITable<BQOrdersLastData> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BQQueue Find(this ITable<BQQueue> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BQQueueHistory Find(this ITable<BQQueueHistory> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ClientDeliveredWhatsAppTemplatesBuffer Find(this ITable<ClientDeliveredWhatsAppTemplatesBuffer> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ClientOrdersDelivery Find(this ITable<ClientOrdersDelivery> table, Guid OrderId)
		{
			return table.FirstOrDefault(t =>
				t.OrderId == OrderId);
		}

		public static ClientOrdersSync Find(this ITable<ClientOrdersSync> table, Guid OrderId)
		{
			return table.FirstOrDefault(t =>
				t.OrderId == OrderId);
		}

		public static ClientsBlackList Find(this ITable<ClientsBlackList> table, Guid ClientId)
		{
			return table.FirstOrDefault(t =>
				t.ClientId == ClientId);
		}

		public static ClientsForDelete Find(this ITable<ClientsForDelete> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ClientType Find(this ITable<ClientType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ClosestCompetitor Find(this ITable<ClosestCompetitor> table, Guid ProductId)
		{
			return table.FirstOrDefault(t =>
				t.ProductId == ProductId);
		}

		public static Competitor Find(this ITable<Competitor> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CompetitorsFeed Find(this ITable<CompetitorsFeed> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CompetitorsFeedItem Find(this ITable<CompetitorsFeedItem> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CompetitorsFeedItemsHistory Find(this ITable<CompetitorsFeedItemsHistory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CompetitorsFeedItemsOperation Find(this ITable<CompetitorsFeedItemsOperation> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CompetitorsFeedProductLink Find(this ITable<CompetitorsFeedProductLink> table, Guid ProductId, int FeedItemId)
		{
			return table.FirstOrDefault(t =>
				t.ProductId  == ProductId &&
				t.FeedItemId == FeedItemId);
		}

		public static CompetitorsFeedSetting Find(this ITable<CompetitorsFeedSetting> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CompetitorsFeedSettingsLink Find(this ITable<CompetitorsFeedSettingsLink> table, int FeedId, int SettingsId)
		{
			return table.FirstOrDefault(t =>
				t.FeedId     == FeedId &&
				t.SettingsId == SettingsId);
		}

		public static ComplectingDocument Find(this ITable<ComplectingDocument> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ComplectingDocumentsArchive Find(this ITable<ComplectingDocumentsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static ComplectingDocumentsItem Find(this ITable<ComplectingDocumentsItem> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ComplectingDocumentsItemsArchive Find(this ITable<ComplectingDocumentsItemsArchive> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Country Find(this ITable<Country> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CouriersArchive Find(this ITable<CouriersArchive> table, Guid ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static CRPTDataMatrixInternalStatus Find(this ITable<CRPTDataMatrixInternalStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CRPTDocument Find(this ITable<CRPTDocument> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CRPTDocumentInternalStatus Find(this ITable<CRPTDocumentInternalStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CRPTDocumentItem Find(this ITable<CRPTDocumentItem> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CRPTDocumentStatus Find(this ITable<CRPTDocumentStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CRPTDocumentType Find(this ITable<CRPTDocumentType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CRPTDocumentWithPurchaseTaskLink Find(this ITable<CRPTDocumentWithPurchaseTaskLink> table, int CRPTDocId, int TaskId)
		{
			return table.FirstOrDefault(t =>
				t.CRPTDocId == CRPTDocId &&
				t.TaskId    == TaskId);
		}

		public static CRPTTechCardBarcode Find(this ITable<CRPTTechCardBarcode> table, Guid ProductId, string Barcode)
		{
			return table.FirstOrDefault(t =>
				t.ProductId == ProductId &&
				t.Barcode   == Barcode);
		}

		public static CRPTWithEDODocumentLink Find(this ITable<CRPTWithEDODocumentLink> table, int CRPTDocId, int EDODocId)
		{
			return table.FirstOrDefault(t =>
				t.CRPTDocId == CRPTDocId &&
				t.EDODocId  == EDODocId);
		}

		public static Currency Find(this ITable<Currency> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DailyCurrency Find(this ITable<DailyCurrency> table, string CharCode)
		{
			return table.FirstOrDefault(t =>
				t.CharCode == CharCode);
		}

		public static DataFormat Find(this ITable<DataFormat> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTPuttingDocument Find(this ITable<DataMatrixCRPTPuttingDocument> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTPuttingDocumentItem Find(this ITable<DataMatrixCRPTPuttingDocumentItem> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTPuttingDocumentsArchive Find(this ITable<DataMatrixCRPTPuttingDocumentsArchive> table, int Id, int DocId)
		{
			return table.FirstOrDefault(t =>
				t.Id    == Id &&
				t.DocId == DocId);
		}

		public static DataMatrixCRPTPuttingQueue Find(this ITable<DataMatrixCRPTPuttingQueue> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTPuttingQueueArchive Find(this ITable<DataMatrixCRPTPuttingQueueArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTWithdrawalDocument Find(this ITable<DataMatrixCRPTWithdrawalDocument> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTWithdrawalDocumentAction Find(this ITable<DataMatrixCRPTWithdrawalDocumentAction> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTWithdrawalDocumentCRPTStatus Find(this ITable<DataMatrixCRPTWithdrawalDocumentCRPTStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTWithdrawalDocumentItem Find(this ITable<DataMatrixCRPTWithdrawalDocumentItem> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTWithdrawalDocumentsArchive Find(this ITable<DataMatrixCRPTWithdrawalDocumentsArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTWithdrawalDocumentStatus Find(this ITable<DataMatrixCRPTWithdrawalDocumentStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DataMatrixCRPTWithdrawalDocumentType Find(this ITable<DataMatrixCRPTWithdrawalDocumentType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DebugFile Find(this ITable<DebugFile> table, int SessionID, int FileID)
		{
			return table.FirstOrDefault(t =>
				t.SessionID == SessionID &&
				t.FileID    == FileID);
		}

		public static DebugParameter Find(this ITable<DebugParameter> table, int SessionID, int ParameterID)
		{
			return table.FirstOrDefault(t =>
				t.SessionID   == SessionID &&
				t.ParameterID == ParameterID);
		}

		public static DebugSession Find(this ITable<DebugSession> table, int SessionID)
		{
			return table.FirstOrDefault(t =>
				t.SessionID == SessionID);
		}

		public static DeliveryHolyday Find(this ITable<DeliveryHolyday> table, DateTime Date)
		{
			return table.FirstOrDefault(t =>
				t.Date == Date);
		}

		public static DeliveryKindsService Find(this ITable<DeliveryKindsService> table, int DeliveryServiceId, int DeliveryKindId)
		{
			return table.FirstOrDefault(t =>
				t.DeliveryServiceId == DeliveryServiceId &&
				t.DeliveryKindId    == DeliveryKindId);
		}

		public static DeliveryServicePrinterConfiguration Find(this ITable<DeliveryServicePrinterConfiguration> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Department Find(this ITable<Department> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DiscountGroup Find(this ITable<DiscountGroup> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DiscountObjectType Find(this ITable<DiscountObjectType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DiscountsGroupsLink Find(this ITable<DiscountsGroupsLink> table, int GroupId, int DiscountId)
		{
			return table.FirstOrDefault(t =>
				t.GroupId    == GroupId &&
				t.DiscountId == DiscountId);
		}

		public static DiscountType Find(this ITable<DiscountType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DiscountValuesToDiscountId Find(this ITable<DiscountValuesToDiscountId> table, int DiscountId, double Value)
		{
			return table.FirstOrDefault(t =>
				t.DiscountId == DiscountId &&
				t.Value      == Value);
		}

		public static DISTRIBUTOR Find(this ITable<DISTRIBUTOR> table, Guid ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static DistributorsApiOrder Find(this ITable<DistributorsApiOrder> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DistributorsApiOrdersArchive Find(this ITable<DistributorsApiOrdersArchive> table, int Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static DistributorsApiOrdersContent Find(this ITable<DistributorsApiOrdersContent> table, int OrderId, Guid ProductId)
		{
			return table.FirstOrDefault(t =>
				t.OrderId   == OrderId &&
				t.ProductId == ProductId);
		}

		public static DistributorsApiOrdersContentArchive Find(this ITable<DistributorsApiOrdersContentArchive> table, int OrderId, Guid ProductId, DateTime ArchivDate)
		{
			return table.FirstOrDefault(t =>
				t.OrderId    == OrderId   &&
				t.ProductId  == ProductId &&
				t.ArchivDate == ArchivDate);
		}

		public static DistributorsApiSetting Find(this ITable<DistributorsApiSetting> table, Guid DistributorId)
		{
			return table.FirstOrDefault(t =>
				t.DistributorId == DistributorId);
		}

		public static EmailSiteStatusTemplate Find(this ITable<EmailSiteStatusTemplate> table, Guid SiteId, byte StatusId, int TemplateId)
		{
			return table.FirstOrDefault(t =>
				t.SiteId     == SiteId   &&
				t.StatusId   == StatusId &&
				t.TemplateId == TemplateId);
		}

		public static ExcludedOrdersForReserve Find(this ITable<ExcludedOrdersForReserve> table, Guid OrderId)
		{
			return table.FirstOrDefault(t =>
				t.OrderId == OrderId);
		}

		public static ExportBarcode Find(this ITable<ExportBarcode> table, long Id, string Barcode)
		{
			return table.FirstOrDefault(t =>
				t.Id      == Id &&
				t.Barcode == Barcode);
		}

		public static ExportBarcodesSession Find(this ITable<ExportBarcodesSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportBarcodesSessionItem Find(this ITable<ExportBarcodesSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportBarcodesSessionItemsArchive Find(this ITable<ExportBarcodesSessionItemsArchive> table, long SessionId, long Id, string Barcode)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id        &&
				t.Barcode   == Barcode);
		}

		public static ExportBarcodesSessionsArchive Find(this ITable<ExportBarcodesSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportBrand Find(this ITable<ExportBrand> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportBrandsSession Find(this ITable<ExportBrandsSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportBrandsSessionItem Find(this ITable<ExportBrandsSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportBrandsSessionItemsArchive Find(this ITable<ExportBrandsSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportBrandsSessionsArchive Find(this ITable<ExportBrandsSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportClient Find(this ITable<ExportClient> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportClientsSession Find(this ITable<ExportClientsSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportClientsSessionItem Find(this ITable<ExportClientsSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportClientsSessionItemsArchive Find(this ITable<ExportClientsSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportClientsSessionsArchive Find(this ITable<ExportClientsSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportDistributor Find(this ITable<ExportDistributor> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportDistributorsExchangeId Find(this ITable<ExportDistributorsExchangeId> table, Guid InnerId, Guid OuterId)
		{
			return table.FirstOrDefault(t =>
				t.InnerId == InnerId &&
				t.OuterId == OuterId);
		}

		public static ExportDistributorsSession Find(this ITable<ExportDistributorsSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportDistributorsSessionItem Find(this ITable<ExportDistributorsSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportDistributorsSessionItemsArchive Find(this ITable<ExportDistributorsSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportDistributorsSessionsArchive Find(this ITable<ExportDistributorsSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportOrder Find(this ITable<ExportOrder> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportOrderInvoiceSummary Find(this ITable<ExportOrderInvoiceSummary> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportOrderInvoiceSummarySession Find(this ITable<ExportOrderInvoiceSummarySession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportOrderInvoiceSummarySessionItem Find(this ITable<ExportOrderInvoiceSummarySessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportOrderInvoiceSummarySessionItemsArchive Find(this ITable<ExportOrderInvoiceSummarySessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportOrderInvoiceSummarySessionsArchive Find(this ITable<ExportOrderInvoiceSummarySessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportOrdersSession Find(this ITable<ExportOrdersSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportOrdersSessionItem Find(this ITable<ExportOrdersSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportOrdersSessionItemsArchive Find(this ITable<ExportOrdersSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportOrdersSessionsArchive Find(this ITable<ExportOrdersSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportOrderWM Find(this ITable<ExportOrderWM> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportOrderWMSSession Find(this ITable<ExportOrderWMSSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportOrderWMSSessionItem Find(this ITable<ExportOrderWMSSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportOrderWMSSessionItemsArchive Find(this ITable<ExportOrderWMSSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportOrderWMSSessionsArchive Find(this ITable<ExportOrderWMSSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportProduct Find(this ITable<ExportProduct> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportProductsSession Find(this ITable<ExportProductsSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportProductsSessionItem Find(this ITable<ExportProductsSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportProductsSessionItemsArchive Find(this ITable<ExportProductsSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportProductsSessionsArchive Find(this ITable<ExportProductsSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportPurchaseTask Find(this ITable<ExportPurchaseTask> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportPurchaseTasksSession Find(this ITable<ExportPurchaseTasksSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportPurchaseTasksSessionItem Find(this ITable<ExportPurchaseTasksSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportPurchaseTasksSessionItemsArchive Find(this ITable<ExportPurchaseTasksSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportPurchaseTasksSessionsArchive Find(this ITable<ExportPurchaseTasksSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportRefundTask Find(this ITable<ExportRefundTask> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportRefundTasksSession Find(this ITable<ExportRefundTasksSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportRefundTasksSessionItem Find(this ITable<ExportRefundTasksSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportRefundTasksSessionItemsArchive Find(this ITable<ExportRefundTasksSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportRefundTasksSessionsArchive Find(this ITable<ExportRefundTasksSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportRozliv Find(this ITable<ExportRozliv> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ExportRozlivSession Find(this ITable<ExportRozlivSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static ExportRozlivSessionItem Find(this ITable<ExportRozlivSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportRozlivSessionItemsArchive Find(this ITable<ExportRozlivSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static ExportRozlivSessionsArchive Find(this ITable<ExportRozlivSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static Holiday Find(this ITable<Holiday> table, DateTime Date)
		{
			return table.FirstOrDefault(t =>
				t.Date == Date);
		}

		public static HttpMethod Find(this ITable<HttpMethod> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static KitDefinition Find(this ITable<KitDefinition> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static LINK Find(this ITable<LINK> table, Guid ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static MANUFACTURER Find(this ITable<MANUFACTURER> table, Guid ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static MonobrandKit Find(this ITable<MonobrandKit> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static MousetrapClient Find(this ITable<MousetrapClient> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static MousetrapDonorOrder Find(this ITable<MousetrapDonorOrder> table, Guid ClientId, DateTime ExportDay)
		{
			return table.FirstOrDefault(t =>
				t.ClientId  == ClientId &&
				t.ExportDay == ExportDay);
		}

		public static MousetrapExportInterval Find(this ITable<MousetrapExportInterval> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static NeedReceivedOrder Find(this ITable<NeedReceivedOrder> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ObjectSyncSetting Find(this ITable<ObjectSyncSetting> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ObjectType Find(this ITable<ObjectType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OrderExportToWmsFilter Find(this ITable<OrderExportToWmsFilter> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OrderItemsInstockQuantityCorrectHistory Find(this ITable<OrderItemsInstockQuantityCorrectHistory> table, long CorrectId, int Number, int Sku, bool IsGift, DateTime ReportDate)
		{
			return table.FirstOrDefault(t =>
				t.CorrectId  == CorrectId &&
				t.Number     == Number    &&
				t.Sku        == Sku       &&
				t.IsGift     == IsGift    &&
				t.ReportDate == ReportDate);
		}

		public static OrdersInstockQuantityCorrectHistory Find(this ITable<OrdersInstockQuantityCorrectHistory> table, long CorrectId)
		{
			return table.FirstOrDefault(t =>
				t.CorrectId == CorrectId);
		}

		public static OrdersReservesMovedHistory Find(this ITable<OrdersReservesMovedHistory> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OrdersWarehouseContainer Find(this ITable<OrdersWarehouseContainer> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PaymentType Find(this ITable<PaymentType> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static PRICE Find(this ITable<PRICE> table, Guid ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static PRICESRECORD Find(this ITable<PRICESRECORD> table, int RECORDINDEX)
		{
			return table.FirstOrDefault(t =>
				t.RECORDINDEX == RECORDINDEX);
		}

		public static PRODUCT Find(this ITable<PRODUCT> table, Guid ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static ProductInstockCorrectHistory Find(this ITable<ProductInstockCorrectHistory> table, int Sku, DateTime ReportDate)
		{
			return table.FirstOrDefault(t =>
				t.Sku        == Sku &&
				t.ReportDate == ReportDate);
		}

		public static ProductQuality Find(this ITable<ProductQuality> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ProductReservesChangeHistory Find(this ITable<ProductReservesChangeHistory> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ProductsQualityInstock Find(this ITable<ProductsQualityInstock> table, Guid ProductId, int QualityId)
		{
			return table.FirstOrDefault(t =>
				t.ProductId == ProductId &&
				t.QualityId == QualityId);
		}

		public static ProductsSync Find(this ITable<ProductsSync> table, Guid ProductId, Guid SiteId)
		{
			return table.FirstOrDefault(t =>
				t.ProductId == ProductId &&
				t.SiteId    == SiteId);
		}

		public static Role Find(this ITable<Role> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static RozlivUtDocument Find(this ITable<RozlivUtDocument> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static RozlivUtDocumentItem Find(this ITable<RozlivUtDocumentItem> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ShopBaseObjectType Find(this ITable<ShopBaseObjectType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ShowcaseProductsStock Find(this ITable<ShowcaseProductsStock> table, Guid SiteId, Guid ProductId)
		{
			return table.FirstOrDefault(t =>
				t.SiteId    == SiteId &&
				t.ProductId == ProductId);
		}

		public static SiteApiRequest Find(this ITable<SiteApiRequest> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SiteObjectSyncSetting Find(this ITable<SiteObjectSyncSetting> table, Guid SiteId, int ObjectTypeId, int SettingId)
		{
			return table.FirstOrDefault(t =>
				t.SiteId       == SiteId       &&
				t.ObjectTypeId == ObjectTypeId &&
				t.SettingId    == SettingId);
		}

		public static SiteProductsRule Find(this ITable<SiteProductsRule> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SiteProductsRuleObjectType Find(this ITable<SiteProductsRuleObjectType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SiteProductsRulesBrandLink Find(this ITable<SiteProductsRulesBrandLink> table, int RuleId, Guid BrandId, bool Inversion)
		{
			return table.FirstOrDefault(t =>
				t.RuleId    == RuleId  &&
				t.BrandId   == BrandId &&
				t.Inversion == Inversion);
		}

		public static SiteProductsRulesDistributorLink Find(this ITable<SiteProductsRulesDistributorLink> table, int RuleId, Guid DistributorId, bool Inversion)
		{
			return table.FirstOrDefault(t =>
				t.RuleId        == RuleId        &&
				t.DistributorId == DistributorId &&
				t.Inversion     == Inversion);
		}

		public static SiteProductsRulesProductLink Find(this ITable<SiteProductsRulesProductLink> table, int RuleId, Guid ProductId, bool Inversion)
		{
			return table.FirstOrDefault(t =>
				t.RuleId    == RuleId    &&
				t.ProductId == ProductId &&
				t.Inversion == Inversion);
		}

		public static SiteProductsRuleType Find(this ITable<SiteProductsRuleType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SitesSync Find(this ITable<SitesSync> table, Guid SiteId)
		{
			return table.FirstOrDefault(t =>
				t.SiteId == SiteId);
		}

		public static SitesSyncBlockInfo Find(this ITable<SitesSyncBlockInfo> table, Guid SiteId)
		{
			return table.FirstOrDefault(t =>
				t.SiteId == SiteId);
		}

		public static StoringScanHistory Find(this ITable<StoringScanHistory> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SUZOrder Find(this ITable<SUZOrder> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SUZOrderItem Find(this ITable<SUZOrderItem> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SUZOrderItemDataMatrix Find(this ITable<SUZOrderItemDataMatrix> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SUZPurchaseTask Find(this ITable<SUZPurchaseTask> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SUZPurchaseTaskOrder Find(this ITable<SUZPurchaseTaskOrder> table, int TaskId, int OrderId)
		{
			return table.FirstOrDefault(t =>
				t.TaskId  == TaskId &&
				t.OrderId == OrderId);
		}

		public static SUZPurchaseTaskOrdersArchive Find(this ITable<SUZPurchaseTaskOrdersArchive> table, int TaskId, int OrderId, DateTime ArchivedDate)
		{
			return table.FirstOrDefault(t =>
				t.TaskId       == TaskId  &&
				t.OrderId      == OrderId &&
				t.ArchivedDate == ArchivedDate);
		}

		public static SUZPurchaseTasksArchive Find(this ITable<SUZPurchaseTasksArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncObjectsQueue Find(this ITable<SyncObjectsQueue> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncObjectsQueueArchive Find(this ITable<SyncObjectsQueueArchive> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncProductsQueue Find(this ITable<SyncProductsQueue> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncProductsQueueArchive Find(this ITable<SyncProductsQueueArchive> table, Guid Id, DateTime SyncDate)
		{
			return table.FirstOrDefault(t =>
				t.Id       == Id &&
				t.SyncDate == SyncDate);
		}

		public static SyncProtocol Find(this ITable<SyncProtocol> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncQueueIn Find(this ITable<SyncQueueIn> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncQueueInArchive Find(this ITable<SyncQueueInArchive> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncQueueOut Find(this ITable<SyncQueueOut> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SyncQueueOutArchive Find(this ITable<SyncQueueOutArchive> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TaskScheduler Find(this ITable<TaskScheduler> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static Template Find(this ITable<Template> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TemplateType Find(this ITable<TemplateType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TracingPackage Find(this ITable<TracingPackage> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TracingPackageItem Find(this ITable<TracingPackageItem> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static USER Find(this ITable<USER> table, Guid ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static UserAction Find(this ITable<UserAction> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UserPassword Find(this ITable<UserPassword> table, Guid UserId)
		{
			return table.FirstOrDefault(t =>
				t.UserId == UserId);
		}

		public static UserSession Find(this ITable<UserSession> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UsersPlanReportCallCount Find(this ITable<UsersPlanReportCallCount> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UsersPlanReportParam Find(this ITable<UsersPlanReportParam> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UserStatus Find(this ITable<UserStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UtCurrencyExchangeRateHistory Find(this ITable<UtCurrencyExchangeRateHistory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UtDoubtfulPrice Find(this ITable<UtDoubtfulPrice> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UtDoubtfulPriceDocument Find(this ITable<UtDoubtfulPriceDocument> table, int DocId)
		{
			return table.FirstOrDefault(t =>
				t.DocId == DocId);
		}

		public static UTExportOrder Find(this ITable<UTExportOrder> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UTExportOrdersSession Find(this ITable<UTExportOrdersSession> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static UTExportOrdersSessionItem Find(this ITable<UTExportOrdersSessionItem> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static UTExportOrdersSessionItemsArchive Find(this ITable<UTExportOrdersSessionItemsArchive> table, long SessionId, long Id)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId &&
				t.Id        == Id);
		}

		public static UTExportOrdersSessionsArchive Find(this ITable<UTExportOrdersSessionsArchive> table, long SessionId)
		{
			return table.FirstOrDefault(t =>
				t.SessionId == SessionId);
		}

		public static UtPrice Find(this ITable<UtPrice> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UtPriceDocument Find(this ITable<UtPriceDocument> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UtPriceDocumentsArchive Find(this ITable<UtPriceDocumentsArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UtPricesArchive Find(this ITable<UtPricesArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static VoximplantOrder Find(this ITable<VoximplantOrder> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static VoximplantOrdersArchive Find(this ITable<VoximplantOrdersArchive> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Warehouse Find(this ITable<Warehouse> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WarehouseCell Find(this ITable<WarehouseCell> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WarehouseProductQuality Find(this ITable<WarehouseProductQuality> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WarehouseProductReserve Find(this ITable<WarehouseProductReserve> table, int WarehouseId, Guid ProductId)
		{
			return table.FirstOrDefault(t =>
				t.WarehouseId == WarehouseId &&
				t.ProductId   == ProductId);
		}

		public static WarehouseProductsStockHistory Find(this ITable<WarehouseProductsStockHistory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WarehouseShowcaseLink Find(this ITable<WarehouseShowcaseLink> table, Guid SiteId, int WarehouseId)
		{
			return table.FirstOrDefault(t =>
				t.SiteId      == SiteId &&
				t.WarehouseId == WarehouseId);
		}

		public static WarehousesStock Find(this ITable<WarehousesStock> table, int WarehouseId, Guid ProductId)
		{
			return table.FirstOrDefault(t =>
				t.WarehouseId == WarehouseId &&
				t.ProductId   == ProductId);
		}

		public static WarehousesStockQuality Find(this ITable<WarehousesStockQuality> table, int WarehouseId, Guid ProductId, int QualityId)
		{
			return table.FirstOrDefault(t =>
				t.WarehouseId == WarehouseId &&
				t.ProductId   == ProductId   &&
				t.QualityId   == QualityId);
		}

		public static WarehouseZone Find(this ITable<WarehouseZone> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WhatsAppMessageStatus Find(this ITable<WhatsAppMessageStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WhatsAppOrderMessagesHistory Find(this ITable<WhatsAppOrderMessagesHistory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WhatsAppTemplate Find(this ITable<WhatsAppTemplate> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WhatsAppTemplateMessage Find(this ITable<WhatsAppTemplateMessage> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsExpectedReceiptDocument Find(this ITable<WmsExpectedReceiptDocument> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsExpectedReceiptDocumentsArchive Find(this ITable<WmsExpectedReceiptDocumentsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsExpectedReceiptDocumentsItem Find(this ITable<WmsExpectedReceiptDocumentsItem> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsExpectedReceiptDocumentsItemsArchive Find(this ITable<WmsExpectedReceiptDocumentsItemsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsReceiptDocument Find(this ITable<WmsReceiptDocument> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsReceiptDocumentsArchive Find(this ITable<WmsReceiptDocumentsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsReceiptDocumentsItem Find(this ITable<WmsReceiptDocumentsItem> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsReceiptDocumentsItemDataMatrix Find(this ITable<WmsReceiptDocumentsItemDataMatrix> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsReceiptDocumentsItemDataMatrixesArchive Find(this ITable<WmsReceiptDocumentsItemDataMatrixesArchive> table, int Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsReceiptDocumentsItemsArchive Find(this ITable<WmsReceiptDocumentsItemsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsShipmentDocument Find(this ITable<WmsShipmentDocument> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsShipmentDocumentsArchive Find(this ITable<WmsShipmentDocumentsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsShipmentDocumentsItem Find(this ITable<WmsShipmentDocumentsItem> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsShipmentDocumentsItemsArchive Find(this ITable<WmsShipmentDocumentsItemsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsShipmentDocumentWarehouseContainer Find(this ITable<WmsShipmentDocumentWarehouseContainer> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsShipmentOrderDocument Find(this ITable<WmsShipmentOrderDocument> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsShipmentOrderDocumentDirection Find(this ITable<WmsShipmentOrderDocumentDirection> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsShipmentOrderDocumentsArchive Find(this ITable<WmsShipmentOrderDocumentsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsShipmentOrderDocumentsItem Find(this ITable<WmsShipmentOrderDocumentsItem> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsShipmentOrderDocumentsItemsArchive Find(this ITable<WmsShipmentOrderDocumentsItemsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsShipmentOrderDocumentStatus Find(this ITable<WmsShipmentOrderDocumentStatus> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsVerificationDocument Find(this ITable<WmsVerificationDocument> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsVerificationDocumentsArchive Find(this ITable<WmsVerificationDocumentsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}

		public static WmsVerificationDocumentsItem Find(this ITable<WmsVerificationDocumentsItem> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static WmsVerificationDocumentsItemsArchive Find(this ITable<WmsVerificationDocumentsItemsArchive> table, long Id, DateTime ArchiveDate)
		{
			return table.FirstOrDefault(t =>
				t.Id          == Id &&
				t.ArchiveDate == ArchiveDate);
		}
	}
}
